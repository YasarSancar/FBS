// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace AiEditor.Fb.Template
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum ValueUnion : byte
{
  NONE = 0,
  Value_Int = 1,
  Value_Float = 2,
  Value_Vector3 = 3,
};

public class ValueUnionUnion {
  public ValueUnion Type { get; set; }
  public object Value { get; set; }

  public ValueUnionUnion() {
    this.Type = ValueUnion.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public AiEditor.Fb.Template.Value_IntT AsValue_Int() { return this.As<AiEditor.Fb.Template.Value_IntT>(); }
  public AiEditor.Fb.Template.Value_FloatT AsValue_Float() { return this.As<AiEditor.Fb.Template.Value_FloatT>(); }
  public AiEditor.Fb.Template.Value_Vector3T AsValue_Vector3() { return this.As<AiEditor.Fb.Template.Value_Vector3T>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, ValueUnionUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case ValueUnion.Value_Int: return AiEditor.Fb.Template.Value_Int.Pack(builder, _o.AsValue_Int()).Value;
      case ValueUnion.Value_Float: return AiEditor.Fb.Template.Value_Float.Pack(builder, _o.AsValue_Float()).Value;
      case ValueUnion.Value_Vector3: return AiEditor.Fb.Template.Value_Vector3.Pack(builder, _o.AsValue_Vector3()).Value;
    }
  }
}

public class ValueUnionUnion_JsonConverter : Newtonsoft.Json.JsonConverter {
  public override bool CanConvert(System.Type objectType) {
    return objectType == typeof(ValueUnionUnion) || objectType == typeof(System.Collections.Generic.List<ValueUnionUnion>);
  }
  public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = value as System.Collections.Generic.List<ValueUnionUnion>;
    if (_olist != null) {
      writer.WriteStartArray();
      foreach (var _o in _olist) { this.WriteJson(writer, _o, serializer); }
      writer.WriteEndArray();
    } else {
      this.WriteJson(writer, value as ValueUnionUnion, serializer);
    }
  }
  public void WriteJson(Newtonsoft.Json.JsonWriter writer, ValueUnionUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return;
    serializer.Serialize(writer, _o.Value);
  }
  public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = existingValue as System.Collections.Generic.List<ValueUnionUnion>;
    if (_olist != null) {
      for (var _j = 0; _j < _olist.Count; ++_j) {
        reader.Read();
        _olist[_j] = this.ReadJson(reader, _olist[_j], serializer);
      }
      reader.Read();
      return _olist;
    } else {
      return this.ReadJson(reader, existingValue as ValueUnionUnion, serializer);
    }
  }
  public ValueUnionUnion ReadJson(Newtonsoft.Json.JsonReader reader, ValueUnionUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return null;
    switch (_o.Type) {
      default: break;
      case ValueUnion.Value_Int: _o.Value = serializer.Deserialize<AiEditor.Fb.Template.Value_IntT>(reader); break;
      case ValueUnion.Value_Float: _o.Value = serializer.Deserialize<AiEditor.Fb.Template.Value_FloatT>(reader); break;
      case ValueUnion.Value_Vector3: _o.Value = serializer.Deserialize<AiEditor.Fb.Template.Value_Vector3T>(reader); break;
    }
    return _o;
  }
}

public struct Value_Int : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Value_Int GetRootAsValue_Int(ByteBuffer _bb) { return GetRootAsValue_Int(_bb, new Value_Int()); }
  public static Value_Int GetRootAsValue_Int(ByteBuffer _bb, Value_Int obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Value_Int __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Value { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<AiEditor.Fb.Template.Value_Int> CreateValue_Int(FlatBufferBuilder builder,
      int value = 0) {
    builder.StartTable(1);
    Value_Int.AddValue(builder, value);
    return Value_Int.EndValue_Int(builder);
  }

  public static void StartValue_Int(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddValue(FlatBufferBuilder builder, int value) { builder.AddInt(0, value, 0); }
  public static Offset<AiEditor.Fb.Template.Value_Int> EndValue_Int(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AiEditor.Fb.Template.Value_Int>(o);
  }
  public Value_IntT UnPack() {
    var _o = new Value_IntT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Value_IntT _o) {
    _o.Value = this.Value;
  }
  public static Offset<AiEditor.Fb.Template.Value_Int> Pack(FlatBufferBuilder builder, Value_IntT _o) {
    if (_o == null) return default(Offset<AiEditor.Fb.Template.Value_Int>);
    return CreateValue_Int(
      builder,
      _o.Value);
  }
};

public class Value_IntT
{
  [Newtonsoft.Json.JsonProperty("value")]
  public int Value { get; set; }

  public Value_IntT() {
    this.Value = 0;
  }
}

public struct Value_Float : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Value_Float GetRootAsValue_Float(ByteBuffer _bb) { return GetRootAsValue_Float(_bb, new Value_Float()); }
  public static Value_Float GetRootAsValue_Float(ByteBuffer _bb, Value_Float obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Value_Float __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Value { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<AiEditor.Fb.Template.Value_Float> CreateValue_Float(FlatBufferBuilder builder,
      float value = 0.0f) {
    builder.StartTable(1);
    Value_Float.AddValue(builder, value);
    return Value_Float.EndValue_Float(builder);
  }

  public static void StartValue_Float(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddValue(FlatBufferBuilder builder, float value) { builder.AddFloat(0, value, 0.0f); }
  public static Offset<AiEditor.Fb.Template.Value_Float> EndValue_Float(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AiEditor.Fb.Template.Value_Float>(o);
  }
  public Value_FloatT UnPack() {
    var _o = new Value_FloatT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Value_FloatT _o) {
    _o.Value = this.Value;
  }
  public static Offset<AiEditor.Fb.Template.Value_Float> Pack(FlatBufferBuilder builder, Value_FloatT _o) {
    if (_o == null) return default(Offset<AiEditor.Fb.Template.Value_Float>);
    return CreateValue_Float(
      builder,
      _o.Value);
  }
};

public class Value_FloatT
{
  [Newtonsoft.Json.JsonProperty("value")]
  public float Value { get; set; }

  public Value_FloatT() {
    this.Value = 0.0f;
  }
}

public struct Value_Vector3 : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Value_Vector3 GetRootAsValue_Vector3(ByteBuffer _bb) { return GetRootAsValue_Vector3(_bb, new Value_Vector3()); }
  public static Value_Vector3 GetRootAsValue_Vector3(ByteBuffer _bb, Value_Vector3 obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Value_Vector3 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Y { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Z { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<AiEditor.Fb.Template.Value_Vector3> CreateValue_Vector3(FlatBufferBuilder builder,
      float x = 0.0f,
      float y = 0.0f,
      float z = 0.0f) {
    builder.StartTable(3);
    Value_Vector3.AddZ(builder, z);
    Value_Vector3.AddY(builder, y);
    Value_Vector3.AddX(builder, x);
    return Value_Vector3.EndValue_Vector3(builder);
  }

  public static void StartValue_Vector3(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddX(FlatBufferBuilder builder, float x) { builder.AddFloat(0, x, 0.0f); }
  public static void AddY(FlatBufferBuilder builder, float y) { builder.AddFloat(1, y, 0.0f); }
  public static void AddZ(FlatBufferBuilder builder, float z) { builder.AddFloat(2, z, 0.0f); }
  public static Offset<AiEditor.Fb.Template.Value_Vector3> EndValue_Vector3(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AiEditor.Fb.Template.Value_Vector3>(o);
  }
  public Value_Vector3T UnPack() {
    var _o = new Value_Vector3T();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Value_Vector3T _o) {
    _o.X = this.X;
    _o.Y = this.Y;
    _o.Z = this.Z;
  }
  public static Offset<AiEditor.Fb.Template.Value_Vector3> Pack(FlatBufferBuilder builder, Value_Vector3T _o) {
    if (_o == null) return default(Offset<AiEditor.Fb.Template.Value_Vector3>);
    return CreateValue_Vector3(
      builder,
      _o.X,
      _o.Y,
      _o.Z);
  }
};

public class Value_Vector3T
{
  [Newtonsoft.Json.JsonProperty("x")]
  public float X { get; set; }
  [Newtonsoft.Json.JsonProperty("y")]
  public float Y { get; set; }
  [Newtonsoft.Json.JsonProperty("z")]
  public float Z { get; set; }

  public Value_Vector3T() {
    this.X = 0.0f;
    this.Y = 0.0f;
    this.Z = 0.0f;
  }
}

public struct Element : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Element GetRootAsElement(ByteBuffer _bb) { return GetRootAsElement(_bb, new Element()); }
  public static Element GetRootAsElement(ByteBuffer _bb, Element obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Element __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public AiEditor.Fb.Template.ValueUnion ValueType { get { int o = __p.__offset(6); return o != 0 ? (AiEditor.Fb.Template.ValueUnion)__p.bb.Get(o + __p.bb_pos) : AiEditor.Fb.Template.ValueUnion.NONE; } }
  public TTable? Value<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<AiEditor.Fb.Template.Element> CreateElement(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      AiEditor.Fb.Template.ValueUnion value_type = AiEditor.Fb.Template.ValueUnion.NONE,
      int valueOffset = 0) {
    builder.StartTable(3);
    Element.AddValue(builder, valueOffset);
    Element.AddName(builder, nameOffset);
    Element.AddValueType(builder, value_type);
    return Element.EndElement(builder);
  }

  public static void StartElement(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValueType(FlatBufferBuilder builder, AiEditor.Fb.Template.ValueUnion valueType) { builder.AddByte(1, (byte)valueType, 0); }
  public static void AddValue(FlatBufferBuilder builder, int valueOffset) { builder.AddOffset(2, valueOffset, 0); }
  public static Offset<AiEditor.Fb.Template.Element> EndElement(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AiEditor.Fb.Template.Element>(o);
  }
  public ElementT UnPack() {
    var _o = new ElementT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ElementT _o) {
    _o.Name = this.Name;
    _o.Value = new AiEditor.Fb.Template.ValueUnionUnion();
    _o.Value.Type = this.ValueType;
    switch (this.ValueType) {
      default: break;
      case AiEditor.Fb.Template.ValueUnion.Value_Int:
        _o.Value.Value = this.Value<AiEditor.Fb.Template.Value_Int>().HasValue ? this.Value<AiEditor.Fb.Template.Value_Int>().Value.UnPack() : null;
        break;
      case AiEditor.Fb.Template.ValueUnion.Value_Float:
        _o.Value.Value = this.Value<AiEditor.Fb.Template.Value_Float>().HasValue ? this.Value<AiEditor.Fb.Template.Value_Float>().Value.UnPack() : null;
        break;
      case AiEditor.Fb.Template.ValueUnion.Value_Vector3:
        _o.Value.Value = this.Value<AiEditor.Fb.Template.Value_Vector3>().HasValue ? this.Value<AiEditor.Fb.Template.Value_Vector3>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<AiEditor.Fb.Template.Element> Pack(FlatBufferBuilder builder, ElementT _o) {
    if (_o == null) return default(Offset<AiEditor.Fb.Template.Element>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _value_type = _o.Value == null ? AiEditor.Fb.Template.ValueUnion.NONE : _o.Value.Type;
    var _value = _o.Value == null ? 0 : AiEditor.Fb.Template.ValueUnionUnion.Pack(builder, _o.Value);
    return CreateElement(
      builder,
      _name,
      _value_type,
      _value);
  }
};

public class ElementT
{
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("value_type")]
  private AiEditor.Fb.Template.ValueUnion ValueType {
    get {
      return this.Value != null ? this.Value.Type : AiEditor.Fb.Template.ValueUnion.NONE;
    }
    set {
      this.Value = new AiEditor.Fb.Template.ValueUnionUnion();
      this.Value.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("value")]
  [Newtonsoft.Json.JsonConverter(typeof(AiEditor.Fb.Template.ValueUnionUnion_JsonConverter))]
  public AiEditor.Fb.Template.ValueUnionUnion Value { get; set; }

  public ElementT() {
    this.Name = null;
    this.Value = null;
  }
}

public struct Enum : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Enum GetRootAsEnum(ByteBuffer _bb) { return GetRootAsEnum(_bb, new Enum()); }
  public static Enum GetRootAsEnum(ByteBuffer _bb, Enum obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Enum __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AiEditor.Fb.Template.Element? Elements(int j) { int o = __p.__offset(4); return o != 0 ? (AiEditor.Fb.Template.Element?)(new AiEditor.Fb.Template.Element()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ElementsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<AiEditor.Fb.Template.Enum> CreateEnum(FlatBufferBuilder builder,
      VectorOffset elementsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    Enum.AddElements(builder, elementsOffset);
    return Enum.EndEnum(builder);
  }

  public static void StartEnum(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddElements(FlatBufferBuilder builder, VectorOffset elementsOffset) { builder.AddOffset(0, elementsOffset.Value, 0); }
  public static VectorOffset CreateElementsVector(FlatBufferBuilder builder, Offset<AiEditor.Fb.Template.Element>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateElementsVectorBlock(FlatBufferBuilder builder, Offset<AiEditor.Fb.Template.Element>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartElementsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AiEditor.Fb.Template.Enum> EndEnum(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AiEditor.Fb.Template.Enum>(o);
  }
  public static void FinishEnumBuffer(FlatBufferBuilder builder, Offset<AiEditor.Fb.Template.Enum> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedEnumBuffer(FlatBufferBuilder builder, Offset<AiEditor.Fb.Template.Enum> offset) { builder.FinishSizePrefixed(offset.Value); }
  public EnumT UnPack() {
    var _o = new EnumT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EnumT _o) {
    _o.Elements = new List<AiEditor.Fb.Template.ElementT>();
    for (var _j = 0; _j < this.ElementsLength; ++_j) {_o.Elements.Add(this.Elements(_j).HasValue ? this.Elements(_j).Value.UnPack() : null);}
  }
  public static Offset<AiEditor.Fb.Template.Enum> Pack(FlatBufferBuilder builder, EnumT _o) {
    if (_o == null) return default(Offset<AiEditor.Fb.Template.Enum>);
    var _elements = default(VectorOffset);
    if (_o.Elements != null) {
      var __elements = new Offset<AiEditor.Fb.Template.Element>[_o.Elements.Count];
      for (var _j = 0; _j < __elements.Length; ++_j) { __elements[_j] = AiEditor.Fb.Template.Element.Pack(builder, _o.Elements[_j]); }
      _elements = CreateElementsVector(builder, __elements);
    }
    return CreateEnum(
      builder,
      _elements);
  }
};

public class EnumT
{
  [Newtonsoft.Json.JsonProperty("elements")]
  public List<AiEditor.Fb.Template.ElementT> Elements { get; set; }

  public EnumT() {
    this.Elements = null;
  }

  public static EnumT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<EnumT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static EnumT DeserializeFromBinary(byte[] fbBuffer) {
    return Enum.GetRootAsEnum(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    Enum.FinishEnumBuffer(fbb, Enum.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
