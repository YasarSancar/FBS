// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace AiEditor.Fb.Template
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Parameter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Parameter GetRootAsParameter(ByteBuffer _bb) { return GetRootAsParameter(_bb, new Parameter()); }
  public static Parameter GetRootAsParameter(ByteBuffer _bb, Parameter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Parameter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public common.ai.bt.fb.ParameterValue ValueType { get { int o = __p.__offset(6); return o != 0 ? (common.ai.bt.fb.ParameterValue)__p.bb.Get(o + __p.bb_pos) : common.ai.bt.fb.ParameterValue.NONE; } }
  public TTable? Value<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public string EnumPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEnumPathBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetEnumPathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetEnumPathArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<AiEditor.Fb.Template.Parameter> CreateParameter(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      common.ai.bt.fb.ParameterValue value_type = common.ai.bt.fb.ParameterValue.NONE,
      int valueOffset = 0,
      StringOffset enumPathOffset = default(StringOffset)) {
    builder.StartTable(4);
    Parameter.AddEnumPath(builder, enumPathOffset);
    Parameter.AddValue(builder, valueOffset);
    Parameter.AddName(builder, nameOffset);
    Parameter.AddValueType(builder, value_type);
    return Parameter.EndParameter(builder);
  }

  public static void StartParameter(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValueType(FlatBufferBuilder builder, common.ai.bt.fb.ParameterValue valueType) { builder.AddByte(1, (byte)valueType, 0); }
  public static void AddValue(FlatBufferBuilder builder, int valueOffset) { builder.AddOffset(2, valueOffset, 0); }
  public static void AddEnumPath(FlatBufferBuilder builder, StringOffset enumPathOffset) { builder.AddOffset(3, enumPathOffset.Value, 0); }
  public static Offset<AiEditor.Fb.Template.Parameter> EndParameter(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AiEditor.Fb.Template.Parameter>(o);
  }
  public ParameterT UnPack() {
    var _o = new ParameterT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ParameterT _o) {
    _o.Name = this.Name;
    _o.Value = new common.ai.bt.fb.ParameterValueUnion();
    _o.Value.Type = this.ValueType;
    switch (this.ValueType) {
      default: break;
      case common.ai.bt.fb.ParameterValue.ParameterValue_Int:
        _o.Value.Value = this.Value<common.ai.bt.fb.ParameterValue_Int>().HasValue ? this.Value<common.ai.bt.fb.ParameterValue_Int>().Value.UnPack() : null;
        break;
      case common.ai.bt.fb.ParameterValue.ParameterValue_Float:
        _o.Value.Value = this.Value<common.ai.bt.fb.ParameterValue_Float>().HasValue ? this.Value<common.ai.bt.fb.ParameterValue_Float>().Value.UnPack() : null;
        break;
      case common.ai.bt.fb.ParameterValue.ParameterValue_Bool:
        _o.Value.Value = this.Value<common.ai.bt.fb.ParameterValue_Bool>().HasValue ? this.Value<common.ai.bt.fb.ParameterValue_Bool>().Value.UnPack() : null;
        break;
      case common.ai.bt.fb.ParameterValue.ParameterValue_Vector3:
        _o.Value.Value = this.Value<common.ai.bt.fb.ParameterValue_Vector3>().HasValue ? this.Value<common.ai.bt.fb.ParameterValue_Vector3>().Value.UnPack() : null;
        break;
      case common.ai.bt.fb.ParameterValue.ParameterValue_String:
        _o.Value.Value = this.Value<common.ai.bt.fb.ParameterValue_String>().HasValue ? this.Value<common.ai.bt.fb.ParameterValue_String>().Value.UnPack() : null;
        break;
      case common.ai.bt.fb.ParameterValue.ParameterValue_FnvHash:
        _o.Value.Value = this.Value<common.ai.bt.fb.ParameterValue_FnvHash>().HasValue ? this.Value<common.ai.bt.fb.ParameterValue_FnvHash>().Value.UnPack() : null;
        break;
    }
    _o.EnumPath = this.EnumPath;
  }
  public static Offset<AiEditor.Fb.Template.Parameter> Pack(FlatBufferBuilder builder, ParameterT _o) {
    if (_o == null) return default(Offset<AiEditor.Fb.Template.Parameter>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _value_type = _o.Value == null ? common.ai.bt.fb.ParameterValue.NONE : _o.Value.Type;
    var _value = _o.Value == null ? 0 : common.ai.bt.fb.ParameterValueUnion.Pack(builder, _o.Value);
    var _enumPath = _o.EnumPath == null ? default(StringOffset) : builder.CreateString(_o.EnumPath);
    return CreateParameter(
      builder,
      _name,
      _value_type,
      _value,
      _enumPath);
  }
};

public class ParameterT
{
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("value_type")]
  private common.ai.bt.fb.ParameterValue ValueType {
    get {
      return this.Value != null ? this.Value.Type : common.ai.bt.fb.ParameterValue.NONE;
    }
    set {
      this.Value = new common.ai.bt.fb.ParameterValueUnion();
      this.Value.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("value")]
  [Newtonsoft.Json.JsonConverter(typeof(common.ai.bt.fb.ParameterValueUnion_JsonConverter))]
  public common.ai.bt.fb.ParameterValueUnion Value { get; set; }
  [Newtonsoft.Json.JsonProperty("enumPath")]
  public string EnumPath { get; set; }

  public ParameterT() {
    this.Name = null;
    this.Value = null;
    this.EnumPath = null;
  }
}


}
