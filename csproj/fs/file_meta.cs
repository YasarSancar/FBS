// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace gfl.fs.fb
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct FileMeta : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static FileMeta GetRootAsFileMeta(ByteBuffer _bb) { return GetRootAsFileMeta(_bb, new FileMeta()); }
  public static FileMeta GetRootAsFileMeta(ByteBuffer _bb, FileMeta obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FileMeta __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Timestamp { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<gfl.fs.fb.FileMeta> CreateFileMeta(FlatBufferBuilder builder,
      ulong timestamp = 0) {
    builder.StartTable(1);
    FileMeta.AddTimestamp(builder, timestamp);
    return FileMeta.EndFileMeta(builder);
  }

  public static void StartFileMeta(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddTimestamp(FlatBufferBuilder builder, ulong timestamp) { builder.AddUlong(0, timestamp, 0); }
  public static Offset<gfl.fs.fb.FileMeta> EndFileMeta(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.fs.fb.FileMeta>(o);
  }
  public FileMetaT UnPack() {
    var _o = new FileMetaT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FileMetaT _o) {
    _o.Timestamp = this.Timestamp;
  }
  public static Offset<gfl.fs.fb.FileMeta> Pack(FlatBufferBuilder builder, FileMetaT _o) {
    if (_o == null) return default(Offset<gfl.fs.fb.FileMeta>);
    return CreateFileMeta(
      builder,
      _o.Timestamp);
  }
};

public class FileMetaT
{
  [Newtonsoft.Json.JsonProperty("timestamp")]
  public ulong Timestamp { get; set; }

  public FileMetaT() {
    this.Timestamp = 0;
  }
}


}
