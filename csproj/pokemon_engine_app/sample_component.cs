// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace pe.scene.fb
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct SubProperty : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SubProperty GetRootAsSubProperty(ByteBuffer _bb) { return GetRootAsSubProperty(_bb, new SubProperty()); }
  public static SubProperty GetRootAsSubProperty(ByteBuffer _bb, SubProperty obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SubProperty __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public string File { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFileBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetFileBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetFileArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<pe.scene.fb.SubProperty> CreateSubProperty(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      StringOffset fileOffset = default(StringOffset)) {
    builder.StartTable(2);
    SubProperty.AddFile(builder, fileOffset);
    SubProperty.AddName(builder, nameOffset);
    return SubProperty.EndSubProperty(builder);
  }

  public static void StartSubProperty(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddFile(FlatBufferBuilder builder, StringOffset fileOffset) { builder.AddOffset(1, fileOffset.Value, 0); }
  public static Offset<pe.scene.fb.SubProperty> EndSubProperty(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pe.scene.fb.SubProperty>(o);
  }
  public SubPropertyT UnPack() {
    var _o = new SubPropertyT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SubPropertyT _o) {
    _o.Name = this.Name;
    _o.File = this.File;
  }
  public static Offset<pe.scene.fb.SubProperty> Pack(FlatBufferBuilder builder, SubPropertyT _o) {
    if (_o == null) return default(Offset<pe.scene.fb.SubProperty>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _file = _o.File == null ? default(StringOffset) : builder.CreateString(_o.File);
    return CreateSubProperty(
      builder,
      _name,
      _file);
  }
};

public class SubPropertyT
{
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("file")]
  public string File { get; set; }

  public SubPropertyT() {
    this.Name = null;
    this.File = null;
  }
}

public struct SampleComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SampleComponent GetRootAsSampleComponent(ByteBuffer _bb) { return GetRootAsSampleComponent(_bb, new SampleComponent()); }
  public static SampleComponent GetRootAsSampleComponent(ByteBuffer _bb, SampleComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SampleComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string FilePath { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFilePathBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetFilePathBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetFilePathArray() { return __p.__vector_as_array<byte>(4); }
  public int Value0 { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public gfl.math.fb.SRT? Srt { get { int o = __p.__offset(8); return o != 0 ? (gfl.math.fb.SRT?)(new gfl.math.fb.SRT()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public pe.scene.fb.SubProperty? SubProperty { get { int o = __p.__offset(10); return o != 0 ? (pe.scene.fb.SubProperty?)(new pe.scene.fb.SubProperty()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<pe.scene.fb.SampleComponent> CreateSampleComponent(FlatBufferBuilder builder,
      StringOffset filePathOffset = default(StringOffset),
      int value0 = 0,
      Offset<gfl.math.fb.SRT> srtOffset = default(Offset<gfl.math.fb.SRT>),
      Offset<pe.scene.fb.SubProperty> subPropertyOffset = default(Offset<pe.scene.fb.SubProperty>)) {
    builder.StartTable(4);
    SampleComponent.AddSubProperty(builder, subPropertyOffset);
    SampleComponent.AddSrt(builder, srtOffset);
    SampleComponent.AddValue0(builder, value0);
    SampleComponent.AddFilePath(builder, filePathOffset);
    return SampleComponent.EndSampleComponent(builder);
  }

  public static void StartSampleComponent(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddFilePath(FlatBufferBuilder builder, StringOffset filePathOffset) { builder.AddOffset(0, filePathOffset.Value, 0); }
  public static void AddValue0(FlatBufferBuilder builder, int value0) { builder.AddInt(1, value0, 0); }
  public static void AddSrt(FlatBufferBuilder builder, Offset<gfl.math.fb.SRT> srtOffset) { builder.AddOffset(2, srtOffset.Value, 0); }
  public static void AddSubProperty(FlatBufferBuilder builder, Offset<pe.scene.fb.SubProperty> subPropertyOffset) { builder.AddOffset(3, subPropertyOffset.Value, 0); }
  public static Offset<pe.scene.fb.SampleComponent> EndSampleComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pe.scene.fb.SampleComponent>(o);
  }
  public static void FinishSampleComponentBuffer(FlatBufferBuilder builder, Offset<pe.scene.fb.SampleComponent> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedSampleComponentBuffer(FlatBufferBuilder builder, Offset<pe.scene.fb.SampleComponent> offset) { builder.FinishSizePrefixed(offset.Value); }
  public SampleComponentT UnPack() {
    var _o = new SampleComponentT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SampleComponentT _o) {
    _o.FilePath = this.FilePath;
    _o.Value0 = this.Value0;
    _o.Srt = this.Srt.HasValue ? this.Srt.Value.UnPack() : null;
    _o.SubProperty = this.SubProperty.HasValue ? this.SubProperty.Value.UnPack() : null;
  }
  public static Offset<pe.scene.fb.SampleComponent> Pack(FlatBufferBuilder builder, SampleComponentT _o) {
    if (_o == null) return default(Offset<pe.scene.fb.SampleComponent>);
    var _filePath = _o.FilePath == null ? default(StringOffset) : builder.CreateString(_o.FilePath);
    var _srt = _o.Srt == null ? default(Offset<gfl.math.fb.SRT>) : gfl.math.fb.SRT.Pack(builder, _o.Srt);
    var _subProperty = _o.SubProperty == null ? default(Offset<pe.scene.fb.SubProperty>) : pe.scene.fb.SubProperty.Pack(builder, _o.SubProperty);
    return CreateSampleComponent(
      builder,
      _filePath,
      _o.Value0,
      _srt,
      _subProperty);
  }
};

public class SampleComponentT
{
  [Newtonsoft.Json.JsonProperty("filePath")]
  public string FilePath { get; set; }
  [Newtonsoft.Json.JsonProperty("value0")]
  public int Value0 { get; set; }
  [Newtonsoft.Json.JsonProperty("srt")]
  public gfl.math.fb.SRTT Srt { get; set; }
  [Newtonsoft.Json.JsonProperty("subProperty")]
  public pe.scene.fb.SubPropertyT SubProperty { get; set; }

  public SampleComponentT() {
    this.FilePath = null;
    this.Value0 = 0;
    this.Srt = null;
    this.SubProperty = null;
  }

  public static SampleComponentT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<SampleComponentT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static SampleComponentT DeserializeFromBinary(byte[] fbBuffer) {
    return SampleComponent.GetRootAsSampleComponent(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    SampleComponent.FinishSampleComponentBuffer(fbb, SampleComponent.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
