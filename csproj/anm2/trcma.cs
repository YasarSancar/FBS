// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace gfl.anm2.fb
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct CameraProjectionData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static CameraProjectionData GetRootAsCameraProjectionData(ByteBuffer _bb) { return GetRootAsCameraProjectionData(_bb, new CameraProjectionData()); }
  public static CameraProjectionData GetRootAsCameraProjectionData(ByteBuffer _bb, CameraProjectionData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CameraProjectionData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gfl.anm2.fb.KeyData_Float NearsType { get { int o = __p.__offset(4); return o != 0 ? (gfl.anm2.fb.KeyData_Float)__p.bb.Get(o + __p.bb_pos) : gfl.anm2.fb.KeyData_Float.NONE; } }
  public TTable? Nears<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public gfl.anm2.fb.KeyData_Float FarsType { get { int o = __p.__offset(8); return o != 0 ? (gfl.anm2.fb.KeyData_Float)__p.bb.Get(o + __p.bb_pos) : gfl.anm2.fb.KeyData_Float.NONE; } }
  public TTable? Fars<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(10); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public gfl.anm2.fb.KeyData_Float FovysType { get { int o = __p.__offset(12); return o != 0 ? (gfl.anm2.fb.KeyData_Float)__p.bb.Get(o + __p.bb_pos) : gfl.anm2.fb.KeyData_Float.NONE; } }
  public TTable? Fovys<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(14); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<gfl.anm2.fb.CameraProjectionData> CreateCameraProjectionData(FlatBufferBuilder builder,
      gfl.anm2.fb.KeyData_Float nears_type = gfl.anm2.fb.KeyData_Float.NONE,
      int nearsOffset = 0,
      gfl.anm2.fb.KeyData_Float fars_type = gfl.anm2.fb.KeyData_Float.NONE,
      int farsOffset = 0,
      gfl.anm2.fb.KeyData_Float fovys_type = gfl.anm2.fb.KeyData_Float.NONE,
      int fovysOffset = 0) {
    builder.StartTable(6);
    CameraProjectionData.AddFovys(builder, fovysOffset);
    CameraProjectionData.AddFars(builder, farsOffset);
    CameraProjectionData.AddNears(builder, nearsOffset);
    CameraProjectionData.AddFovysType(builder, fovys_type);
    CameraProjectionData.AddFarsType(builder, fars_type);
    CameraProjectionData.AddNearsType(builder, nears_type);
    return CameraProjectionData.EndCameraProjectionData(builder);
  }

  public static void StartCameraProjectionData(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddNearsType(FlatBufferBuilder builder, gfl.anm2.fb.KeyData_Float nearsType) { builder.AddByte(0, (byte)nearsType, 0); }
  public static void AddNears(FlatBufferBuilder builder, int nearsOffset) { builder.AddOffset(1, nearsOffset, 0); }
  public static void AddFarsType(FlatBufferBuilder builder, gfl.anm2.fb.KeyData_Float farsType) { builder.AddByte(2, (byte)farsType, 0); }
  public static void AddFars(FlatBufferBuilder builder, int farsOffset) { builder.AddOffset(3, farsOffset, 0); }
  public static void AddFovysType(FlatBufferBuilder builder, gfl.anm2.fb.KeyData_Float fovysType) { builder.AddByte(4, (byte)fovysType, 0); }
  public static void AddFovys(FlatBufferBuilder builder, int fovysOffset) { builder.AddOffset(5, fovysOffset, 0); }
  public static Offset<gfl.anm2.fb.CameraProjectionData> EndCameraProjectionData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.anm2.fb.CameraProjectionData>(o);
  }
  public CameraProjectionDataT UnPack() {
    var _o = new CameraProjectionDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CameraProjectionDataT _o) {
    _o.Nears = new gfl.anm2.fb.KeyData_FloatUnion();
    _o.Nears.Type = this.NearsType;
    switch (this.NearsType) {
      default: break;
      case gfl.anm2.fb.KeyData_Float.OneFrame_Float:
        _o.Nears.Value = this.Nears<gfl.anm2.fb.OneFrame_Float>().HasValue ? this.Nears<gfl.anm2.fb.OneFrame_Float>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.AllFrame_Float:
        _o.Nears.Value = this.Nears<gfl.anm2.fb.AllFrame_Float>().HasValue ? this.Nears<gfl.anm2.fb.AllFrame_Float>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.CatmullRom_Float_u16:
        _o.Nears.Value = this.Nears<gfl.anm2.fb.CatmullRom_Float_u16>().HasValue ? this.Nears<gfl.anm2.fb.CatmullRom_Float_u16>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.CatmullRom_Float_u8:
        _o.Nears.Value = this.Nears<gfl.anm2.fb.CatmullRom_Float_u8>().HasValue ? this.Nears<gfl.anm2.fb.CatmullRom_Float_u8>().Value.UnPack() : null;
        break;
    }
    _o.Fars = new gfl.anm2.fb.KeyData_FloatUnion();
    _o.Fars.Type = this.FarsType;
    switch (this.FarsType) {
      default: break;
      case gfl.anm2.fb.KeyData_Float.OneFrame_Float:
        _o.Fars.Value = this.Fars<gfl.anm2.fb.OneFrame_Float>().HasValue ? this.Fars<gfl.anm2.fb.OneFrame_Float>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.AllFrame_Float:
        _o.Fars.Value = this.Fars<gfl.anm2.fb.AllFrame_Float>().HasValue ? this.Fars<gfl.anm2.fb.AllFrame_Float>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.CatmullRom_Float_u16:
        _o.Fars.Value = this.Fars<gfl.anm2.fb.CatmullRom_Float_u16>().HasValue ? this.Fars<gfl.anm2.fb.CatmullRom_Float_u16>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.CatmullRom_Float_u8:
        _o.Fars.Value = this.Fars<gfl.anm2.fb.CatmullRom_Float_u8>().HasValue ? this.Fars<gfl.anm2.fb.CatmullRom_Float_u8>().Value.UnPack() : null;
        break;
    }
    _o.Fovys = new gfl.anm2.fb.KeyData_FloatUnion();
    _o.Fovys.Type = this.FovysType;
    switch (this.FovysType) {
      default: break;
      case gfl.anm2.fb.KeyData_Float.OneFrame_Float:
        _o.Fovys.Value = this.Fovys<gfl.anm2.fb.OneFrame_Float>().HasValue ? this.Fovys<gfl.anm2.fb.OneFrame_Float>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.AllFrame_Float:
        _o.Fovys.Value = this.Fovys<gfl.anm2.fb.AllFrame_Float>().HasValue ? this.Fovys<gfl.anm2.fb.AllFrame_Float>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.CatmullRom_Float_u16:
        _o.Fovys.Value = this.Fovys<gfl.anm2.fb.CatmullRom_Float_u16>().HasValue ? this.Fovys<gfl.anm2.fb.CatmullRom_Float_u16>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.CatmullRom_Float_u8:
        _o.Fovys.Value = this.Fovys<gfl.anm2.fb.CatmullRom_Float_u8>().HasValue ? this.Fovys<gfl.anm2.fb.CatmullRom_Float_u8>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<gfl.anm2.fb.CameraProjectionData> Pack(FlatBufferBuilder builder, CameraProjectionDataT _o) {
    if (_o == null) return default(Offset<gfl.anm2.fb.CameraProjectionData>);
    var _nears_type = _o.Nears == null ? gfl.anm2.fb.KeyData_Float.NONE : _o.Nears.Type;
    var _nears = _o.Nears == null ? 0 : gfl.anm2.fb.KeyData_FloatUnion.Pack(builder, _o.Nears);
    var _fars_type = _o.Fars == null ? gfl.anm2.fb.KeyData_Float.NONE : _o.Fars.Type;
    var _fars = _o.Fars == null ? 0 : gfl.anm2.fb.KeyData_FloatUnion.Pack(builder, _o.Fars);
    var _fovys_type = _o.Fovys == null ? gfl.anm2.fb.KeyData_Float.NONE : _o.Fovys.Type;
    var _fovys = _o.Fovys == null ? 0 : gfl.anm2.fb.KeyData_FloatUnion.Pack(builder, _o.Fovys);
    return CreateCameraProjectionData(
      builder,
      _nears_type,
      _nears,
      _fars_type,
      _fars,
      _fovys_type,
      _fovys);
  }
};

public class CameraProjectionDataT
{
  [Newtonsoft.Json.JsonProperty("nears_type")]
  private gfl.anm2.fb.KeyData_Float NearsType {
    get {
      return this.Nears != null ? this.Nears.Type : gfl.anm2.fb.KeyData_Float.NONE;
    }
    set {
      this.Nears = new gfl.anm2.fb.KeyData_FloatUnion();
      this.Nears.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("nears")]
  [Newtonsoft.Json.JsonConverter(typeof(gfl.anm2.fb.KeyData_FloatUnion_JsonConverter))]
  public gfl.anm2.fb.KeyData_FloatUnion Nears { get; set; }
  [Newtonsoft.Json.JsonProperty("fars_type")]
  private gfl.anm2.fb.KeyData_Float FarsType {
    get {
      return this.Fars != null ? this.Fars.Type : gfl.anm2.fb.KeyData_Float.NONE;
    }
    set {
      this.Fars = new gfl.anm2.fb.KeyData_FloatUnion();
      this.Fars.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("fars")]
  [Newtonsoft.Json.JsonConverter(typeof(gfl.anm2.fb.KeyData_FloatUnion_JsonConverter))]
  public gfl.anm2.fb.KeyData_FloatUnion Fars { get; set; }
  [Newtonsoft.Json.JsonProperty("fovys_type")]
  private gfl.anm2.fb.KeyData_Float FovysType {
    get {
      return this.Fovys != null ? this.Fovys.Type : gfl.anm2.fb.KeyData_Float.NONE;
    }
    set {
      this.Fovys = new gfl.anm2.fb.KeyData_FloatUnion();
      this.Fovys.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("fovys")]
  [Newtonsoft.Json.JsonConverter(typeof(gfl.anm2.fb.KeyData_FloatUnion_JsonConverter))]
  public gfl.anm2.fb.KeyData_FloatUnion Fovys { get; set; }

  public CameraProjectionDataT() {
    this.Nears = null;
    this.Fars = null;
    this.Fovys = null;
  }
}

public struct CameraViewData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static CameraViewData GetRootAsCameraViewData(ByteBuffer _bb) { return GetRootAsCameraViewData(_bb, new CameraViewData()); }
  public static CameraViewData GetRootAsCameraViewData(ByteBuffer _bb, CameraViewData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CameraViewData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gfl.anm2.fb.KeyData_Quaternion48bit RotatesType { get { int o = __p.__offset(4); return o != 0 ? (gfl.anm2.fb.KeyData_Quaternion48bit)__p.bb.Get(o + __p.bb_pos) : gfl.anm2.fb.KeyData_Quaternion48bit.NONE; } }
  public TTable? Rotates<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public gfl.anm2.fb.KeyData_Vector3 TranslatesType { get { int o = __p.__offset(8); return o != 0 ? (gfl.anm2.fb.KeyData_Vector3)__p.bb.Get(o + __p.bb_pos) : gfl.anm2.fb.KeyData_Vector3.NONE; } }
  public TTable? Translates<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(10); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public gfl.anm2.fb.KeyData_Vector3 UpVectorsType { get { int o = __p.__offset(12); return o != 0 ? (gfl.anm2.fb.KeyData_Vector3)__p.bb.Get(o + __p.bb_pos) : gfl.anm2.fb.KeyData_Vector3.NONE; } }
  public TTable? UpVectors<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(14); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public gfl.anm2.fb.KeyData_Vector3 AimsType { get { int o = __p.__offset(16); return o != 0 ? (gfl.anm2.fb.KeyData_Vector3)__p.bb.Get(o + __p.bb_pos) : gfl.anm2.fb.KeyData_Vector3.NONE; } }
  public TTable? Aims<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(18); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public gfl.anm2.fb.KeyData_Float TwistsType { get { int o = __p.__offset(20); return o != 0 ? (gfl.anm2.fb.KeyData_Float)__p.bb.Get(o + __p.bb_pos) : gfl.anm2.fb.KeyData_Float.NONE; } }
  public TTable? Twists<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(22); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<gfl.anm2.fb.CameraViewData> CreateCameraViewData(FlatBufferBuilder builder,
      gfl.anm2.fb.KeyData_Quaternion48bit rotates_type = gfl.anm2.fb.KeyData_Quaternion48bit.NONE,
      int rotatesOffset = 0,
      gfl.anm2.fb.KeyData_Vector3 translates_type = gfl.anm2.fb.KeyData_Vector3.NONE,
      int translatesOffset = 0,
      gfl.anm2.fb.KeyData_Vector3 upVectors_type = gfl.anm2.fb.KeyData_Vector3.NONE,
      int upVectorsOffset = 0,
      gfl.anm2.fb.KeyData_Vector3 aims_type = gfl.anm2.fb.KeyData_Vector3.NONE,
      int aimsOffset = 0,
      gfl.anm2.fb.KeyData_Float twists_type = gfl.anm2.fb.KeyData_Float.NONE,
      int twistsOffset = 0) {
    builder.StartTable(10);
    CameraViewData.AddTwists(builder, twistsOffset);
    CameraViewData.AddAims(builder, aimsOffset);
    CameraViewData.AddUpVectors(builder, upVectorsOffset);
    CameraViewData.AddTranslates(builder, translatesOffset);
    CameraViewData.AddRotates(builder, rotatesOffset);
    CameraViewData.AddTwistsType(builder, twists_type);
    CameraViewData.AddAimsType(builder, aims_type);
    CameraViewData.AddUpVectorsType(builder, upVectors_type);
    CameraViewData.AddTranslatesType(builder, translates_type);
    CameraViewData.AddRotatesType(builder, rotates_type);
    return CameraViewData.EndCameraViewData(builder);
  }

  public static void StartCameraViewData(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddRotatesType(FlatBufferBuilder builder, gfl.anm2.fb.KeyData_Quaternion48bit rotatesType) { builder.AddByte(0, (byte)rotatesType, 0); }
  public static void AddRotates(FlatBufferBuilder builder, int rotatesOffset) { builder.AddOffset(1, rotatesOffset, 0); }
  public static void AddTranslatesType(FlatBufferBuilder builder, gfl.anm2.fb.KeyData_Vector3 translatesType) { builder.AddByte(2, (byte)translatesType, 0); }
  public static void AddTranslates(FlatBufferBuilder builder, int translatesOffset) { builder.AddOffset(3, translatesOffset, 0); }
  public static void AddUpVectorsType(FlatBufferBuilder builder, gfl.anm2.fb.KeyData_Vector3 upVectorsType) { builder.AddByte(4, (byte)upVectorsType, 0); }
  public static void AddUpVectors(FlatBufferBuilder builder, int upVectorsOffset) { builder.AddOffset(5, upVectorsOffset, 0); }
  public static void AddAimsType(FlatBufferBuilder builder, gfl.anm2.fb.KeyData_Vector3 aimsType) { builder.AddByte(6, (byte)aimsType, 0); }
  public static void AddAims(FlatBufferBuilder builder, int aimsOffset) { builder.AddOffset(7, aimsOffset, 0); }
  public static void AddTwistsType(FlatBufferBuilder builder, gfl.anm2.fb.KeyData_Float twistsType) { builder.AddByte(8, (byte)twistsType, 0); }
  public static void AddTwists(FlatBufferBuilder builder, int twistsOffset) { builder.AddOffset(9, twistsOffset, 0); }
  public static Offset<gfl.anm2.fb.CameraViewData> EndCameraViewData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.anm2.fb.CameraViewData>(o);
  }
  public CameraViewDataT UnPack() {
    var _o = new CameraViewDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CameraViewDataT _o) {
    _o.Rotates = new gfl.anm2.fb.KeyData_Quaternion48bitUnion();
    _o.Rotates.Type = this.RotatesType;
    switch (this.RotatesType) {
      default: break;
      case gfl.anm2.fb.KeyData_Quaternion48bit.OneFrame_Quaternion48bit:
        _o.Rotates.Value = this.Rotates<gfl.anm2.fb.OneFrame_Quaternion48bit>().HasValue ? this.Rotates<gfl.anm2.fb.OneFrame_Quaternion48bit>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Quaternion48bit.AllFrame_Quaternion48bit:
        _o.Rotates.Value = this.Rotates<gfl.anm2.fb.AllFrame_Quaternion48bit>().HasValue ? this.Rotates<gfl.anm2.fb.AllFrame_Quaternion48bit>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Quaternion48bit.CatmullRom_Quaternion48bit_u16:
        _o.Rotates.Value = this.Rotates<gfl.anm2.fb.CatmullRom_Quaternion48bit_u16>().HasValue ? this.Rotates<gfl.anm2.fb.CatmullRom_Quaternion48bit_u16>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Quaternion48bit.CatmullRom_Quaternion48bit_u8:
        _o.Rotates.Value = this.Rotates<gfl.anm2.fb.CatmullRom_Quaternion48bit_u8>().HasValue ? this.Rotates<gfl.anm2.fb.CatmullRom_Quaternion48bit_u8>().Value.UnPack() : null;
        break;
    }
    _o.Translates = new gfl.anm2.fb.KeyData_Vector3Union();
    _o.Translates.Type = this.TranslatesType;
    switch (this.TranslatesType) {
      default: break;
      case gfl.anm2.fb.KeyData_Vector3.OneFrame_Vector3:
        _o.Translates.Value = this.Translates<gfl.anm2.fb.OneFrame_Vector3>().HasValue ? this.Translates<gfl.anm2.fb.OneFrame_Vector3>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Vector3.AllFrame_Vector3:
        _o.Translates.Value = this.Translates<gfl.anm2.fb.AllFrame_Vector3>().HasValue ? this.Translates<gfl.anm2.fb.AllFrame_Vector3>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Vector3.CatmullRom_Vector3_u16:
        _o.Translates.Value = this.Translates<gfl.anm2.fb.CatmullRom_Vector3_u16>().HasValue ? this.Translates<gfl.anm2.fb.CatmullRom_Vector3_u16>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Vector3.CatmullRom_Vector3_u8:
        _o.Translates.Value = this.Translates<gfl.anm2.fb.CatmullRom_Vector3_u8>().HasValue ? this.Translates<gfl.anm2.fb.CatmullRom_Vector3_u8>().Value.UnPack() : null;
        break;
    }
    _o.UpVectors = new gfl.anm2.fb.KeyData_Vector3Union();
    _o.UpVectors.Type = this.UpVectorsType;
    switch (this.UpVectorsType) {
      default: break;
      case gfl.anm2.fb.KeyData_Vector3.OneFrame_Vector3:
        _o.UpVectors.Value = this.UpVectors<gfl.anm2.fb.OneFrame_Vector3>().HasValue ? this.UpVectors<gfl.anm2.fb.OneFrame_Vector3>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Vector3.AllFrame_Vector3:
        _o.UpVectors.Value = this.UpVectors<gfl.anm2.fb.AllFrame_Vector3>().HasValue ? this.UpVectors<gfl.anm2.fb.AllFrame_Vector3>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Vector3.CatmullRom_Vector3_u16:
        _o.UpVectors.Value = this.UpVectors<gfl.anm2.fb.CatmullRom_Vector3_u16>().HasValue ? this.UpVectors<gfl.anm2.fb.CatmullRom_Vector3_u16>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Vector3.CatmullRom_Vector3_u8:
        _o.UpVectors.Value = this.UpVectors<gfl.anm2.fb.CatmullRom_Vector3_u8>().HasValue ? this.UpVectors<gfl.anm2.fb.CatmullRom_Vector3_u8>().Value.UnPack() : null;
        break;
    }
    _o.Aims = new gfl.anm2.fb.KeyData_Vector3Union();
    _o.Aims.Type = this.AimsType;
    switch (this.AimsType) {
      default: break;
      case gfl.anm2.fb.KeyData_Vector3.OneFrame_Vector3:
        _o.Aims.Value = this.Aims<gfl.anm2.fb.OneFrame_Vector3>().HasValue ? this.Aims<gfl.anm2.fb.OneFrame_Vector3>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Vector3.AllFrame_Vector3:
        _o.Aims.Value = this.Aims<gfl.anm2.fb.AllFrame_Vector3>().HasValue ? this.Aims<gfl.anm2.fb.AllFrame_Vector3>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Vector3.CatmullRom_Vector3_u16:
        _o.Aims.Value = this.Aims<gfl.anm2.fb.CatmullRom_Vector3_u16>().HasValue ? this.Aims<gfl.anm2.fb.CatmullRom_Vector3_u16>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Vector3.CatmullRom_Vector3_u8:
        _o.Aims.Value = this.Aims<gfl.anm2.fb.CatmullRom_Vector3_u8>().HasValue ? this.Aims<gfl.anm2.fb.CatmullRom_Vector3_u8>().Value.UnPack() : null;
        break;
    }
    _o.Twists = new gfl.anm2.fb.KeyData_FloatUnion();
    _o.Twists.Type = this.TwistsType;
    switch (this.TwistsType) {
      default: break;
      case gfl.anm2.fb.KeyData_Float.OneFrame_Float:
        _o.Twists.Value = this.Twists<gfl.anm2.fb.OneFrame_Float>().HasValue ? this.Twists<gfl.anm2.fb.OneFrame_Float>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.AllFrame_Float:
        _o.Twists.Value = this.Twists<gfl.anm2.fb.AllFrame_Float>().HasValue ? this.Twists<gfl.anm2.fb.AllFrame_Float>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.CatmullRom_Float_u16:
        _o.Twists.Value = this.Twists<gfl.anm2.fb.CatmullRom_Float_u16>().HasValue ? this.Twists<gfl.anm2.fb.CatmullRom_Float_u16>().Value.UnPack() : null;
        break;
      case gfl.anm2.fb.KeyData_Float.CatmullRom_Float_u8:
        _o.Twists.Value = this.Twists<gfl.anm2.fb.CatmullRom_Float_u8>().HasValue ? this.Twists<gfl.anm2.fb.CatmullRom_Float_u8>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<gfl.anm2.fb.CameraViewData> Pack(FlatBufferBuilder builder, CameraViewDataT _o) {
    if (_o == null) return default(Offset<gfl.anm2.fb.CameraViewData>);
    var _rotates_type = _o.Rotates == null ? gfl.anm2.fb.KeyData_Quaternion48bit.NONE : _o.Rotates.Type;
    var _rotates = _o.Rotates == null ? 0 : gfl.anm2.fb.KeyData_Quaternion48bitUnion.Pack(builder, _o.Rotates);
    var _translates_type = _o.Translates == null ? gfl.anm2.fb.KeyData_Vector3.NONE : _o.Translates.Type;
    var _translates = _o.Translates == null ? 0 : gfl.anm2.fb.KeyData_Vector3Union.Pack(builder, _o.Translates);
    var _upVectors_type = _o.UpVectors == null ? gfl.anm2.fb.KeyData_Vector3.NONE : _o.UpVectors.Type;
    var _upVectors = _o.UpVectors == null ? 0 : gfl.anm2.fb.KeyData_Vector3Union.Pack(builder, _o.UpVectors);
    var _aims_type = _o.Aims == null ? gfl.anm2.fb.KeyData_Vector3.NONE : _o.Aims.Type;
    var _aims = _o.Aims == null ? 0 : gfl.anm2.fb.KeyData_Vector3Union.Pack(builder, _o.Aims);
    var _twists_type = _o.Twists == null ? gfl.anm2.fb.KeyData_Float.NONE : _o.Twists.Type;
    var _twists = _o.Twists == null ? 0 : gfl.anm2.fb.KeyData_FloatUnion.Pack(builder, _o.Twists);
    return CreateCameraViewData(
      builder,
      _rotates_type,
      _rotates,
      _translates_type,
      _translates,
      _upVectors_type,
      _upVectors,
      _aims_type,
      _aims,
      _twists_type,
      _twists);
  }
};

public class CameraViewDataT
{
  [Newtonsoft.Json.JsonProperty("rotates_type")]
  private gfl.anm2.fb.KeyData_Quaternion48bit RotatesType {
    get {
      return this.Rotates != null ? this.Rotates.Type : gfl.anm2.fb.KeyData_Quaternion48bit.NONE;
    }
    set {
      this.Rotates = new gfl.anm2.fb.KeyData_Quaternion48bitUnion();
      this.Rotates.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("rotates")]
  [Newtonsoft.Json.JsonConverter(typeof(gfl.anm2.fb.KeyData_Quaternion48bitUnion_JsonConverter))]
  public gfl.anm2.fb.KeyData_Quaternion48bitUnion Rotates { get; set; }
  [Newtonsoft.Json.JsonProperty("translates_type")]
  private gfl.anm2.fb.KeyData_Vector3 TranslatesType {
    get {
      return this.Translates != null ? this.Translates.Type : gfl.anm2.fb.KeyData_Vector3.NONE;
    }
    set {
      this.Translates = new gfl.anm2.fb.KeyData_Vector3Union();
      this.Translates.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("translates")]
  [Newtonsoft.Json.JsonConverter(typeof(gfl.anm2.fb.KeyData_Vector3Union_JsonConverter))]
  public gfl.anm2.fb.KeyData_Vector3Union Translates { get; set; }
  [Newtonsoft.Json.JsonProperty("upVectors_type")]
  private gfl.anm2.fb.KeyData_Vector3 UpVectorsType {
    get {
      return this.UpVectors != null ? this.UpVectors.Type : gfl.anm2.fb.KeyData_Vector3.NONE;
    }
    set {
      this.UpVectors = new gfl.anm2.fb.KeyData_Vector3Union();
      this.UpVectors.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("upVectors")]
  [Newtonsoft.Json.JsonConverter(typeof(gfl.anm2.fb.KeyData_Vector3Union_JsonConverter))]
  public gfl.anm2.fb.KeyData_Vector3Union UpVectors { get; set; }
  [Newtonsoft.Json.JsonProperty("aims_type")]
  private gfl.anm2.fb.KeyData_Vector3 AimsType {
    get {
      return this.Aims != null ? this.Aims.Type : gfl.anm2.fb.KeyData_Vector3.NONE;
    }
    set {
      this.Aims = new gfl.anm2.fb.KeyData_Vector3Union();
      this.Aims.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("aims")]
  [Newtonsoft.Json.JsonConverter(typeof(gfl.anm2.fb.KeyData_Vector3Union_JsonConverter))]
  public gfl.anm2.fb.KeyData_Vector3Union Aims { get; set; }
  [Newtonsoft.Json.JsonProperty("twists_type")]
  private gfl.anm2.fb.KeyData_Float TwistsType {
    get {
      return this.Twists != null ? this.Twists.Type : gfl.anm2.fb.KeyData_Float.NONE;
    }
    set {
      this.Twists = new gfl.anm2.fb.KeyData_FloatUnion();
      this.Twists.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("twists")]
  [Newtonsoft.Json.JsonConverter(typeof(gfl.anm2.fb.KeyData_FloatUnion_JsonConverter))]
  public gfl.anm2.fb.KeyData_FloatUnion Twists { get; set; }

  public CameraViewDataT() {
    this.Rotates = null;
    this.Translates = null;
    this.UpVectors = null;
    this.Aims = null;
    this.Twists = null;
  }
}

public struct CameraData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static CameraData GetRootAsCameraData(ByteBuffer _bb) { return GetRootAsCameraData(_bb, new CameraData()); }
  public static CameraData GetRootAsCameraData(ByteBuffer _bb, CameraData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CameraData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public gfl.anm2.fb.CameraProjectionData? Projection { get { int o = __p.__offset(6); return o != 0 ? (gfl.anm2.fb.CameraProjectionData?)(new gfl.anm2.fb.CameraProjectionData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public gfl.anm2.fb.CameraViewData? View { get { int o = __p.__offset(8); return o != 0 ? (gfl.anm2.fb.CameraViewData?)(new gfl.anm2.fb.CameraViewData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<gfl.anm2.fb.CameraData> CreateCameraData(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      Offset<gfl.anm2.fb.CameraProjectionData> projectionOffset = default(Offset<gfl.anm2.fb.CameraProjectionData>),
      Offset<gfl.anm2.fb.CameraViewData> viewOffset = default(Offset<gfl.anm2.fb.CameraViewData>)) {
    builder.StartTable(3);
    CameraData.AddView(builder, viewOffset);
    CameraData.AddProjection(builder, projectionOffset);
    CameraData.AddName(builder, nameOffset);
    return CameraData.EndCameraData(builder);
  }

  public static void StartCameraData(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddProjection(FlatBufferBuilder builder, Offset<gfl.anm2.fb.CameraProjectionData> projectionOffset) { builder.AddOffset(1, projectionOffset.Value, 0); }
  public static void AddView(FlatBufferBuilder builder, Offset<gfl.anm2.fb.CameraViewData> viewOffset) { builder.AddOffset(2, viewOffset.Value, 0); }
  public static Offset<gfl.anm2.fb.CameraData> EndCameraData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.anm2.fb.CameraData>(o);
  }
  public CameraDataT UnPack() {
    var _o = new CameraDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CameraDataT _o) {
    _o.Name = this.Name;
    _o.Projection = this.Projection.HasValue ? this.Projection.Value.UnPack() : null;
    _o.View = this.View.HasValue ? this.View.Value.UnPack() : null;
  }
  public static Offset<gfl.anm2.fb.CameraData> Pack(FlatBufferBuilder builder, CameraDataT _o) {
    if (_o == null) return default(Offset<gfl.anm2.fb.CameraData>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _projection = _o.Projection == null ? default(Offset<gfl.anm2.fb.CameraProjectionData>) : gfl.anm2.fb.CameraProjectionData.Pack(builder, _o.Projection);
    var _view = _o.View == null ? default(Offset<gfl.anm2.fb.CameraViewData>) : gfl.anm2.fb.CameraViewData.Pack(builder, _o.View);
    return CreateCameraData(
      builder,
      _name,
      _projection,
      _view);
  }
};

public class CameraDataT
{
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("projection")]
  public gfl.anm2.fb.CameraProjectionDataT Projection { get; set; }
  [Newtonsoft.Json.JsonProperty("view")]
  public gfl.anm2.fb.CameraViewDataT View { get; set; }

  public CameraDataT() {
    this.Name = null;
    this.Projection = null;
    this.View = null;
  }
}

public struct CameraAnimationData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static CameraAnimationData GetRootAsCameraAnimationData(ByteBuffer _bb) { return GetRootAsCameraAnimationData(_bb, new CameraAnimationData()); }
  public static CameraAnimationData GetRootAsCameraAnimationData(ByteBuffer _bb, CameraAnimationData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CameraAnimationData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gfl.anm2.fb.FrameSetting? FrameSetting { get { int o = __p.__offset(4); return o != 0 ? (gfl.anm2.fb.FrameSetting?)(new gfl.anm2.fb.FrameSetting()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public gfl.anm2.fb.CameraData? Camera { get { int o = __p.__offset(6); return o != 0 ? (gfl.anm2.fb.CameraData?)(new gfl.anm2.fb.CameraData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<gfl.anm2.fb.CameraAnimationData> CreateCameraAnimationData(FlatBufferBuilder builder,
      Offset<gfl.anm2.fb.FrameSetting> frameSettingOffset = default(Offset<gfl.anm2.fb.FrameSetting>),
      Offset<gfl.anm2.fb.CameraData> cameraOffset = default(Offset<gfl.anm2.fb.CameraData>)) {
    builder.StartTable(2);
    CameraAnimationData.AddCamera(builder, cameraOffset);
    CameraAnimationData.AddFrameSetting(builder, frameSettingOffset);
    return CameraAnimationData.EndCameraAnimationData(builder);
  }

  public static void StartCameraAnimationData(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFrameSetting(FlatBufferBuilder builder, Offset<gfl.anm2.fb.FrameSetting> frameSettingOffset) { builder.AddOffset(0, frameSettingOffset.Value, 0); }
  public static void AddCamera(FlatBufferBuilder builder, Offset<gfl.anm2.fb.CameraData> cameraOffset) { builder.AddOffset(1, cameraOffset.Value, 0); }
  public static Offset<gfl.anm2.fb.CameraAnimationData> EndCameraAnimationData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.anm2.fb.CameraAnimationData>(o);
  }
  public static void FinishCameraAnimationDataBuffer(FlatBufferBuilder builder, Offset<gfl.anm2.fb.CameraAnimationData> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedCameraAnimationDataBuffer(FlatBufferBuilder builder, Offset<gfl.anm2.fb.CameraAnimationData> offset) { builder.FinishSizePrefixed(offset.Value); }
  public CameraAnimationDataT UnPack() {
    var _o = new CameraAnimationDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CameraAnimationDataT _o) {
    _o.FrameSetting = this.FrameSetting.HasValue ? this.FrameSetting.Value.UnPack() : null;
    _o.Camera = this.Camera.HasValue ? this.Camera.Value.UnPack() : null;
  }
  public static Offset<gfl.anm2.fb.CameraAnimationData> Pack(FlatBufferBuilder builder, CameraAnimationDataT _o) {
    if (_o == null) return default(Offset<gfl.anm2.fb.CameraAnimationData>);
    var _frameSetting = _o.FrameSetting == null ? default(Offset<gfl.anm2.fb.FrameSetting>) : gfl.anm2.fb.FrameSetting.Pack(builder, _o.FrameSetting);
    var _camera = _o.Camera == null ? default(Offset<gfl.anm2.fb.CameraData>) : gfl.anm2.fb.CameraData.Pack(builder, _o.Camera);
    return CreateCameraAnimationData(
      builder,
      _frameSetting,
      _camera);
  }
};

public class CameraAnimationDataT
{
  [Newtonsoft.Json.JsonProperty("frameSetting")]
  public gfl.anm2.fb.FrameSettingT FrameSetting { get; set; }
  [Newtonsoft.Json.JsonProperty("camera")]
  public gfl.anm2.fb.CameraDataT Camera { get; set; }

  public CameraAnimationDataT() {
    this.FrameSetting = null;
    this.Camera = null;
  }

  public static CameraAnimationDataT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<CameraAnimationDataT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static CameraAnimationDataT DeserializeFromBinary(byte[] fbBuffer) {
    return CameraAnimationData.GetRootAsCameraAnimationData(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    CameraAnimationData.FinishCameraAnimationDataBuffer(fbb, CameraAnimationData.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
