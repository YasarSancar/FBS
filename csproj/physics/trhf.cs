// <auto-generated />


namespace gfl.physics.fb
{
    public class HeightField
    {
        [Newtonsoft.Json.JsonProperty("position")]
        public gfl.physics.fb.Vector Position { get; set; }

        [Newtonsoft.Json.JsonProperty("scale")]
        public gfl.physics.fb.Vector Scale { get; set; }

        [Newtonsoft.Json.JsonProperty("size")]
        public gfl.physics.fb.Vector Size { get; set; }

        [Newtonsoft.Json.JsonProperty("row")]
        public int Row { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("column")]
        public int Column { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("heights")]
        public System.Collections.Generic.List<float> Heights { get; set; }

        [Newtonsoft.Json.JsonProperty("layerWidth")]
        public int LayerWidth { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("layerHeight")]
        public int LayerHeight { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("layers")]
        public System.Collections.Generic.List<gfl.physics.fb.Layer> Layers { get; set; }

        [Newtonsoft.Json.JsonProperty("mask")]
        public gfl.physics.fb.Mask Mask { get; set; }

        [Newtonsoft.Json.JsonProperty("detailWidth")]
        public int DetailWidth { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("detailHeight")]
        public int DetailHeight { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("detailNames")]
        public System.Collections.Generic.List<string> DetailNames { get; set; }

        [Newtonsoft.Json.JsonProperty("detailDatas32")]
        public System.Collections.Generic.List<int> DetailDatas32 { get; set; }

        [Newtonsoft.Json.JsonProperty("detailDatas64")]
        public System.Collections.Generic.List<long> DetailDatas64 { get; set; }

        [Newtonsoft.Json.JsonProperty("layerNames")]
        public System.Collections.Generic.List<string> LayerNames { get; set; }

        [Newtonsoft.Json.JsonProperty("useBoundingVolumeFile")]
        public bool UseBoundingVolumeFile { get; set; } = false;

        [Newtonsoft.Json.JsonProperty("boundingVolumePath")]
        public string BoundingVolumePath { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.physics.fb.HeightField FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.physics.fb.HeightField>(jsonText);
        }

        public byte[] ToFlatBuffers()
        {
            var jsonText = this.ToJson();
            return GameFreak.FlatBuffersHelper.FlatBuffersConvert.JsonToFlatBuffers(jsonText, BFBS);
        }

        public static gfl.physics.fb.HeightField FromFlatBuffers(byte[] fb)
        {
            var jsonText = GameFreak.FlatBuffersHelper.FlatBuffersConvert.JsonFromFlatBuffers(fb, BFBS);
            return FromJson(jsonText);
        }

        public static readonly string FileIdentifier = "";

        public static readonly string FileExtension = "";

        public static readonly string BFBS_BASE64 = "GAAAAEJGQlMQABwABAAIAAwAEAAUABgAEAAAADAAAAAoAAAAHAAAABAAAAA0AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAA5AMAAIwDAAB8BAAAlPv//1gAAAAIAAAAAQAAABIAAABoAAAAoAIAABgBAADoAAAAZAEAADgBAACIAQAAZAIAABACAACoAAAAMAIAANABAACYAQAABAMAAJACAADUAgAAqAIAAFQAAAAaAAAAZ2ZsLnBoeXNpY3MuZmIuSGVpZ2h0RmllbGQAAKj7//8RACYAEAAAAAQAAABu+///AAAADRIAAABib3VuZGluZ1ZvbHVtZVBhdGgAANj7//8QACQAEAAAAAQAAACe+///AAAAAhUAAAB1c2VCb3VuZGluZ1ZvbHVtZUZpbGUAAAAM/P//DwAiABAAAAAEAAAA0Pz//wAADg0KAAAAbGF5ZXJOYW1lcwAANPz//w4AIAAQAAAABAAAAPj8//8AAA4JDQAAAGRldGFpbERhdGFzNjQAAABg/P//DQAeABAAAAAEAAAAJP3//wAADgcNAAAAZGV0YWlsRGF0YXMzMgAAAIz8//8MABwAEAAAAAQAAABQ/f//AAAODQsAAABkZXRhaWxOYW1lcwC0/P//CwAaABAAAAAEAAAAevz//wAAAAcMAAAAZGV0YWlsSGVpZ2h0AAAAAOD8//8KABgAEAAAAAQAAACm/P//AAAABwsAAABkZXRhaWxXaWR0aAAI/f//CQAWABQAAAAEAAAAjv7//wAAAA8CAAAABAAAAG1hc2sAAAAADAASAAgADAAEAAYADAAAAAgAFAAgAAAAEAAAAAAACgAMAAYABwAIAAoAAAAAAA4PAQAAAAYAAABsYXllcnMAAHD9//8HABIAEAAAAAQAAAA2/f//AAAABwsAAABsYXllckhlaWdodACY/f//BgAQABAAAAAEAAAAXv3//wAAAAcKAAAAbGF5ZXJXaWR0aAAAwP3//wUADgAQAAAABAAAAIT+//8AAA4LBwAAAGhlaWdodHMA5P3//wQADAAQAAAABAAAAKr9//8AAAAHBgAAAGNvbHVtbgAACP7//wMACgAQAAAABAAAAM79//8AAAAHAwAAAHJvdwAo/v//AgAIABQAAAAEAAAArv///wAAAA8DAAAABAAAAHNpemUAAAAAUP7//wEABgAUAAAABAAAANb///8AAAAPAwAAAAUAAABzY2FsZQAAAEz+//8AAAQAIAAAABAAAAAAAAoADAAHAAAACAAKAAAAAAAADwMAAAAIAAAAcG9zaXRpb24AAAAAGP///xQAAAAIAAAAAQAAAAEAAAAcAAAAEwAAAGdmbC5waHlzaWNzLmZiLk1hc2sAeP///wAABAAQAAAABAAAAKT///8AAA4EBgAAAHBpeGVscwAAbP///xgAAAAIAAAAAQAAAAIAAABcAAAAIAAAABQAAABnZmwucGh5c2ljcy5mYi5MYXllcgAAAAA8////AQAGABgAAAAMAAAACAAIAAYABwAIAAAAAAAOBAYAAABwaXhlbHMAAAwAEAAIAAwAAAAGAAwAAAAAAAQAEAAAAAQAAAA6////AAAADQQAAABuYW1lAAAAAAwAEAAEAAgAAAAMAAwAAAAcAAAACAAAAAEAAAADAAAAgAAAAFAAAAAgAAAAFQAAAGdmbC5waHlzaWNzLmZiLlZlY3RvcgAAAOD///8CAAgAEAAAAAQAAACm////AAAACwEAAAB6AAAADAAQAAgADAAEAAYADAAAAAEABgAQAAAABAAAANL///8AAAALAQAAAHkAAAAMABIACAAMAAAABgAMAAAAAAAEABgAAAAMAAAAAAAGAAgABwAGAAAAAAAACwEAAAB4AAAA";

        public static byte[] BFBS => System.Convert.FromBase64String(BFBS_BASE64);
    }

    public class Layer
    {
        [Newtonsoft.Json.JsonProperty("name")]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("pixels")]
        public System.Collections.Generic.List<byte> Pixels { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.physics.fb.Layer FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.physics.fb.Layer>(jsonText);
        }
    }

    public class Mask
    {
        [Newtonsoft.Json.JsonProperty("pixels")]
        public System.Collections.Generic.List<byte> Pixels { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.physics.fb.Mask FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.physics.fb.Mask>(jsonText);
        }
    }

    public class Vector
    {
        [Newtonsoft.Json.JsonProperty("x")]
        public float X { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("y")]
        public float Y { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("z")]
        public float Z { get; set; } = 0.0f;

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.physics.fb.Vector FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.physics.fb.Vector>(jsonText);
        }
    }
}
