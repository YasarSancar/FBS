// <auto-generated />

namespace pe.fbs.cc.comms.ge2cc
{
    public abstract class Command
    {
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum UnionType : uint
        {
            NONE = 0,
            None = 1,
            Deserialize = 2,
        }

        public static Command.UnionType GetUnionType(Command obj)
        {
            switch (obj)
            {
            default: return UnionType.NONE;
            case None _: return UnionType.None;
            case Deserialize _: return UnionType.Deserialize;
            }
        }

        public class Converter : Newtonsoft.Json.JsonConverter
        {
            public static UnionType UnionType { get; set; }

            public override bool CanConvert(System.Type objectType)
            {
                return objectType == typeof(Command);
            }

            public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer)
            {
                switch (UnionType)
                {
                default: return null;
                case UnionType.None: return serializer.Deserialize<None>(reader);
                case UnionType.Deserialize: return serializer.Deserialize<Deserialize>(reader);
                }
            }

            public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer)
            {
                serializer.Serialize(writer, value);
            }
        }

    }

    public class Deserialize : pe.fbs.cc.comms.ge2cc.Command
    {
        [Newtonsoft.Json.JsonProperty("imd")]
        public System.Collections.Generic.List<byte> Imd { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static pe.fbs.cc.comms.ge2cc.Deserialize FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<pe.fbs.cc.comms.ge2cc.Deserialize>(jsonText);
        }
    }

    public class None : pe.fbs.cc.comms.ge2cc.Command
    {

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static pe.fbs.cc.comms.ge2cc.None FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<pe.fbs.cc.comms.ge2cc.None>(jsonText);
        }
    }

    public class Root
    {
        [Newtonsoft.Json.JsonProperty("objectName")]
        public string ObjectName { get; set; }

        [Newtonsoft.Json.JsonProperty("sceneName")]
        public string SceneName { get; set; }

        [Newtonsoft.Json.JsonProperty("cmd_type")]
        public pe.fbs.cc.comms.ge2cc.Command.UnionType CmdType
        {
            get => pe.fbs.cc.comms.ge2cc.Command.GetUnionType(this.Cmd);
            private set => pe.fbs.cc.comms.ge2cc.Command.Converter.UnionType = value;
        }

        [Newtonsoft.Json.JsonProperty("cmd"), Newtonsoft.Json.JsonConverter(typeof(pe.fbs.cc.comms.ge2cc.Command.Converter))]
        public pe.fbs.cc.comms.ge2cc.Command Cmd { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static pe.fbs.cc.comms.ge2cc.Root FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<pe.fbs.cc.comms.ge2cc.Root>(jsonText);
        }

        public byte[] ToFlatBuffers()
        {
            var jsonText = this.ToJson();
            return GameFreak.FlatBuffersHelper.FlatBuffersConvert.JsonToFlatBuffers(jsonText, BFBS);
        }

        public static pe.fbs.cc.comms.ge2cc.Root FromFlatBuffers(byte[] fb)
        {
            var jsonText = GameFreak.FlatBuffersHelper.FlatBuffersConvert.JsonFromFlatBuffers(fb, BFBS);
            return FromJson(jsonText);
        }

        public static readonly string FileIdentifier = "";

        public static readonly string FileExtension = "";

        public static readonly string BFBS_BASE64 = "HAAAAEJGQlMAAAAAEAAcAAQACAAMABAAFAAYABAAAAA0AAAAKAAAABwAAAAQAAAAQAEAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAgAAAAAwAAADQCAACwAgAAEAEAAAwAFAAIAAwABwAQAAwAAAAAAAABKAAAABQAAAAEAAAAjv7//wAAAAEAAAAAAwAAALwAAAB4AAAANAAAAB0AAABwZS5mYnMuY2MuY29tbXMuZ2UyY2MuQ29tbWFuZAAAAAwAGAAEABAACAAMAAwAAAAgAAAAtAEAAAwAAAACAAAAAAAAAPL+//8AAAAPAAAAAAsAAABEZXNlcmlhbGl6ZQAMABwABAAQAAgADAAMAAAAJAAAAPQBAAAQAAAAAQAAAAAAAAAAAAAANv///wAAAA8BAAAABAAAAE5vbmUAAAAADAAMAAQAAAAAAAgADAAAABAAAAAIAAAABAAEAAQAAAAEAAAATk9ORQAAAABw/v//IAAAAAgAAAABAAAABAAAADAAAABcAAAA0AAAAJgAAAAaAAAAcGUuZmJzLmNjLmNvbW1zLmdlMmNjLlJvb3QAAJj///8DAAoAFAAAAAQAAADO////AAAAEAAAAAADAAAAY21kAAwAEgAIAAwABAAGAAwAAAACAAgAIAAAABAAAAAAAAoADAAHAAAACAAKAAAAAAAAAQAAAAAIAAAAY21kX3R5cGUAAAAADAAQAAgADAAEAAYADAAAAAEABgAQAAAABAAAAMr///8AAAANCQAAAHNjZW5lTmFtZQAAAAwAEgAIAAwAAAAGAAwAAAAAAAQAGAAAAAwAAAAAAAYACAAHAAYAAAAAAAANCgAAAG9iamVjdE5hbWUAAIz///8UAAAACAAAAAEAAAABAAAAOAAAACEAAABwZS5mYnMuY2MuY29tbXMuZ2UyY2MuRGVzZXJpYWxpemUAAAAMABAACAAMAAAABgAMAAAAAAAEABgAAAAMAAAACAAIAAYABwAIAAAAAAAOBAMAAABpbWQADAAQAAQACAAAAAwADAAAABAAAAAIAAAAAQAAAAAAAAAaAAAAcGUuZmJzLmNjLmNvbW1zLmdlMmNjLk5vbmUAAA==";

        public static byte[] BFBS => System.Convert.FromBase64String(BFBS_BASE64);
    }
}
