// <auto-generated />


namespace pe.fbs.cc.tool.filter
{
    public class Filter
    {
        [Newtonsoft.Json.JsonProperty("name")]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("tag")]
        public string Tag { get; set; }

        [Newtonsoft.Json.JsonProperty("category")]
        public string Category { get; set; }

        [Newtonsoft.Json.JsonProperty("children")]
        public System.Collections.Generic.List<pe.fbs.cc.tool.filter.Filter> Children { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static pe.fbs.cc.tool.filter.Filter FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<pe.fbs.cc.tool.filter.Filter>(jsonText);
        }
    }

    public class Root
    {
        [Newtonsoft.Json.JsonProperty("category")]
        public string Category { get; set; }

        [Newtonsoft.Json.JsonProperty("children")]
        public System.Collections.Generic.List<pe.fbs.cc.tool.filter.Filter> Children { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static pe.fbs.cc.tool.filter.Root FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<pe.fbs.cc.tool.filter.Root>(jsonText);
        }

        public byte[] ToFlatBuffers()
        {
            var jsonText = this.ToJson();
            return GameFreak.FlatBuffersHelper.FlatBuffersConvert.JsonToFlatBuffers(jsonText, BFBS);
        }

        public static pe.fbs.cc.tool.filter.Root FromFlatBuffers(byte[] fb)
        {
            var jsonText = GameFreak.FlatBuffersHelper.FlatBuffersConvert.JsonFromFlatBuffers(fb, BFBS);
            return FromJson(jsonText);
        }

        public static readonly string FileIdentifier = "CCFI";

        public static readonly string FileExtension = "";

        public static readonly string BFBS_BASE64 = "GAAAAEJGQlMQABwABAAIAAwAEAAUABgAEAAAADQAAAAsAAAAHAAAABAAAAAwAAAABAAAAAAAAAAAAAAAAAAAAAQAAABDQ0ZJAAAAAAAAAAACAAAAsAAAAAQAAABk////GAAAAAgAAAABAAAAAgAAAGAAAAAkAAAAGgAAAHBlLmZicy5jYy50b29sLmZpbHRlci5Sb290AADg/v//AQAGABQAAAAEAAAAPv///wAADg8AAAAACAAAAGNoaWxkcmVuAAAAAAwAEAAIAAwAAAAGAAwAAAAAAAQAEAAAAAQAAADe/v//AAAADQgAAABjYXRlZ29yeQAAAAAMABAABAAIAAAADAAMAAAAIAAAAAgAAAABAAAABAAAAHgAAAA8AAAA0AAAAKAAAAAcAAAAcGUuZmJzLmNjLnRvb2wuZmlsdGVyLkZpbHRlcgAAAAAMABIACAAMAAQABgAMAAAAAwAKACAAAAAQAAAAAAAKAAwABgAHAAgACgAAAAAADg8AAAAACAAAAGNoaWxkcmVuAAAAANj///8CAAgAEAAAAAQAAACe////AAAADQgAAABjYXRlZ29yeQAAAAAMABAACAAMAAQABgAMAAAAAQAGABAAAAAEAAAA0v///wAAAA0DAAAAdGFnAAwAEgAIAAwAAAAGAAwAAAAAAAQAGAAAAAwAAAAAAAYACAAHAAYAAAAAAAANBAAAAG5hbWUAAAAA";

        public static byte[] BFBS => System.Convert.FromBase64String(BFBS_BASE64);
    }
}
