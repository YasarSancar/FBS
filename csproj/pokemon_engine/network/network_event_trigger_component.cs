// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace pe.network.fb
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum NetworkTriggerTiming : int
{
  Is = 0,
  Was = 1,
  Trigger = 2,
  Release = 3,
  Both = 4,
  Any = 5,
  XOR = 6,
  Not = 7,
  Always = 8,
};

public struct NetworkEventTriggerComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static NetworkEventTriggerComponent GetRootAsNetworkEventTriggerComponent(ByteBuffer _bb) { return GetRootAsNetworkEventTriggerComponent(_bb, new NetworkEventTriggerComponent()); }
  public static NetworkEventTriggerComponent GetRootAsNetworkEventTriggerComponent(ByteBuffer _bb, NetworkEventTriggerComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public NetworkEventTriggerComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ResourceName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetResourceNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetResourceNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetResourceNameArray() { return __p.__vector_as_array<byte>(4); }
  public pe.network.fb.NetworkTriggerTiming TriggerTiming { get { int o = __p.__offset(6); return o != 0 ? (pe.network.fb.NetworkTriggerTiming)__p.bb.GetInt(o + __p.bb_pos) : pe.network.fb.NetworkTriggerTiming.Is; } }
  public string TriggerName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTriggerNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetTriggerNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTriggerNameArray() { return __p.__vector_as_array<byte>(8); }
  public string EventNames(int j) { int o = __p.__offset(10); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int EventNamesLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int ChannelGroupNumber { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ChannelId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<pe.network.fb.NetworkEventTriggerComponent> CreateNetworkEventTriggerComponent(FlatBufferBuilder builder,
      StringOffset resourceNameOffset = default(StringOffset),
      pe.network.fb.NetworkTriggerTiming triggerTiming = pe.network.fb.NetworkTriggerTiming.Is,
      StringOffset triggerNameOffset = default(StringOffset),
      VectorOffset eventNamesOffset = default(VectorOffset),
      int channelGroupNumber = 0,
      int channelId = 0) {
    builder.StartTable(6);
    NetworkEventTriggerComponent.AddChannelId(builder, channelId);
    NetworkEventTriggerComponent.AddChannelGroupNumber(builder, channelGroupNumber);
    NetworkEventTriggerComponent.AddEventNames(builder, eventNamesOffset);
    NetworkEventTriggerComponent.AddTriggerName(builder, triggerNameOffset);
    NetworkEventTriggerComponent.AddTriggerTiming(builder, triggerTiming);
    NetworkEventTriggerComponent.AddResourceName(builder, resourceNameOffset);
    return NetworkEventTriggerComponent.EndNetworkEventTriggerComponent(builder);
  }

  public static void StartNetworkEventTriggerComponent(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddResourceName(FlatBufferBuilder builder, StringOffset resourceNameOffset) { builder.AddOffset(0, resourceNameOffset.Value, 0); }
  public static void AddTriggerTiming(FlatBufferBuilder builder, pe.network.fb.NetworkTriggerTiming triggerTiming) { builder.AddInt(1, (int)triggerTiming, 0); }
  public static void AddTriggerName(FlatBufferBuilder builder, StringOffset triggerNameOffset) { builder.AddOffset(2, triggerNameOffset.Value, 0); }
  public static void AddEventNames(FlatBufferBuilder builder, VectorOffset eventNamesOffset) { builder.AddOffset(3, eventNamesOffset.Value, 0); }
  public static VectorOffset CreateEventNamesVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEventNamesVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEventNamesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChannelGroupNumber(FlatBufferBuilder builder, int channelGroupNumber) { builder.AddInt(4, channelGroupNumber, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, int channelId) { builder.AddInt(5, channelId, 0); }
  public static Offset<pe.network.fb.NetworkEventTriggerComponent> EndNetworkEventTriggerComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pe.network.fb.NetworkEventTriggerComponent>(o);
  }
  public static void FinishNetworkEventTriggerComponentBuffer(FlatBufferBuilder builder, Offset<pe.network.fb.NetworkEventTriggerComponent> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedNetworkEventTriggerComponentBuffer(FlatBufferBuilder builder, Offset<pe.network.fb.NetworkEventTriggerComponent> offset) { builder.FinishSizePrefixed(offset.Value); }
  public NetworkEventTriggerComponentT UnPack() {
    var _o = new NetworkEventTriggerComponentT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(NetworkEventTriggerComponentT _o) {
    _o.ResourceName = this.ResourceName;
    _o.TriggerTiming = this.TriggerTiming;
    _o.TriggerName = this.TriggerName;
    _o.EventNames = new List<string>();
    for (var _j = 0; _j < this.EventNamesLength; ++_j) {_o.EventNames.Add(this.EventNames(_j));}
    _o.ChannelGroupNumber = this.ChannelGroupNumber;
    _o.ChannelId = this.ChannelId;
  }
  public static Offset<pe.network.fb.NetworkEventTriggerComponent> Pack(FlatBufferBuilder builder, NetworkEventTriggerComponentT _o) {
    if (_o == null) return default(Offset<pe.network.fb.NetworkEventTriggerComponent>);
    var _resourceName = _o.ResourceName == null ? default(StringOffset) : builder.CreateString(_o.ResourceName);
    var _triggerName = _o.TriggerName == null ? default(StringOffset) : builder.CreateString(_o.TriggerName);
    var _eventNames = default(VectorOffset);
    if (_o.EventNames != null) {
      var __eventNames = new StringOffset[_o.EventNames.Count];
      for (var _j = 0; _j < __eventNames.Length; ++_j) { __eventNames[_j] = builder.CreateString(_o.EventNames[_j]); }
      _eventNames = CreateEventNamesVector(builder, __eventNames);
    }
    return CreateNetworkEventTriggerComponent(
      builder,
      _resourceName,
      _o.TriggerTiming,
      _triggerName,
      _eventNames,
      _o.ChannelGroupNumber,
      _o.ChannelId);
  }
};

public class NetworkEventTriggerComponentT
{
  [Newtonsoft.Json.JsonProperty("resourceName")]
  public string ResourceName { get; set; }
  [Newtonsoft.Json.JsonProperty("triggerTiming")]
  public pe.network.fb.NetworkTriggerTiming TriggerTiming { get; set; }
  [Newtonsoft.Json.JsonProperty("triggerName")]
  public string TriggerName { get; set; }
  [Newtonsoft.Json.JsonProperty("eventNames")]
  public List<string> EventNames { get; set; }
  [Newtonsoft.Json.JsonProperty("channelGroupNumber")]
  public int ChannelGroupNumber { get; set; }
  [Newtonsoft.Json.JsonProperty("channelId")]
  public int ChannelId { get; set; }

  public NetworkEventTriggerComponentT() {
    this.ResourceName = null;
    this.TriggerTiming = pe.network.fb.NetworkTriggerTiming.Is;
    this.TriggerName = null;
    this.EventNames = null;
    this.ChannelGroupNumber = 0;
    this.ChannelId = 0;
  }

  public static NetworkEventTriggerComponentT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<NetworkEventTriggerComponentT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static NetworkEventTriggerComponentT DeserializeFromBinary(byte[] fbBuffer) {
    return NetworkEventTriggerComponent.GetRootAsNetworkEventTriggerComponent(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    NetworkEventTriggerComponent.FinishNetworkEventTriggerComponentBuffer(fbb, NetworkEventTriggerComponent.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
