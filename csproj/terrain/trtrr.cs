// <auto-generated />


namespace gfl.terrain.fb
{
    public class AABB
    {
        [Newtonsoft.Json.JsonProperty("min")]
        public gfl.terrain.fb.Vector4 Min { get; set; }

        [Newtonsoft.Json.JsonProperty("max")]
        public gfl.terrain.fb.Vector4 Max { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.terrain.fb.AABB FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.terrain.fb.AABB>(jsonText);
        }
    }

    public class Detail
    {
        [Newtonsoft.Json.JsonProperty("detailFilePath")]
        public string DetailFilePath { get; set; }

        [Newtonsoft.Json.JsonProperty("minWidth")]
        public float MinWidth { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("maxWidth")]
        public float MaxWidth { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("minHeight")]
        public float MinHeight { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("maxHeight")]
        public float MaxHeight { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("noiseSpread")]
        public float NoiseSpread { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("healthyColor")]
        public gfl.terrain.fb.Vector4 HealthyColor { get; set; }

        [Newtonsoft.Json.JsonProperty("dryColor")]
        public gfl.terrain.fb.Vector4 DryColor { get; set; }

        [Newtonsoft.Json.JsonProperty("tileResolution")]
        public int TileResolution { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("cellResolutionPerTile")]
        public int CellResolutionPerTile { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("tileSize")]
        public float TileSize { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("noiseScaleH")]
        public float NoiseScaleH { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("noiseScaleV")]
        public float NoiseScaleV { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("noiseOffsetX")]
        public float NoiseOffsetX { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("noiseOffsetZ")]
        public float NoiseOffsetZ { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("noiseOffsetS")]
        public float NoiseOffsetS { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("minScaleV")]
        public float MinScaleV { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("maxScaleV")]
        public float MaxScaleV { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("spreadScaleH")]
        public float SpreadScaleH { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("shared")]
        public bool Shared { get; set; } = false;

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.terrain.fb.Detail FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.terrain.fb.Detail>(jsonText);
        }
    }

    public class Material
    {
        [Newtonsoft.Json.JsonProperty("materialPath")]
        public string MaterialPath { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.terrain.fb.Material FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.terrain.fb.Material>(jsonText);
        }
    }

    public class MeshResolution
    {
        [Newtonsoft.Json.JsonProperty("terrainWidth")]
        public float TerrainWidth { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("terrainLength")]
        public float TerrainLength { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("terrainHeight")]
        public float TerrainHeight { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("detailResolutionPerPatch")]
        public int DetailResolutionPerPatch { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("detailResolution")]
        public int DetailResolution { get; set; } = 0;

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.terrain.fb.MeshResolution FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.terrain.fb.MeshResolution>(jsonText);
        }
    }

    public class Terrain
    {
        [Newtonsoft.Json.JsonProperty("windSettingsForGrass")]
        public gfl.terrain.fb.WindSettingsForGrass WindSettingsForGrass { get; set; }

        [Newtonsoft.Json.JsonProperty("meshResolution")]
        public gfl.terrain.fb.MeshResolution MeshResolution { get; set; }

        [Newtonsoft.Json.JsonProperty("textureResolutions")]
        public gfl.terrain.fb.TextureResolutions TextureResolutions { get; set; }

        [Newtonsoft.Json.JsonProperty("treeCount")]
        public int TreeCount { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("trees")]
        public System.Collections.Generic.List<gfl.terrain.fb.Tree> Trees { get; set; }

        [Newtonsoft.Json.JsonProperty("detailCount")]
        public int DetailCount { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("details")]
        public System.Collections.Generic.List<gfl.terrain.fb.Detail> Details { get; set; }

        [Newtonsoft.Json.JsonProperty("material")]
        public gfl.terrain.fb.Material Material { get; set; }

        [Newtonsoft.Json.JsonProperty("detailTextureList")]
        public System.Collections.Generic.List<string> DetailTextureList { get; set; }

        [Newtonsoft.Json.JsonProperty("version")]
        public uint Version { get; set; } = 1u;

        [Newtonsoft.Json.JsonProperty("boundingBox")]
        public gfl.terrain.fb.AABB BoundingBox { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.terrain.fb.Terrain FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.terrain.fb.Terrain>(jsonText);
        }

        public byte[] ToFlatBuffers()
        {
            var jsonText = this.ToJson();
            return GameFreak.FlatBuffersHelper.FlatBuffersConvert.JsonToFlatBuffers(jsonText, BFBS);
        }

        public static gfl.terrain.fb.Terrain FromFlatBuffers(byte[] fb)
        {
            var jsonText = GameFreak.FlatBuffersHelper.FlatBuffersConvert.JsonFromFlatBuffers(fb, BFBS);
            return FromJson(jsonText);
        }

        public static readonly string FileIdentifier = "";

        public static readonly string FileExtension = "";

        public static readonly string BFBS_BASE64 = "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c2l6ZQAAAAAMABAACAAMAAAABgAMAAAAAAAEABAAAAAEAAAAzv3//wAAAAsFAAAAc3BlZWQAAAAMABAABAAIAAAADAAMAAAAGAAAAAgAAAABAAAAAgAAACAAAABMAAAAEwAAAGdmbC50ZXJyYWluLmZiLkFBQkIAZP7//wEABgAUAAAABAAAAM7///8AAAAPCAAAAAMAAABtYXgADAASAAgADAAAAAYADAAAAAAABAAgAAAAEAAAAAAACgAMAAcAAAAIAAoAAAAAAAAPCAAAAAMAAABtaW4ANv///wAAAAEkAAAADAAAAAQAAAAQAAAABAAAACwAAACQAAAAZAAAAEAAAAAWAAAAZ2ZsLnRlcnJhaW4uZmIuVmVjdG9yNAAADP///wMADAAQAAAABAAAANr+//8AAAALAQAAAHcAAAAs////AgAIABAAAAAEAAAA+v7//wAAAAsBAAAAegAAAEz///8BAAQAEAAAAAQAAAAa////AAAACwEAAAB5AAAACAAMAAQACAAIAAAAEAAAAAQAAAA+////AAAACwEAAAB4AA4AGAAIAAwABwAQABQADgAAAAAAAAEgAAAADAAAAAQAAAAMAAAAAwAAAHwAAABQAAAAIAAAABYAAABnZmwudGVycmFpbi5mYi5WZWN0b3IzAADg////AgAIABAAAAAEAAAArv///wAAAAsBAAAAegAAAAwAEAAIAAwABAAGAAwAAAABAAQAEAAAAAQAAADa////AAAACwEAAAB5AAAACAAOAAQACAAIAAAAGAAAAAwAAAAAAAYACAAHAAYAAAAAAAALAQAAAHgAAAA=";

        public static byte[] BFBS => System.Convert.FromBase64String(BFBS_BASE64);
    }

    public class TextureResolutions
    {
        [Newtonsoft.Json.JsonProperty("baseTextureResolution")]
        public int BaseTextureResolution { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("controlTextureResolution")]
        public int ControlTextureResolution { get; set; } = 0;

        [Newtonsoft.Json.JsonProperty("heightmapResolution")]
        public int HeightmapResolution { get; set; } = 0;

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.terrain.fb.TextureResolutions FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.terrain.fb.TextureResolutions>(jsonText);
        }
    }

    public class Tree
    {
        [Newtonsoft.Json.JsonProperty("modelFilePath")]
        public string ModelFilePath { get; set; }

        [Newtonsoft.Json.JsonProperty("instanceFilePathList")]
        public System.Collections.Generic.List<string> InstanceFilePathList { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.terrain.fb.Tree FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.terrain.fb.Tree>(jsonText);
        }
    }

    public class Vector3
    {
        [Newtonsoft.Json.JsonProperty("x")]
        public float X { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("y")]
        public float Y { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("z")]
        public float Z { get; set; } = 0.0f;

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.terrain.fb.Vector3 FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.terrain.fb.Vector3>(jsonText);
        }
    }

    public class Vector4
    {
        [Newtonsoft.Json.JsonProperty("x")]
        public float X { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("y")]
        public float Y { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("z")]
        public float Z { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("w")]
        public float W { get; set; } = 0.0f;

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.terrain.fb.Vector4 FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.terrain.fb.Vector4>(jsonText);
        }
    }

    public class WindSettingsForGrass
    {
        [Newtonsoft.Json.JsonProperty("speed")]
        public float Speed { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("size")]
        public float Size { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("bending")]
        public float Bending { get; set; } = 0.0f;

        [Newtonsoft.Json.JsonProperty("grassTint")]
        public gfl.terrain.fb.Vector4 GrassTint { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        public static gfl.terrain.fb.WindSettingsForGrass FromJson(string jsonText)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<gfl.terrain.fb.WindSettingsForGrass>(jsonText);
        }
    }
}
