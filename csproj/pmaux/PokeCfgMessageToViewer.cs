// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace pmaux.extension
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum SelectedIndexMode : byte
{
  Select = 0,
  Delete = 1,
};

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum InFrameRotationMode : byte
{
  Left = 0,
  Right = 1,
};

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum InFrameScreenOriginMode : byte
{
  Bottom = 0,
  Center = 1,
};

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum OffsetMode : byte
{
  None = 0,
  Ground = 1,
  Swimming = 2,
  Floating = 3,
};

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum MessageType : byte
{
  NONE = 0,
  SelectedIndexMessage = 1,
  LoadMessage = 2,
  OffsetModeMessage = 3,
  SetScaleMessage = 4,
  SetInframeMessage = 5,
  SetHideBoxMessage = 6,
  SetLodMessage = 7,
};

public class MessageTypeUnion {
  public MessageType Type { get; set; }
  public object Value { get; set; }

  public MessageTypeUnion() {
    this.Type = MessageType.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public pmaux.extension.SelectedIndexMessageT AsSelectedIndexMessage() { return this.As<pmaux.extension.SelectedIndexMessageT>(); }
  public pmaux.extension.LoadMessageT AsLoadMessage() { return this.As<pmaux.extension.LoadMessageT>(); }
  public pmaux.extension.OffsetModeMessageT AsOffsetModeMessage() { return this.As<pmaux.extension.OffsetModeMessageT>(); }
  public pmaux.extension.SetScaleMessageT AsSetScaleMessage() { return this.As<pmaux.extension.SetScaleMessageT>(); }
  public pmaux.extension.SetInframeMessageT AsSetInframeMessage() { return this.As<pmaux.extension.SetInframeMessageT>(); }
  public pmaux.extension.SetHideBoxMessageT AsSetHideBoxMessage() { return this.As<pmaux.extension.SetHideBoxMessageT>(); }
  public pmaux.extension.SetLodMessageT AsSetLodMessage() { return this.As<pmaux.extension.SetLodMessageT>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, MessageTypeUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case MessageType.SelectedIndexMessage: return pmaux.extension.SelectedIndexMessage.Pack(builder, _o.AsSelectedIndexMessage()).Value;
      case MessageType.LoadMessage: return pmaux.extension.LoadMessage.Pack(builder, _o.AsLoadMessage()).Value;
      case MessageType.OffsetModeMessage: return pmaux.extension.OffsetModeMessage.Pack(builder, _o.AsOffsetModeMessage()).Value;
      case MessageType.SetScaleMessage: return pmaux.extension.SetScaleMessage.Pack(builder, _o.AsSetScaleMessage()).Value;
      case MessageType.SetInframeMessage: return pmaux.extension.SetInframeMessage.Pack(builder, _o.AsSetInframeMessage()).Value;
      case MessageType.SetHideBoxMessage: return pmaux.extension.SetHideBoxMessage.Pack(builder, _o.AsSetHideBoxMessage()).Value;
      case MessageType.SetLodMessage: return pmaux.extension.SetLodMessage.Pack(builder, _o.AsSetLodMessage()).Value;
    }
  }
}

public class MessageTypeUnion_JsonConverter : Newtonsoft.Json.JsonConverter {
  public override bool CanConvert(System.Type objectType) {
    return objectType == typeof(MessageTypeUnion) || objectType == typeof(System.Collections.Generic.List<MessageTypeUnion>);
  }
  public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = value as System.Collections.Generic.List<MessageTypeUnion>;
    if (_olist != null) {
      writer.WriteStartArray();
      foreach (var _o in _olist) { this.WriteJson(writer, _o, serializer); }
      writer.WriteEndArray();
    } else {
      this.WriteJson(writer, value as MessageTypeUnion, serializer);
    }
  }
  public void WriteJson(Newtonsoft.Json.JsonWriter writer, MessageTypeUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return;
    serializer.Serialize(writer, _o.Value);
  }
  public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = existingValue as System.Collections.Generic.List<MessageTypeUnion>;
    if (_olist != null) {
      for (var _j = 0; _j < _olist.Count; ++_j) {
        reader.Read();
        _olist[_j] = this.ReadJson(reader, _olist[_j], serializer);
      }
      reader.Read();
      return _olist;
    } else {
      return this.ReadJson(reader, existingValue as MessageTypeUnion, serializer);
    }
  }
  public MessageTypeUnion ReadJson(Newtonsoft.Json.JsonReader reader, MessageTypeUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return null;
    switch (_o.Type) {
      default: break;
      case MessageType.SelectedIndexMessage: _o.Value = serializer.Deserialize<pmaux.extension.SelectedIndexMessageT>(reader); break;
      case MessageType.LoadMessage: _o.Value = serializer.Deserialize<pmaux.extension.LoadMessageT>(reader); break;
      case MessageType.OffsetModeMessage: _o.Value = serializer.Deserialize<pmaux.extension.OffsetModeMessageT>(reader); break;
      case MessageType.SetScaleMessage: _o.Value = serializer.Deserialize<pmaux.extension.SetScaleMessageT>(reader); break;
      case MessageType.SetInframeMessage: _o.Value = serializer.Deserialize<pmaux.extension.SetInframeMessageT>(reader); break;
      case MessageType.SetHideBoxMessage: _o.Value = serializer.Deserialize<pmaux.extension.SetHideBoxMessageT>(reader); break;
      case MessageType.SetLodMessage: _o.Value = serializer.Deserialize<pmaux.extension.SetLodMessageT>(reader); break;
    }
    return _o;
  }
}

public struct SelectedIndexMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SelectedIndexMessage GetRootAsSelectedIndexMessage(ByteBuffer _bb) { return GetRootAsSelectedIndexMessage(_bb, new SelectedIndexMessage()); }
  public static SelectedIndexMessage GetRootAsSelectedIndexMessage(ByteBuffer _bb, SelectedIndexMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SelectedIndexMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public pmaux.extension.SelectedIndexMode Mode { get { int o = __p.__offset(4); return o != 0 ? (pmaux.extension.SelectedIndexMode)__p.bb.Get(o + __p.bb_pos) : pmaux.extension.SelectedIndexMode.Select; } }
  public uint Index { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<pmaux.extension.SelectedIndexMessage> CreateSelectedIndexMessage(FlatBufferBuilder builder,
      pmaux.extension.SelectedIndexMode mode = pmaux.extension.SelectedIndexMode.Select,
      uint index = 0) {
    builder.StartTable(2);
    SelectedIndexMessage.AddIndex(builder, index);
    SelectedIndexMessage.AddMode(builder, mode);
    return SelectedIndexMessage.EndSelectedIndexMessage(builder);
  }

  public static void StartSelectedIndexMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMode(FlatBufferBuilder builder, pmaux.extension.SelectedIndexMode mode) { builder.AddByte(0, (byte)mode, 0); }
  public static void AddIndex(FlatBufferBuilder builder, uint index) { builder.AddUint(1, index, 0); }
  public static Offset<pmaux.extension.SelectedIndexMessage> EndSelectedIndexMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pmaux.extension.SelectedIndexMessage>(o);
  }
  public SelectedIndexMessageT UnPack() {
    var _o = new SelectedIndexMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SelectedIndexMessageT _o) {
    _o.Mode = this.Mode;
    _o.Index = this.Index;
  }
  public static Offset<pmaux.extension.SelectedIndexMessage> Pack(FlatBufferBuilder builder, SelectedIndexMessageT _o) {
    if (_o == null) return default(Offset<pmaux.extension.SelectedIndexMessage>);
    return CreateSelectedIndexMessage(
      builder,
      _o.Mode,
      _o.Index);
  }
};

public class SelectedIndexMessageT
{
  [Newtonsoft.Json.JsonProperty("mode")]
  public pmaux.extension.SelectedIndexMode Mode { get; set; }
  [Newtonsoft.Json.JsonProperty("index")]
  public uint Index { get; set; }

  public SelectedIndexMessageT() {
    this.Mode = pmaux.extension.SelectedIndexMode.Select;
    this.Index = 0;
  }
}

public struct LoadMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static LoadMessage GetRootAsLoadMessage(ByteBuffer _bb) { return GetRootAsLoadMessage(_bb, new LoadMessage()); }
  public static LoadMessage GetRootAsLoadMessage(ByteBuffer _bb, LoadMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LoadMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string FileName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFileNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetFileNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetFileNameArray() { return __p.__vector_as_array<byte>(4); }
  public byte Data(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int DataLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDataBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetDataBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetDataArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<pmaux.extension.LoadMessage> CreateLoadMessage(FlatBufferBuilder builder,
      StringOffset fileNameOffset = default(StringOffset),
      VectorOffset dataOffset = default(VectorOffset)) {
    builder.StartTable(2);
    LoadMessage.AddData(builder, dataOffset);
    LoadMessage.AddFileName(builder, fileNameOffset);
    return LoadMessage.EndLoadMessage(builder);
  }

  public static void StartLoadMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFileName(FlatBufferBuilder builder, StringOffset fileNameOffset) { builder.AddOffset(0, fileNameOffset.Value, 0); }
  public static void AddData(FlatBufferBuilder builder, VectorOffset dataOffset) { builder.AddOffset(1, dataOffset.Value, 0); }
  public static VectorOffset CreateDataVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDataVectorBlock(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<pmaux.extension.LoadMessage> EndLoadMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pmaux.extension.LoadMessage>(o);
  }
  public LoadMessageT UnPack() {
    var _o = new LoadMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LoadMessageT _o) {
    _o.FileName = this.FileName;
    _o.Data = new List<byte>();
    for (var _j = 0; _j < this.DataLength; ++_j) {_o.Data.Add(this.Data(_j));}
  }
  public static Offset<pmaux.extension.LoadMessage> Pack(FlatBufferBuilder builder, LoadMessageT _o) {
    if (_o == null) return default(Offset<pmaux.extension.LoadMessage>);
    var _fileName = _o.FileName == null ? default(StringOffset) : builder.CreateString(_o.FileName);
    var _data = default(VectorOffset);
    if (_o.Data != null) {
      var __data = _o.Data.ToArray();
      _data = CreateDataVector(builder, __data);
    }
    return CreateLoadMessage(
      builder,
      _fileName,
      _data);
  }
};

public class LoadMessageT
{
  [Newtonsoft.Json.JsonProperty("fileName")]
  public string FileName { get; set; }
  [Newtonsoft.Json.JsonProperty("data")]
  public List<byte> Data { get; set; }

  public LoadMessageT() {
    this.FileName = null;
    this.Data = null;
  }
}

public struct OffsetModeMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static OffsetModeMessage GetRootAsOffsetModeMessage(ByteBuffer _bb) { return GetRootAsOffsetModeMessage(_bb, new OffsetModeMessage()); }
  public static OffsetModeMessage GetRootAsOffsetModeMessage(ByteBuffer _bb, OffsetModeMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public OffsetModeMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public pmaux.extension.OffsetMode Mode { get { int o = __p.__offset(4); return o != 0 ? (pmaux.extension.OffsetMode)__p.bb.Get(o + __p.bb_pos) : pmaux.extension.OffsetMode.None; } }

  public static Offset<pmaux.extension.OffsetModeMessage> CreateOffsetModeMessage(FlatBufferBuilder builder,
      pmaux.extension.OffsetMode mode = pmaux.extension.OffsetMode.None) {
    builder.StartTable(1);
    OffsetModeMessage.AddMode(builder, mode);
    return OffsetModeMessage.EndOffsetModeMessage(builder);
  }

  public static void StartOffsetModeMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddMode(FlatBufferBuilder builder, pmaux.extension.OffsetMode mode) { builder.AddByte(0, (byte)mode, 0); }
  public static Offset<pmaux.extension.OffsetModeMessage> EndOffsetModeMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pmaux.extension.OffsetModeMessage>(o);
  }
  public OffsetModeMessageT UnPack() {
    var _o = new OffsetModeMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(OffsetModeMessageT _o) {
    _o.Mode = this.Mode;
  }
  public static Offset<pmaux.extension.OffsetModeMessage> Pack(FlatBufferBuilder builder, OffsetModeMessageT _o) {
    if (_o == null) return default(Offset<pmaux.extension.OffsetModeMessage>);
    return CreateOffsetModeMessage(
      builder,
      _o.Mode);
  }
};

public class OffsetModeMessageT
{
  [Newtonsoft.Json.JsonProperty("mode")]
  public pmaux.extension.OffsetMode Mode { get; set; }

  public OffsetModeMessageT() {
    this.Mode = pmaux.extension.OffsetMode.None;
  }
}

public struct SetScaleMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetScaleMessage GetRootAsSetScaleMessage(ByteBuffer _bb) { return GetRootAsSetScaleMessage(_bb, new SetScaleMessage()); }
  public static SetScaleMessage GetRootAsSetScaleMessage(ByteBuffer _bb, SetScaleMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetScaleMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Scale { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)1.0f; } }

  public static Offset<pmaux.extension.SetScaleMessage> CreateSetScaleMessage(FlatBufferBuilder builder,
      float scale = 1.0f) {
    builder.StartTable(1);
    SetScaleMessage.AddScale(builder, scale);
    return SetScaleMessage.EndSetScaleMessage(builder);
  }

  public static void StartSetScaleMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddScale(FlatBufferBuilder builder, float scale) { builder.AddFloat(0, scale, 1.0f); }
  public static Offset<pmaux.extension.SetScaleMessage> EndSetScaleMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pmaux.extension.SetScaleMessage>(o);
  }
  public SetScaleMessageT UnPack() {
    var _o = new SetScaleMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetScaleMessageT _o) {
    _o.Scale = this.Scale;
  }
  public static Offset<pmaux.extension.SetScaleMessage> Pack(FlatBufferBuilder builder, SetScaleMessageT _o) {
    if (_o == null) return default(Offset<pmaux.extension.SetScaleMessage>);
    return CreateSetScaleMessage(
      builder,
      _o.Scale);
  }
};

public class SetScaleMessageT
{
  [Newtonsoft.Json.JsonProperty("scale")]
  public float Scale { get; set; }

  public SetScaleMessageT() {
    this.Scale = 1.0f;
  }
}

public struct SetInframeMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetInframeMessage GetRootAsSetInframeMessage(ByteBuffer _bb) { return GetRootAsSetInframeMessage(_bb, new SetInframeMessage()); }
  public static SetInframeMessage GetRootAsSetInframeMessage(ByteBuffer _bb, SetInframeMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetInframeMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool InFrameEnable { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public pmaux.extension.InFrameRotationMode InFrameRotationMode { get { int o = __p.__offset(6); return o != 0 ? (pmaux.extension.InFrameRotationMode)__p.bb.Get(o + __p.bb_pos) : pmaux.extension.InFrameRotationMode.Left; } }
  public pmaux.extension.InFrameScreenOriginMode InFrameScreenOriginMode { get { int o = __p.__offset(8); return o != 0 ? (pmaux.extension.InFrameScreenOriginMode)__p.bb.Get(o + __p.bb_pos) : pmaux.extension.InFrameScreenOriginMode.Bottom; } }
  public float InFrameVerticalRotation { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<pmaux.extension.SetInframeMessage> CreateSetInframeMessage(FlatBufferBuilder builder,
      bool inFrameEnable = false,
      pmaux.extension.InFrameRotationMode inFrameRotationMode = pmaux.extension.InFrameRotationMode.Left,
      pmaux.extension.InFrameScreenOriginMode inFrameScreenOriginMode = pmaux.extension.InFrameScreenOriginMode.Bottom,
      float inFrameVerticalRotation = 0.0f) {
    builder.StartTable(4);
    SetInframeMessage.AddInFrameVerticalRotation(builder, inFrameVerticalRotation);
    SetInframeMessage.AddInFrameScreenOriginMode(builder, inFrameScreenOriginMode);
    SetInframeMessage.AddInFrameRotationMode(builder, inFrameRotationMode);
    SetInframeMessage.AddInFrameEnable(builder, inFrameEnable);
    return SetInframeMessage.EndSetInframeMessage(builder);
  }

  public static void StartSetInframeMessage(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddInFrameEnable(FlatBufferBuilder builder, bool inFrameEnable) { builder.AddBool(0, inFrameEnable, false); }
  public static void AddInFrameRotationMode(FlatBufferBuilder builder, pmaux.extension.InFrameRotationMode inFrameRotationMode) { builder.AddByte(1, (byte)inFrameRotationMode, 0); }
  public static void AddInFrameScreenOriginMode(FlatBufferBuilder builder, pmaux.extension.InFrameScreenOriginMode inFrameScreenOriginMode) { builder.AddByte(2, (byte)inFrameScreenOriginMode, 0); }
  public static void AddInFrameVerticalRotation(FlatBufferBuilder builder, float inFrameVerticalRotation) { builder.AddFloat(3, inFrameVerticalRotation, 0.0f); }
  public static Offset<pmaux.extension.SetInframeMessage> EndSetInframeMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pmaux.extension.SetInframeMessage>(o);
  }
  public SetInframeMessageT UnPack() {
    var _o = new SetInframeMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetInframeMessageT _o) {
    _o.InFrameEnable = this.InFrameEnable;
    _o.InFrameRotationMode = this.InFrameRotationMode;
    _o.InFrameScreenOriginMode = this.InFrameScreenOriginMode;
    _o.InFrameVerticalRotation = this.InFrameVerticalRotation;
  }
  public static Offset<pmaux.extension.SetInframeMessage> Pack(FlatBufferBuilder builder, SetInframeMessageT _o) {
    if (_o == null) return default(Offset<pmaux.extension.SetInframeMessage>);
    return CreateSetInframeMessage(
      builder,
      _o.InFrameEnable,
      _o.InFrameRotationMode,
      _o.InFrameScreenOriginMode,
      _o.InFrameVerticalRotation);
  }
};

public class SetInframeMessageT
{
  [Newtonsoft.Json.JsonProperty("inFrameEnable")]
  public bool InFrameEnable { get; set; }
  [Newtonsoft.Json.JsonProperty("inFrameRotationMode")]
  public pmaux.extension.InFrameRotationMode InFrameRotationMode { get; set; }
  [Newtonsoft.Json.JsonProperty("inFrameScreenOriginMode")]
  public pmaux.extension.InFrameScreenOriginMode InFrameScreenOriginMode { get; set; }
  [Newtonsoft.Json.JsonProperty("inFrameVerticalRotation")]
  public float InFrameVerticalRotation { get; set; }

  public SetInframeMessageT() {
    this.InFrameEnable = false;
    this.InFrameRotationMode = pmaux.extension.InFrameRotationMode.Left;
    this.InFrameScreenOriginMode = pmaux.extension.InFrameScreenOriginMode.Bottom;
    this.InFrameVerticalRotation = 0.0f;
  }
}

public struct SetHideBoxMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetHideBoxMessage GetRootAsSetHideBoxMessage(ByteBuffer _bb) { return GetRootAsSetHideBoxMessage(_bb, new SetHideBoxMessage()); }
  public static SetHideBoxMessage GetRootAsSetHideBoxMessage(ByteBuffer _bb, SetHideBoxMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetHideBoxMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsHideFloor { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public float SizeX { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)1.0f; } }
  public float SizeY { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)1.0f; } }
  public float SizeZ { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)1.0f; } }
  public float CenterX { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float CenterY { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float CenterZ { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<pmaux.extension.SetHideBoxMessage> CreateSetHideBoxMessage(FlatBufferBuilder builder,
      bool isHideFloor = false,
      float sizeX = 1.0f,
      float sizeY = 1.0f,
      float sizeZ = 1.0f,
      float centerX = 0.0f,
      float centerY = 0.0f,
      float centerZ = 0.0f) {
    builder.StartTable(7);
    SetHideBoxMessage.AddCenterZ(builder, centerZ);
    SetHideBoxMessage.AddCenterY(builder, centerY);
    SetHideBoxMessage.AddCenterX(builder, centerX);
    SetHideBoxMessage.AddSizeZ(builder, sizeZ);
    SetHideBoxMessage.AddSizeY(builder, sizeY);
    SetHideBoxMessage.AddSizeX(builder, sizeX);
    SetHideBoxMessage.AddIsHideFloor(builder, isHideFloor);
    return SetHideBoxMessage.EndSetHideBoxMessage(builder);
  }

  public static void StartSetHideBoxMessage(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddIsHideFloor(FlatBufferBuilder builder, bool isHideFloor) { builder.AddBool(0, isHideFloor, false); }
  public static void AddSizeX(FlatBufferBuilder builder, float sizeX) { builder.AddFloat(1, sizeX, 1.0f); }
  public static void AddSizeY(FlatBufferBuilder builder, float sizeY) { builder.AddFloat(2, sizeY, 1.0f); }
  public static void AddSizeZ(FlatBufferBuilder builder, float sizeZ) { builder.AddFloat(3, sizeZ, 1.0f); }
  public static void AddCenterX(FlatBufferBuilder builder, float centerX) { builder.AddFloat(4, centerX, 0.0f); }
  public static void AddCenterY(FlatBufferBuilder builder, float centerY) { builder.AddFloat(5, centerY, 0.0f); }
  public static void AddCenterZ(FlatBufferBuilder builder, float centerZ) { builder.AddFloat(6, centerZ, 0.0f); }
  public static Offset<pmaux.extension.SetHideBoxMessage> EndSetHideBoxMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pmaux.extension.SetHideBoxMessage>(o);
  }
  public SetHideBoxMessageT UnPack() {
    var _o = new SetHideBoxMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetHideBoxMessageT _o) {
    _o.IsHideFloor = this.IsHideFloor;
    _o.SizeX = this.SizeX;
    _o.SizeY = this.SizeY;
    _o.SizeZ = this.SizeZ;
    _o.CenterX = this.CenterX;
    _o.CenterY = this.CenterY;
    _o.CenterZ = this.CenterZ;
  }
  public static Offset<pmaux.extension.SetHideBoxMessage> Pack(FlatBufferBuilder builder, SetHideBoxMessageT _o) {
    if (_o == null) return default(Offset<pmaux.extension.SetHideBoxMessage>);
    return CreateSetHideBoxMessage(
      builder,
      _o.IsHideFloor,
      _o.SizeX,
      _o.SizeY,
      _o.SizeZ,
      _o.CenterX,
      _o.CenterY,
      _o.CenterZ);
  }
};

public class SetHideBoxMessageT
{
  [Newtonsoft.Json.JsonProperty("isHideFloor")]
  public bool IsHideFloor { get; set; }
  [Newtonsoft.Json.JsonProperty("sizeX")]
  public float SizeX { get; set; }
  [Newtonsoft.Json.JsonProperty("sizeY")]
  public float SizeY { get; set; }
  [Newtonsoft.Json.JsonProperty("sizeZ")]
  public float SizeZ { get; set; }
  [Newtonsoft.Json.JsonProperty("centerX")]
  public float CenterX { get; set; }
  [Newtonsoft.Json.JsonProperty("centerY")]
  public float CenterY { get; set; }
  [Newtonsoft.Json.JsonProperty("centerZ")]
  public float CenterZ { get; set; }

  public SetHideBoxMessageT() {
    this.IsHideFloor = false;
    this.SizeX = 1.0f;
    this.SizeY = 1.0f;
    this.SizeZ = 1.0f;
    this.CenterX = 0.0f;
    this.CenterY = 0.0f;
    this.CenterZ = 0.0f;
  }
}

public struct SetLodMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetLodMessage GetRootAsSetLodMessage(ByteBuffer _bb) { return GetRootAsSetLodMessage(_bb, new SetLodMessage()); }
  public static SetLodMessage GetRootAsSetLodMessage(ByteBuffer _bb, SetLodMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetLodMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool UseSize { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int Size { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool UseDistance { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public float Distance0 { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Distance1 { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Distance2 { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<pmaux.extension.SetLodMessage> CreateSetLodMessage(FlatBufferBuilder builder,
      bool useSize = false,
      int size = 0,
      bool useDistance = false,
      float distance0 = 0.0f,
      float distance1 = 0.0f,
      float distance2 = 0.0f) {
    builder.StartTable(6);
    SetLodMessage.AddDistance2(builder, distance2);
    SetLodMessage.AddDistance1(builder, distance1);
    SetLodMessage.AddDistance0(builder, distance0);
    SetLodMessage.AddSize(builder, size);
    SetLodMessage.AddUseDistance(builder, useDistance);
    SetLodMessage.AddUseSize(builder, useSize);
    return SetLodMessage.EndSetLodMessage(builder);
  }

  public static void StartSetLodMessage(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddUseSize(FlatBufferBuilder builder, bool useSize) { builder.AddBool(0, useSize, false); }
  public static void AddSize(FlatBufferBuilder builder, int size) { builder.AddInt(1, size, 0); }
  public static void AddUseDistance(FlatBufferBuilder builder, bool useDistance) { builder.AddBool(2, useDistance, false); }
  public static void AddDistance0(FlatBufferBuilder builder, float distance0) { builder.AddFloat(3, distance0, 0.0f); }
  public static void AddDistance1(FlatBufferBuilder builder, float distance1) { builder.AddFloat(4, distance1, 0.0f); }
  public static void AddDistance2(FlatBufferBuilder builder, float distance2) { builder.AddFloat(5, distance2, 0.0f); }
  public static Offset<pmaux.extension.SetLodMessage> EndSetLodMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pmaux.extension.SetLodMessage>(o);
  }
  public SetLodMessageT UnPack() {
    var _o = new SetLodMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetLodMessageT _o) {
    _o.UseSize = this.UseSize;
    _o.Size = this.Size;
    _o.UseDistance = this.UseDistance;
    _o.Distance0 = this.Distance0;
    _o.Distance1 = this.Distance1;
    _o.Distance2 = this.Distance2;
  }
  public static Offset<pmaux.extension.SetLodMessage> Pack(FlatBufferBuilder builder, SetLodMessageT _o) {
    if (_o == null) return default(Offset<pmaux.extension.SetLodMessage>);
    return CreateSetLodMessage(
      builder,
      _o.UseSize,
      _o.Size,
      _o.UseDistance,
      _o.Distance0,
      _o.Distance1,
      _o.Distance2);
  }
};

public class SetLodMessageT
{
  [Newtonsoft.Json.JsonProperty("useSize")]
  public bool UseSize { get; set; }
  [Newtonsoft.Json.JsonProperty("size")]
  public int Size { get; set; }
  [Newtonsoft.Json.JsonProperty("useDistance")]
  public bool UseDistance { get; set; }
  [Newtonsoft.Json.JsonProperty("distance0")]
  public float Distance0 { get; set; }
  [Newtonsoft.Json.JsonProperty("distance1")]
  public float Distance1 { get; set; }
  [Newtonsoft.Json.JsonProperty("distance2")]
  public float Distance2 { get; set; }

  public SetLodMessageT() {
    this.UseSize = false;
    this.Size = 0;
    this.UseDistance = false;
    this.Distance0 = 0.0f;
    this.Distance1 = 0.0f;
    this.Distance2 = 0.0f;
  }
}

public struct PokeCfgMessageToViewer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static PokeCfgMessageToViewer GetRootAsPokeCfgMessageToViewer(ByteBuffer _bb) { return GetRootAsPokeCfgMessageToViewer(_bb, new PokeCfgMessageToViewer()); }
  public static PokeCfgMessageToViewer GetRootAsPokeCfgMessageToViewer(ByteBuffer _bb, PokeCfgMessageToViewer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PokeCfgMessageToViewer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public pmaux.extension.MessageType MessageType { get { int o = __p.__offset(4); return o != 0 ? (pmaux.extension.MessageType)__p.bb.Get(o + __p.bb_pos) : pmaux.extension.MessageType.NONE; } }
  public TTable? Message<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<pmaux.extension.PokeCfgMessageToViewer> CreatePokeCfgMessageToViewer(FlatBufferBuilder builder,
      pmaux.extension.MessageType message_type = pmaux.extension.MessageType.NONE,
      int messageOffset = 0) {
    builder.StartTable(2);
    PokeCfgMessageToViewer.AddMessage(builder, messageOffset);
    PokeCfgMessageToViewer.AddMessageType(builder, message_type);
    return PokeCfgMessageToViewer.EndPokeCfgMessageToViewer(builder);
  }

  public static void StartPokeCfgMessageToViewer(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMessageType(FlatBufferBuilder builder, pmaux.extension.MessageType messageType) { builder.AddByte(0, (byte)messageType, 0); }
  public static void AddMessage(FlatBufferBuilder builder, int messageOffset) { builder.AddOffset(1, messageOffset, 0); }
  public static Offset<pmaux.extension.PokeCfgMessageToViewer> EndPokeCfgMessageToViewer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<pmaux.extension.PokeCfgMessageToViewer>(o);
  }
  public static void FinishPokeCfgMessageToViewerBuffer(FlatBufferBuilder builder, Offset<pmaux.extension.PokeCfgMessageToViewer> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedPokeCfgMessageToViewerBuffer(FlatBufferBuilder builder, Offset<pmaux.extension.PokeCfgMessageToViewer> offset) { builder.FinishSizePrefixed(offset.Value); }
  public PokeCfgMessageToViewerT UnPack() {
    var _o = new PokeCfgMessageToViewerT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PokeCfgMessageToViewerT _o) {
    _o.Message = new pmaux.extension.MessageTypeUnion();
    _o.Message.Type = this.MessageType;
    switch (this.MessageType) {
      default: break;
      case pmaux.extension.MessageType.SelectedIndexMessage:
        _o.Message.Value = this.Message<pmaux.extension.SelectedIndexMessage>().HasValue ? this.Message<pmaux.extension.SelectedIndexMessage>().Value.UnPack() : null;
        break;
      case pmaux.extension.MessageType.LoadMessage:
        _o.Message.Value = this.Message<pmaux.extension.LoadMessage>().HasValue ? this.Message<pmaux.extension.LoadMessage>().Value.UnPack() : null;
        break;
      case pmaux.extension.MessageType.OffsetModeMessage:
        _o.Message.Value = this.Message<pmaux.extension.OffsetModeMessage>().HasValue ? this.Message<pmaux.extension.OffsetModeMessage>().Value.UnPack() : null;
        break;
      case pmaux.extension.MessageType.SetScaleMessage:
        _o.Message.Value = this.Message<pmaux.extension.SetScaleMessage>().HasValue ? this.Message<pmaux.extension.SetScaleMessage>().Value.UnPack() : null;
        break;
      case pmaux.extension.MessageType.SetInframeMessage:
        _o.Message.Value = this.Message<pmaux.extension.SetInframeMessage>().HasValue ? this.Message<pmaux.extension.SetInframeMessage>().Value.UnPack() : null;
        break;
      case pmaux.extension.MessageType.SetHideBoxMessage:
        _o.Message.Value = this.Message<pmaux.extension.SetHideBoxMessage>().HasValue ? this.Message<pmaux.extension.SetHideBoxMessage>().Value.UnPack() : null;
        break;
      case pmaux.extension.MessageType.SetLodMessage:
        _o.Message.Value = this.Message<pmaux.extension.SetLodMessage>().HasValue ? this.Message<pmaux.extension.SetLodMessage>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<pmaux.extension.PokeCfgMessageToViewer> Pack(FlatBufferBuilder builder, PokeCfgMessageToViewerT _o) {
    if (_o == null) return default(Offset<pmaux.extension.PokeCfgMessageToViewer>);
    var _message_type = _o.Message == null ? pmaux.extension.MessageType.NONE : _o.Message.Type;
    var _message = _o.Message == null ? 0 : pmaux.extension.MessageTypeUnion.Pack(builder, _o.Message);
    return CreatePokeCfgMessageToViewer(
      builder,
      _message_type,
      _message);
  }
};

public class PokeCfgMessageToViewerT
{
  [Newtonsoft.Json.JsonProperty("message_type")]
  private pmaux.extension.MessageType MessageType {
    get {
      return this.Message != null ? this.Message.Type : pmaux.extension.MessageType.NONE;
    }
    set {
      this.Message = new pmaux.extension.MessageTypeUnion();
      this.Message.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("message")]
  [Newtonsoft.Json.JsonConverter(typeof(pmaux.extension.MessageTypeUnion_JsonConverter))]
  public pmaux.extension.MessageTypeUnion Message { get; set; }

  public PokeCfgMessageToViewerT() {
    this.Message = null;
  }

  public static PokeCfgMessageToViewerT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<PokeCfgMessageToViewerT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static PokeCfgMessageToViewerT DeserializeFromBinary(byte[] fbBuffer) {
    return PokeCfgMessageToViewer.GetRootAsPokeCfgMessageToViewer(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    PokeCfgMessageToViewer.FinishPokeCfgMessageToViewerBuffer(fbb, PokeCfgMessageToViewer.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
