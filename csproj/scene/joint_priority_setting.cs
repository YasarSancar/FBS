// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace gfl.scene.fb
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct JointLod : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static JointLod GetRootAsJointLod(ByteBuffer _bb) { return GetRootAsJointLod(_bb, new JointLod()); }
  public static JointLod GetRootAsJointLod(ByteBuffer _bb, JointLod obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public JointLod __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Distance { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int Priority { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<gfl.scene.fb.JointLod> CreateJointLod(FlatBufferBuilder builder,
      float distance = 0.0f,
      int priority = 0) {
    builder.StartTable(2);
    JointLod.AddPriority(builder, priority);
    JointLod.AddDistance(builder, distance);
    return JointLod.EndJointLod(builder);
  }

  public static void StartJointLod(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddDistance(FlatBufferBuilder builder, float distance) { builder.AddFloat(0, distance, 0.0f); }
  public static void AddPriority(FlatBufferBuilder builder, int priority) { builder.AddInt(1, priority, 0); }
  public static Offset<gfl.scene.fb.JointLod> EndJointLod(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.scene.fb.JointLod>(o);
  }
  public JointLodT UnPack() {
    var _o = new JointLodT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(JointLodT _o) {
    _o.Distance = this.Distance;
    _o.Priority = this.Priority;
  }
  public static Offset<gfl.scene.fb.JointLod> Pack(FlatBufferBuilder builder, JointLodT _o) {
    if (_o == null) return default(Offset<gfl.scene.fb.JointLod>);
    return CreateJointLod(
      builder,
      _o.Distance,
      _o.Priority);
  }
};

public class JointLodT
{
  [Newtonsoft.Json.JsonProperty("distance")]
  public float Distance { get; set; }
  [Newtonsoft.Json.JsonProperty("priority")]
  public int Priority { get; set; }

  public JointLodT() {
    this.Distance = 0.0f;
    this.Priority = 0;
  }
}

public struct SubJointPrioritySetting : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SubJointPrioritySetting GetRootAsSubJointPrioritySetting(ByteBuffer _bb) { return GetRootAsSubJointPrioritySetting(_bb, new SubJointPrioritySetting()); }
  public static SubJointPrioritySetting GetRootAsSubJointPrioritySetting(ByteBuffer _bb, SubJointPrioritySetting obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SubJointPrioritySetting __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string CategoryName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCategoryNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetCategoryNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetCategoryNameArray() { return __p.__vector_as_array<byte>(4); }
  public float Threshold { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public gfl.scene.fb.JointLod? JointLods(int j) { int o = __p.__offset(8); return o != 0 ? (gfl.scene.fb.JointLod?)(new gfl.scene.fb.JointLod()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int JointLodsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<gfl.scene.fb.SubJointPrioritySetting> CreateSubJointPrioritySetting(FlatBufferBuilder builder,
      StringOffset categoryNameOffset = default(StringOffset),
      float threshold = 0.0f,
      VectorOffset jointLodsOffset = default(VectorOffset)) {
    builder.StartTable(3);
    SubJointPrioritySetting.AddJointLods(builder, jointLodsOffset);
    SubJointPrioritySetting.AddThreshold(builder, threshold);
    SubJointPrioritySetting.AddCategoryName(builder, categoryNameOffset);
    return SubJointPrioritySetting.EndSubJointPrioritySetting(builder);
  }

  public static void StartSubJointPrioritySetting(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddCategoryName(FlatBufferBuilder builder, StringOffset categoryNameOffset) { builder.AddOffset(0, categoryNameOffset.Value, 0); }
  public static void AddThreshold(FlatBufferBuilder builder, float threshold) { builder.AddFloat(1, threshold, 0.0f); }
  public static void AddJointLods(FlatBufferBuilder builder, VectorOffset jointLodsOffset) { builder.AddOffset(2, jointLodsOffset.Value, 0); }
  public static VectorOffset CreateJointLodsVector(FlatBufferBuilder builder, Offset<gfl.scene.fb.JointLod>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateJointLodsVectorBlock(FlatBufferBuilder builder, Offset<gfl.scene.fb.JointLod>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartJointLodsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<gfl.scene.fb.SubJointPrioritySetting> EndSubJointPrioritySetting(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.scene.fb.SubJointPrioritySetting>(o);
  }
  public SubJointPrioritySettingT UnPack() {
    var _o = new SubJointPrioritySettingT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SubJointPrioritySettingT _o) {
    _o.CategoryName = this.CategoryName;
    _o.Threshold = this.Threshold;
    _o.JointLods = new List<gfl.scene.fb.JointLodT>();
    for (var _j = 0; _j < this.JointLodsLength; ++_j) {_o.JointLods.Add(this.JointLods(_j).HasValue ? this.JointLods(_j).Value.UnPack() : null);}
  }
  public static Offset<gfl.scene.fb.SubJointPrioritySetting> Pack(FlatBufferBuilder builder, SubJointPrioritySettingT _o) {
    if (_o == null) return default(Offset<gfl.scene.fb.SubJointPrioritySetting>);
    var _categoryName = _o.CategoryName == null ? default(StringOffset) : builder.CreateString(_o.CategoryName);
    var _jointLods = default(VectorOffset);
    if (_o.JointLods != null) {
      var __jointLods = new Offset<gfl.scene.fb.JointLod>[_o.JointLods.Count];
      for (var _j = 0; _j < __jointLods.Length; ++_j) { __jointLods[_j] = gfl.scene.fb.JointLod.Pack(builder, _o.JointLods[_j]); }
      _jointLods = CreateJointLodsVector(builder, __jointLods);
    }
    return CreateSubJointPrioritySetting(
      builder,
      _categoryName,
      _o.Threshold,
      _jointLods);
  }
};

public class SubJointPrioritySettingT
{
  [Newtonsoft.Json.JsonProperty("categoryName")]
  public string CategoryName { get; set; }
  [Newtonsoft.Json.JsonProperty("threshold")]
  public float Threshold { get; set; }
  [Newtonsoft.Json.JsonProperty("jointLods")]
  public List<gfl.scene.fb.JointLodT> JointLods { get; set; }

  public SubJointPrioritySettingT() {
    this.CategoryName = null;
    this.Threshold = 0.0f;
    this.JointLods = null;
  }
}

public struct JointPrioritySetting : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static JointPrioritySetting GetRootAsJointPrioritySetting(ByteBuffer _bb) { return GetRootAsJointPrioritySetting(_bb, new JointPrioritySetting()); }
  public static JointPrioritySetting GetRootAsJointPrioritySetting(ByteBuffer _bb, JointPrioritySetting obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public JointPrioritySetting __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string CategoryName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCategoryNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetCategoryNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetCategoryNameArray() { return __p.__vector_as_array<byte>(4); }
  public string Pattern { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPatternBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPatternBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPatternArray() { return __p.__vector_as_array<byte>(6); }
  public gfl.scene.fb.JointLod? JointLods(int j) { int o = __p.__offset(8); return o != 0 ? (gfl.scene.fb.JointLod?)(new gfl.scene.fb.JointLod()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int JointLodsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public gfl.scene.fb.SubJointPrioritySetting? SubSettings(int j) { int o = __p.__offset(10); return o != 0 ? (gfl.scene.fb.SubJointPrioritySetting?)(new gfl.scene.fb.SubJointPrioritySetting()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SubSettingsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<gfl.scene.fb.JointPrioritySetting> CreateJointPrioritySetting(FlatBufferBuilder builder,
      StringOffset categoryNameOffset = default(StringOffset),
      StringOffset patternOffset = default(StringOffset),
      VectorOffset jointLodsOffset = default(VectorOffset),
      VectorOffset subSettingsOffset = default(VectorOffset)) {
    builder.StartTable(4);
    JointPrioritySetting.AddSubSettings(builder, subSettingsOffset);
    JointPrioritySetting.AddJointLods(builder, jointLodsOffset);
    JointPrioritySetting.AddPattern(builder, patternOffset);
    JointPrioritySetting.AddCategoryName(builder, categoryNameOffset);
    return JointPrioritySetting.EndJointPrioritySetting(builder);
  }

  public static void StartJointPrioritySetting(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddCategoryName(FlatBufferBuilder builder, StringOffset categoryNameOffset) { builder.AddOffset(0, categoryNameOffset.Value, 0); }
  public static void AddPattern(FlatBufferBuilder builder, StringOffset patternOffset) { builder.AddOffset(1, patternOffset.Value, 0); }
  public static void AddJointLods(FlatBufferBuilder builder, VectorOffset jointLodsOffset) { builder.AddOffset(2, jointLodsOffset.Value, 0); }
  public static VectorOffset CreateJointLodsVector(FlatBufferBuilder builder, Offset<gfl.scene.fb.JointLod>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateJointLodsVectorBlock(FlatBufferBuilder builder, Offset<gfl.scene.fb.JointLod>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartJointLodsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSubSettings(FlatBufferBuilder builder, VectorOffset subSettingsOffset) { builder.AddOffset(3, subSettingsOffset.Value, 0); }
  public static VectorOffset CreateSubSettingsVector(FlatBufferBuilder builder, Offset<gfl.scene.fb.SubJointPrioritySetting>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSubSettingsVectorBlock(FlatBufferBuilder builder, Offset<gfl.scene.fb.SubJointPrioritySetting>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSubSettingsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<gfl.scene.fb.JointPrioritySetting> EndJointPrioritySetting(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.scene.fb.JointPrioritySetting>(o);
  }
  public static void FinishJointPrioritySettingBuffer(FlatBufferBuilder builder, Offset<gfl.scene.fb.JointPrioritySetting> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedJointPrioritySettingBuffer(FlatBufferBuilder builder, Offset<gfl.scene.fb.JointPrioritySetting> offset) { builder.FinishSizePrefixed(offset.Value); }
  public JointPrioritySettingT UnPack() {
    var _o = new JointPrioritySettingT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(JointPrioritySettingT _o) {
    _o.CategoryName = this.CategoryName;
    _o.Pattern = this.Pattern;
    _o.JointLods = new List<gfl.scene.fb.JointLodT>();
    for (var _j = 0; _j < this.JointLodsLength; ++_j) {_o.JointLods.Add(this.JointLods(_j).HasValue ? this.JointLods(_j).Value.UnPack() : null);}
    _o.SubSettings = new List<gfl.scene.fb.SubJointPrioritySettingT>();
    for (var _j = 0; _j < this.SubSettingsLength; ++_j) {_o.SubSettings.Add(this.SubSettings(_j).HasValue ? this.SubSettings(_j).Value.UnPack() : null);}
  }
  public static Offset<gfl.scene.fb.JointPrioritySetting> Pack(FlatBufferBuilder builder, JointPrioritySettingT _o) {
    if (_o == null) return default(Offset<gfl.scene.fb.JointPrioritySetting>);
    var _categoryName = _o.CategoryName == null ? default(StringOffset) : builder.CreateString(_o.CategoryName);
    var _pattern = _o.Pattern == null ? default(StringOffset) : builder.CreateString(_o.Pattern);
    var _jointLods = default(VectorOffset);
    if (_o.JointLods != null) {
      var __jointLods = new Offset<gfl.scene.fb.JointLod>[_o.JointLods.Count];
      for (var _j = 0; _j < __jointLods.Length; ++_j) { __jointLods[_j] = gfl.scene.fb.JointLod.Pack(builder, _o.JointLods[_j]); }
      _jointLods = CreateJointLodsVector(builder, __jointLods);
    }
    var _subSettings = default(VectorOffset);
    if (_o.SubSettings != null) {
      var __subSettings = new Offset<gfl.scene.fb.SubJointPrioritySetting>[_o.SubSettings.Count];
      for (var _j = 0; _j < __subSettings.Length; ++_j) { __subSettings[_j] = gfl.scene.fb.SubJointPrioritySetting.Pack(builder, _o.SubSettings[_j]); }
      _subSettings = CreateSubSettingsVector(builder, __subSettings);
    }
    return CreateJointPrioritySetting(
      builder,
      _categoryName,
      _pattern,
      _jointLods,
      _subSettings);
  }
};

public class JointPrioritySettingT
{
  [Newtonsoft.Json.JsonProperty("categoryName")]
  public string CategoryName { get; set; }
  [Newtonsoft.Json.JsonProperty("pattern")]
  public string Pattern { get; set; }
  [Newtonsoft.Json.JsonProperty("jointLods")]
  public List<gfl.scene.fb.JointLodT> JointLods { get; set; }
  [Newtonsoft.Json.JsonProperty("subSettings")]
  public List<gfl.scene.fb.SubJointPrioritySettingT> SubSettings { get; set; }

  public JointPrioritySettingT() {
    this.CategoryName = null;
    this.Pattern = null;
    this.JointLods = null;
    this.SubSettings = null;
  }

  public static JointPrioritySettingT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<JointPrioritySettingT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static JointPrioritySettingT DeserializeFromBinary(byte[] fbBuffer) {
    return JointPrioritySetting.GetRootAsJointPrioritySetting(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    JointPrioritySetting.FinishJointPrioritySettingBuffer(fbb, JointPrioritySetting.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
