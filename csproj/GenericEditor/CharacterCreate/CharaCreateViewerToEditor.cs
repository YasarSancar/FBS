// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GenericEditor.Plugin.CharacterCreate.ToEditor
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum MessageType : byte
{
  NONE = 0,
  LoadCompleteMessage = 1,
  TypeParameterChangedMessage = 2,
};

public class MessageTypeUnion {
  public MessageType Type { get; set; }
  public object Value { get; set; }

  public MessageTypeUnion() {
    this.Type = MessageType.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessageT AsLoadCompleteMessage() { return this.As<GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessageT>(); }
  public GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessageT AsTypeParameterChangedMessage() { return this.As<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessageT>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, MessageTypeUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case MessageType.LoadCompleteMessage: return GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessage.Pack(builder, _o.AsLoadCompleteMessage()).Value;
      case MessageType.TypeParameterChangedMessage: return GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessage.Pack(builder, _o.AsTypeParameterChangedMessage()).Value;
    }
  }
}

public class MessageTypeUnion_JsonConverter : Newtonsoft.Json.JsonConverter {
  public override bool CanConvert(System.Type objectType) {
    return objectType == typeof(MessageTypeUnion) || objectType == typeof(System.Collections.Generic.List<MessageTypeUnion>);
  }
  public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = value as System.Collections.Generic.List<MessageTypeUnion>;
    if (_olist != null) {
      writer.WriteStartArray();
      foreach (var _o in _olist) { this.WriteJson(writer, _o, serializer); }
      writer.WriteEndArray();
    } else {
      this.WriteJson(writer, value as MessageTypeUnion, serializer);
    }
  }
  public void WriteJson(Newtonsoft.Json.JsonWriter writer, MessageTypeUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return;
    serializer.Serialize(writer, _o.Value);
  }
  public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = existingValue as System.Collections.Generic.List<MessageTypeUnion>;
    if (_olist != null) {
      for (var _j = 0; _j < _olist.Count; ++_j) {
        reader.Read();
        _olist[_j] = this.ReadJson(reader, _olist[_j], serializer);
      }
      reader.Read();
      return _olist;
    } else {
      return this.ReadJson(reader, existingValue as MessageTypeUnion, serializer);
    }
  }
  public MessageTypeUnion ReadJson(Newtonsoft.Json.JsonReader reader, MessageTypeUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return null;
    switch (_o.Type) {
      default: break;
      case MessageType.LoadCompleteMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessageT>(reader); break;
      case MessageType.TypeParameterChangedMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessageT>(reader); break;
    }
    return _o;
  }
}

public struct LoadCompleteMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static LoadCompleteMessage GetRootAsLoadCompleteMessage(ByteBuffer _bb) { return GetRootAsLoadCompleteMessage(_bb, new LoadCompleteMessage()); }
  public static LoadCompleteMessage GetRootAsLoadCompleteMessage(ByteBuffer _bb, LoadCompleteMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LoadCompleteMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int _Dummy_ { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessage> CreateLoadCompleteMessage(FlatBufferBuilder builder,
      int __dummy__ = 0) {
    builder.StartTable(1);
    LoadCompleteMessage.Add_Dummy_(builder, __dummy__);
    return LoadCompleteMessage.EndLoadCompleteMessage(builder);
  }

  public static void StartLoadCompleteMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void Add_Dummy_(FlatBufferBuilder builder, int _dummy_) { builder.AddInt(0, _dummy_, 0); }
  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessage> EndLoadCompleteMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessage>(o);
  }
  public LoadCompleteMessageT UnPack() {
    var _o = new LoadCompleteMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LoadCompleteMessageT _o) {
    _o._Dummy_ = this._Dummy_;
  }
  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessage> Pack(FlatBufferBuilder builder, LoadCompleteMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessage>);
    return CreateLoadCompleteMessage(
      builder,
      _o._Dummy_);
  }
};

public class LoadCompleteMessageT
{
  [Newtonsoft.Json.JsonProperty("__dummy__")]
  public int _Dummy_ { get; set; }

  public LoadCompleteMessageT() {
    this._Dummy_ = 0;
  }
}

public struct TypeParameter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static TypeParameter GetRootAsTypeParameter(ByteBuffer _bb) { return GetRootAsTypeParameter(_bb, new TypeParameter()); }
  public static TypeParameter GetRootAsTypeParameter(ByteBuffer _bb, TypeParameter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TypeParameter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PartsName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPartsNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetPartsNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPartsNameArray() { return __p.__vector_as_array<byte>(4); }
  public string ParamName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParamNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetParamNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetParamNameArray() { return __p.__vector_as_array<byte>(6); }
  public uint Value { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter> CreateTypeParameter(FlatBufferBuilder builder,
      StringOffset partsNameOffset = default(StringOffset),
      StringOffset paramNameOffset = default(StringOffset),
      uint value = 0) {
    builder.StartTable(3);
    TypeParameter.AddValue(builder, value);
    TypeParameter.AddParamName(builder, paramNameOffset);
    TypeParameter.AddPartsName(builder, partsNameOffset);
    return TypeParameter.EndTypeParameter(builder);
  }

  public static void StartTypeParameter(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddPartsName(FlatBufferBuilder builder, StringOffset partsNameOffset) { builder.AddOffset(0, partsNameOffset.Value, 0); }
  public static void AddParamName(FlatBufferBuilder builder, StringOffset paramNameOffset) { builder.AddOffset(1, paramNameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, uint value) { builder.AddUint(2, value, 0); }
  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter> EndTypeParameter(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter>(o);
  }
  public TypeParameterT UnPack() {
    var _o = new TypeParameterT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TypeParameterT _o) {
    _o.PartsName = this.PartsName;
    _o.ParamName = this.ParamName;
    _o.Value = this.Value;
  }
  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter> Pack(FlatBufferBuilder builder, TypeParameterT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter>);
    var _partsName = _o.PartsName == null ? default(StringOffset) : builder.CreateString(_o.PartsName);
    var _paramName = _o.ParamName == null ? default(StringOffset) : builder.CreateString(_o.ParamName);
    return CreateTypeParameter(
      builder,
      _partsName,
      _paramName,
      _o.Value);
  }
};

public class TypeParameterT
{
  [Newtonsoft.Json.JsonProperty("partsName")]
  public string PartsName { get; set; }
  [Newtonsoft.Json.JsonProperty("paramName")]
  public string ParamName { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public uint Value { get; set; }

  public TypeParameterT() {
    this.PartsName = null;
    this.ParamName = null;
    this.Value = 0;
  }
}

public struct TypeParameterChangedMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static TypeParameterChangedMessage GetRootAsTypeParameterChangedMessage(ByteBuffer _bb) { return GetRootAsTypeParameterChangedMessage(_bb, new TypeParameterChangedMessage()); }
  public static TypeParameterChangedMessage GetRootAsTypeParameterChangedMessage(ByteBuffer _bb, TypeParameterChangedMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TypeParameterChangedMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter? Params(int j) { int o = __p.__offset(4); return o != 0 ? (GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter?)(new GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ParamsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessage> CreateTypeParameterChangedMessage(FlatBufferBuilder builder,
      VectorOffset paramsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    TypeParameterChangedMessage.AddParams(builder, paramsOffset);
    return TypeParameterChangedMessage.EndTypeParameterChangedMessage(builder);
  }

  public static void StartTypeParameterChangedMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddParams(FlatBufferBuilder builder, VectorOffset paramsOffset) { builder.AddOffset(0, paramsOffset.Value, 0); }
  public static VectorOffset CreateParamsVector(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateParamsVectorBlock(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartParamsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessage> EndTypeParameterChangedMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessage>(o);
  }
  public TypeParameterChangedMessageT UnPack() {
    var _o = new TypeParameterChangedMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TypeParameterChangedMessageT _o) {
    _o.Params = new List<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterT>();
    for (var _j = 0; _j < this.ParamsLength; ++_j) {_o.Params.Add(this.Params(_j).HasValue ? this.Params(_j).Value.UnPack() : null);}
  }
  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessage> Pack(FlatBufferBuilder builder, TypeParameterChangedMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessage>);
    var _params = default(VectorOffset);
    if (_o.Params != null) {
      var __params = new Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter>[_o.Params.Count];
      for (var _j = 0; _j < __params.Length; ++_j) { __params[_j] = GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameter.Pack(builder, _o.Params[_j]); }
      _params = CreateParamsVector(builder, __params);
    }
    return CreateTypeParameterChangedMessage(
      builder,
      _params);
  }
};

public class TypeParameterChangedMessageT
{
  [Newtonsoft.Json.JsonProperty("params")]
  public List<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterT> Params { get; set; }

  public TypeParameterChangedMessageT() {
    this.Params = null;
  }
}

public struct CharaCreateViewerToEditor : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static CharaCreateViewerToEditor GetRootAsCharaCreateViewerToEditor(ByteBuffer _bb) { return GetRootAsCharaCreateViewerToEditor(_bb, new CharaCreateViewerToEditor()); }
  public static CharaCreateViewerToEditor GetRootAsCharaCreateViewerToEditor(ByteBuffer _bb, CharaCreateViewerToEditor obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharaCreateViewerToEditor __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ModelInstanceId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetModelInstanceIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetModelInstanceIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetModelInstanceIdArray() { return __p.__vector_as_array<byte>(4); }
  public GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType MessageType { get { int o = __p.__offset(6); return o != 0 ? (GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType)__p.bb.Get(o + __p.bb_pos) : GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType.NONE; } }
  public TTable? Message<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.CharaCreateViewerToEditor> CreateCharaCreateViewerToEditor(FlatBufferBuilder builder,
      StringOffset modelInstanceIdOffset = default(StringOffset),
      GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType message_type = GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType.NONE,
      int messageOffset = 0) {
    builder.StartTable(3);
    CharaCreateViewerToEditor.AddMessage(builder, messageOffset);
    CharaCreateViewerToEditor.AddModelInstanceId(builder, modelInstanceIdOffset);
    CharaCreateViewerToEditor.AddMessageType(builder, message_type);
    return CharaCreateViewerToEditor.EndCharaCreateViewerToEditor(builder);
  }

  public static void StartCharaCreateViewerToEditor(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddModelInstanceId(FlatBufferBuilder builder, StringOffset modelInstanceIdOffset) { builder.AddOffset(0, modelInstanceIdOffset.Value, 0); }
  public static void AddMessageType(FlatBufferBuilder builder, GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType messageType) { builder.AddByte(1, (byte)messageType, 0); }
  public static void AddMessage(FlatBufferBuilder builder, int messageOffset) { builder.AddOffset(2, messageOffset, 0); }
  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.CharaCreateViewerToEditor> EndCharaCreateViewerToEditor(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.CharaCreateViewerToEditor>(o);
  }
  public static void FinishCharaCreateViewerToEditorBuffer(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.CharaCreateViewerToEditor> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedCharaCreateViewerToEditorBuffer(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.CharaCreateViewerToEditor> offset) { builder.FinishSizePrefixed(offset.Value); }
  public CharaCreateViewerToEditorT UnPack() {
    var _o = new CharaCreateViewerToEditorT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CharaCreateViewerToEditorT _o) {
    _o.ModelInstanceId = this.ModelInstanceId;
    _o.Message = new GenericEditor.Plugin.CharacterCreate.ToEditor.MessageTypeUnion();
    _o.Message.Type = this.MessageType;
    switch (this.MessageType) {
      default: break;
      case GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType.LoadCompleteMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessage>().HasValue ? this.Message<GenericEditor.Plugin.CharacterCreate.ToEditor.LoadCompleteMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType.TypeParameterChangedMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessage>().HasValue ? this.Message<GenericEditor.Plugin.CharacterCreate.ToEditor.TypeParameterChangedMessage>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.CharaCreateViewerToEditor> Pack(FlatBufferBuilder builder, CharaCreateViewerToEditorT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.CharacterCreate.ToEditor.CharaCreateViewerToEditor>);
    var _modelInstanceId = _o.ModelInstanceId == null ? default(StringOffset) : builder.CreateString(_o.ModelInstanceId);
    var _message_type = _o.Message == null ? GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType.NONE : _o.Message.Type;
    var _message = _o.Message == null ? 0 : GenericEditor.Plugin.CharacterCreate.ToEditor.MessageTypeUnion.Pack(builder, _o.Message);
    return CreateCharaCreateViewerToEditor(
      builder,
      _modelInstanceId,
      _message_type,
      _message);
  }
};

public class CharaCreateViewerToEditorT
{
  [Newtonsoft.Json.JsonProperty("modelInstanceId")]
  public string ModelInstanceId { get; set; }
  [Newtonsoft.Json.JsonProperty("message_type")]
  private GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType MessageType {
    get {
      return this.Message != null ? this.Message.Type : GenericEditor.Plugin.CharacterCreate.ToEditor.MessageType.NONE;
    }
    set {
      this.Message = new GenericEditor.Plugin.CharacterCreate.ToEditor.MessageTypeUnion();
      this.Message.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("message")]
  [Newtonsoft.Json.JsonConverter(typeof(GenericEditor.Plugin.CharacterCreate.ToEditor.MessageTypeUnion_JsonConverter))]
  public GenericEditor.Plugin.CharacterCreate.ToEditor.MessageTypeUnion Message { get; set; }

  public CharaCreateViewerToEditorT() {
    this.ModelInstanceId = null;
    this.Message = null;
  }

  public static CharaCreateViewerToEditorT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<CharaCreateViewerToEditorT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static CharaCreateViewerToEditorT DeserializeFromBinary(byte[] fbBuffer) {
    return CharaCreateViewerToEditor.GetRootAsCharaCreateViewerToEditor(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    CharaCreateViewerToEditor.FinishCharaCreateViewerToEditorBuffer(fbb, CharaCreateViewerToEditor.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
