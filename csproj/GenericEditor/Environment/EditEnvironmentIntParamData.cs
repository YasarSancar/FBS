// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GenericEditor.Plugin.Environment
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct EnvironmentIntParamData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EnvironmentIntParamData GetRootAsEnvironmentIntParamData(ByteBuffer _bb) { return GetRootAsEnvironmentIntParamData(_bb, new EnvironmentIntParamData()); }
  public static EnvironmentIntParamData GetRootAsEnvironmentIntParamData(ByteBuffer _bb, EnvironmentIntParamData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EnvironmentIntParamData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ParamaterName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParamaterNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetParamaterNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetParamaterNameArray() { return __p.__vector_as_array<byte>(4); }
  public int Value { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GenericEditor.Plugin.Environment.EnvironmentIntParamData> CreateEnvironmentIntParamData(FlatBufferBuilder builder,
      StringOffset paramaterNameOffset = default(StringOffset),
      int value = 0) {
    builder.StartTable(2);
    EnvironmentIntParamData.AddValue(builder, value);
    EnvironmentIntParamData.AddParamaterName(builder, paramaterNameOffset);
    return EnvironmentIntParamData.EndEnvironmentIntParamData(builder);
  }

  public static void StartEnvironmentIntParamData(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddParamaterName(FlatBufferBuilder builder, StringOffset paramaterNameOffset) { builder.AddOffset(0, paramaterNameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, int value) { builder.AddInt(1, value, 0); }
  public static Offset<GenericEditor.Plugin.Environment.EnvironmentIntParamData> EndEnvironmentIntParamData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.Environment.EnvironmentIntParamData>(o);
  }
  public static void FinishEnvironmentIntParamDataBuffer(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.Environment.EnvironmentIntParamData> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedEnvironmentIntParamDataBuffer(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.Environment.EnvironmentIntParamData> offset) { builder.FinishSizePrefixed(offset.Value); }
  public EnvironmentIntParamDataT UnPack() {
    var _o = new EnvironmentIntParamDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EnvironmentIntParamDataT _o) {
    _o.ParamaterName = this.ParamaterName;
    _o.Value = this.Value;
  }
  public static Offset<GenericEditor.Plugin.Environment.EnvironmentIntParamData> Pack(FlatBufferBuilder builder, EnvironmentIntParamDataT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.Environment.EnvironmentIntParamData>);
    var _paramaterName = _o.ParamaterName == null ? default(StringOffset) : builder.CreateString(_o.ParamaterName);
    return CreateEnvironmentIntParamData(
      builder,
      _paramaterName,
      _o.Value);
  }
};

public class EnvironmentIntParamDataT
{
  [Newtonsoft.Json.JsonProperty("paramaterName")]
  public string ParamaterName { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public int Value { get; set; }

  public EnvironmentIntParamDataT() {
    this.ParamaterName = null;
    this.Value = 0;
  }

  public static EnvironmentIntParamDataT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<EnvironmentIntParamDataT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static EnvironmentIntParamDataT DeserializeFromBinary(byte[] fbBuffer) {
    return EnvironmentIntParamData.GetRootAsEnvironmentIntParamData(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    EnvironmentIntParamData.FinishEnvironmentIntParamDataBuffer(fbb, EnvironmentIntParamData.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
