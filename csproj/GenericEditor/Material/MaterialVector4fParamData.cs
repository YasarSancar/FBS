// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GenericEditor.Plugin.Material
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Vector4fParamData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Vector4fParamData GetRootAsVector4fParamData(ByteBuffer _bb) { return GetRootAsVector4fParamData(_bb, new Vector4fParamData()); }
  public static Vector4fParamData GetRootAsVector4fParamData(ByteBuffer _bb, Vector4fParamData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Vector4fParamData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string MaterialName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMaterialNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetMaterialNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetMaterialNameArray() { return __p.__vector_as_array<byte>(4); }
  public string ParamaterName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParamaterNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetParamaterNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetParamaterNameArray() { return __p.__vector_as_array<byte>(6); }
  public gfl.math.fb.Vector4f? Value { get { int o = __p.__offset(8); return o != 0 ? (gfl.math.fb.Vector4f?)(new gfl.math.fb.Vector4f()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<GenericEditor.Plugin.Material.Vector4fParamData> CreateVector4fParamData(FlatBufferBuilder builder,
      StringOffset materialNameOffset = default(StringOffset),
      StringOffset paramaterNameOffset = default(StringOffset),
      gfl.math.fb.Vector4fT value = null) {
    builder.StartTable(3);
    Vector4fParamData.AddValue(builder, gfl.math.fb.Vector4f.Pack(builder, value));
    Vector4fParamData.AddParamaterName(builder, paramaterNameOffset);
    Vector4fParamData.AddMaterialName(builder, materialNameOffset);
    return Vector4fParamData.EndVector4fParamData(builder);
  }

  public static void StartVector4fParamData(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddMaterialName(FlatBufferBuilder builder, StringOffset materialNameOffset) { builder.AddOffset(0, materialNameOffset.Value, 0); }
  public static void AddParamaterName(FlatBufferBuilder builder, StringOffset paramaterNameOffset) { builder.AddOffset(1, paramaterNameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, Offset<gfl.math.fb.Vector4f> valueOffset) { builder.AddStruct(2, valueOffset.Value, 0); }
  public static Offset<GenericEditor.Plugin.Material.Vector4fParamData> EndVector4fParamData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.Material.Vector4fParamData>(o);
  }
  public static void FinishVector4fParamDataBuffer(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.Material.Vector4fParamData> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedVector4fParamDataBuffer(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.Material.Vector4fParamData> offset) { builder.FinishSizePrefixed(offset.Value); }
  public Vector4fParamDataT UnPack() {
    var _o = new Vector4fParamDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Vector4fParamDataT _o) {
    _o.MaterialName = this.MaterialName;
    _o.ParamaterName = this.ParamaterName;
    _o.Value = this.Value.HasValue ? this.Value.Value.UnPack() : null;
  }
  public static Offset<GenericEditor.Plugin.Material.Vector4fParamData> Pack(FlatBufferBuilder builder, Vector4fParamDataT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.Material.Vector4fParamData>);
    var _materialName = _o.MaterialName == null ? default(StringOffset) : builder.CreateString(_o.MaterialName);
    var _paramaterName = _o.ParamaterName == null ? default(StringOffset) : builder.CreateString(_o.ParamaterName);
    return CreateVector4fParamData(
      builder,
      _materialName,
      _paramaterName,
      _o.Value);
  }
};

public class Vector4fParamDataT
{
  [Newtonsoft.Json.JsonProperty("materialName")]
  public string MaterialName { get; set; }
  [Newtonsoft.Json.JsonProperty("paramaterName")]
  public string ParamaterName { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public gfl.math.fb.Vector4fT Value { get; set; }

  public Vector4fParamDataT() {
    this.MaterialName = null;
    this.ParamaterName = null;
    this.Value = new gfl.math.fb.Vector4fT();
  }

  public static Vector4fParamDataT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<Vector4fParamDataT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static Vector4fParamDataT DeserializeFromBinary(byte[] fbBuffer) {
    return Vector4fParamData.GetRootAsVector4fParamData(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    Vector4fParamData.FinishVector4fParamDataBuffer(fbb, Vector4fParamData.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
