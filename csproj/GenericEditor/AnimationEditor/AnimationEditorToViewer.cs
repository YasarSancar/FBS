// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GenericEditor.Plugin.AnimationEditor.ToViewer
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum PlayerType : uint
{
  StateMachine = 0,
  ResourcePlayer = 1,
};

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum MessageType : byte
{
  NONE = 0,
  StartMessage = 1,
  StopMessage = 2,
  PauseMessage = 3,
  ResumeMessage = 4,
  NextFrameMessage = 5,
  SetFrameMessage = 6,
  SetIntParameterMessage = 7,
  SetFloatParameterMessage = 8,
  SetBoolParameterMessage = 9,
  SetTriggerParameterMessage = 10,
  SetRootMotionEnabledMessage = 11,
  SetLookAtMessage = 12,
  SetMasterSpeedMessage = 13,
  SetUpdateIntervalMessage = 14,
  SetLODMessage = 15,
  SetSpringBoneMessage = 16,
  ResetSpringBoneMessage = 17,
  SetBipedIKDebugGroundMessage = 18,
  SetUnitOperatorDataMessage = 19,
  SetUnitOperatorDebugMessage = 20,
  SetUnitOperatorCalcMessage = 21,
  SetAdditionalParameterMessage = 22,
};

public class MessageTypeUnion {
  public MessageType Type { get; set; }
  public object Value { get; set; }

  public MessageTypeUnion() {
    this.Type = MessageType.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessageT AsStartMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessageT AsStopMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessageT AsPauseMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessageT AsResumeMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessageT AsNextFrameMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessageT AsSetFrameMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessageT AsSetIntParameterMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessageT AsSetFloatParameterMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessageT AsSetBoolParameterMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessageT AsSetTriggerParameterMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessageT AsSetRootMotionEnabledMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessageT AsSetLookAtMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessageT AsSetMasterSpeedMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessageT AsSetUpdateIntervalMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessageT AsSetLODMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessageT AsSetSpringBoneMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessageT AsResetSpringBoneMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessageT AsSetBipedIKDebugGroundMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessageT AsSetUnitOperatorDataMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessageT AsSetUnitOperatorDebugMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessageT AsSetUnitOperatorCalcMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessageT>(); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessageT AsSetAdditionalParameterMessage() { return this.As<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessageT>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, MessageTypeUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case MessageType.StartMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessage.Pack(builder, _o.AsStartMessage()).Value;
      case MessageType.StopMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessage.Pack(builder, _o.AsStopMessage()).Value;
      case MessageType.PauseMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessage.Pack(builder, _o.AsPauseMessage()).Value;
      case MessageType.ResumeMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessage.Pack(builder, _o.AsResumeMessage()).Value;
      case MessageType.NextFrameMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessage.Pack(builder, _o.AsNextFrameMessage()).Value;
      case MessageType.SetFrameMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessage.Pack(builder, _o.AsSetFrameMessage()).Value;
      case MessageType.SetIntParameterMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage.Pack(builder, _o.AsSetIntParameterMessage()).Value;
      case MessageType.SetFloatParameterMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage.Pack(builder, _o.AsSetFloatParameterMessage()).Value;
      case MessageType.SetBoolParameterMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage.Pack(builder, _o.AsSetBoolParameterMessage()).Value;
      case MessageType.SetTriggerParameterMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage.Pack(builder, _o.AsSetTriggerParameterMessage()).Value;
      case MessageType.SetRootMotionEnabledMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage.Pack(builder, _o.AsSetRootMotionEnabledMessage()).Value;
      case MessageType.SetLookAtMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessage.Pack(builder, _o.AsSetLookAtMessage()).Value;
      case MessageType.SetMasterSpeedMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessage.Pack(builder, _o.AsSetMasterSpeedMessage()).Value;
      case MessageType.SetUpdateIntervalMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessage.Pack(builder, _o.AsSetUpdateIntervalMessage()).Value;
      case MessageType.SetLODMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessage.Pack(builder, _o.AsSetLODMessage()).Value;
      case MessageType.SetSpringBoneMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessage.Pack(builder, _o.AsSetSpringBoneMessage()).Value;
      case MessageType.ResetSpringBoneMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessage.Pack(builder, _o.AsResetSpringBoneMessage()).Value;
      case MessageType.SetBipedIKDebugGroundMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessage.Pack(builder, _o.AsSetBipedIKDebugGroundMessage()).Value;
      case MessageType.SetUnitOperatorDataMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessage.Pack(builder, _o.AsSetUnitOperatorDataMessage()).Value;
      case MessageType.SetUnitOperatorDebugMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessage.Pack(builder, _o.AsSetUnitOperatorDebugMessage()).Value;
      case MessageType.SetUnitOperatorCalcMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessage.Pack(builder, _o.AsSetUnitOperatorCalcMessage()).Value;
      case MessageType.SetAdditionalParameterMessage: return GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessage.Pack(builder, _o.AsSetAdditionalParameterMessage()).Value;
    }
  }
}

public class MessageTypeUnion_JsonConverter : Newtonsoft.Json.JsonConverter {
  public override bool CanConvert(System.Type objectType) {
    return objectType == typeof(MessageTypeUnion) || objectType == typeof(System.Collections.Generic.List<MessageTypeUnion>);
  }
  public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = value as System.Collections.Generic.List<MessageTypeUnion>;
    if (_olist != null) {
      writer.WriteStartArray();
      foreach (var _o in _olist) { this.WriteJson(writer, _o, serializer); }
      writer.WriteEndArray();
    } else {
      this.WriteJson(writer, value as MessageTypeUnion, serializer);
    }
  }
  public void WriteJson(Newtonsoft.Json.JsonWriter writer, MessageTypeUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return;
    serializer.Serialize(writer, _o.Value);
  }
  public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = existingValue as System.Collections.Generic.List<MessageTypeUnion>;
    if (_olist != null) {
      for (var _j = 0; _j < _olist.Count; ++_j) {
        reader.Read();
        _olist[_j] = this.ReadJson(reader, _olist[_j], serializer);
      }
      reader.Read();
      return _olist;
    } else {
      return this.ReadJson(reader, existingValue as MessageTypeUnion, serializer);
    }
  }
  public MessageTypeUnion ReadJson(Newtonsoft.Json.JsonReader reader, MessageTypeUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return null;
    switch (_o.Type) {
      default: break;
      case MessageType.StartMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessageT>(reader); break;
      case MessageType.StopMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessageT>(reader); break;
      case MessageType.PauseMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessageT>(reader); break;
      case MessageType.ResumeMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessageT>(reader); break;
      case MessageType.NextFrameMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessageT>(reader); break;
      case MessageType.SetFrameMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessageT>(reader); break;
      case MessageType.SetIntParameterMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessageT>(reader); break;
      case MessageType.SetFloatParameterMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessageT>(reader); break;
      case MessageType.SetBoolParameterMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessageT>(reader); break;
      case MessageType.SetTriggerParameterMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessageT>(reader); break;
      case MessageType.SetRootMotionEnabledMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessageT>(reader); break;
      case MessageType.SetLookAtMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessageT>(reader); break;
      case MessageType.SetMasterSpeedMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessageT>(reader); break;
      case MessageType.SetUpdateIntervalMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessageT>(reader); break;
      case MessageType.SetLODMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessageT>(reader); break;
      case MessageType.SetSpringBoneMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessageT>(reader); break;
      case MessageType.ResetSpringBoneMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessageT>(reader); break;
      case MessageType.SetBipedIKDebugGroundMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessageT>(reader); break;
      case MessageType.SetUnitOperatorDataMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessageT>(reader); break;
      case MessageType.SetUnitOperatorDebugMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessageT>(reader); break;
      case MessageType.SetUnitOperatorCalcMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessageT>(reader); break;
      case MessageType.SetAdditionalParameterMessage: _o.Value = serializer.Deserialize<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessageT>(reader); break;
    }
    return _o;
  }
}

public struct Vector3 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Vector3 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float Z { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3> CreateVector3(FlatBufferBuilder builder, float X, float Y, float Z) {
    builder.Prep(4, 12);
    builder.PutFloat(Z);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3>(builder.Offset);
  }
  public Vector3T UnPack() {
    var _o = new Vector3T();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Vector3T _o) {
    _o.X = this.X;
    _o.Y = this.Y;
    _o.Z = this.Z;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3> Pack(FlatBufferBuilder builder, Vector3T _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3>);
    return CreateVector3(
      builder,
      _o.X,
      _o.Y,
      _o.Z);
  }
};

public class Vector3T
{
  [Newtonsoft.Json.JsonProperty("x")]
  public float X { get; set; }
  [Newtonsoft.Json.JsonProperty("y")]
  public float Y { get; set; }
  [Newtonsoft.Json.JsonProperty("z")]
  public float Z { get; set; }

  public Vector3T() {
    this.X = 0.0f;
    this.Y = 0.0f;
    this.Z = 0.0f;
  }
}

public struct Vector4 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Vector4 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float Z { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }
  public float W { get { return __p.bb.GetFloat(__p.bb_pos + 12); } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4> CreateVector4(FlatBufferBuilder builder, float X, float Y, float Z, float W) {
    builder.Prep(4, 16);
    builder.PutFloat(W);
    builder.PutFloat(Z);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4>(builder.Offset);
  }
  public Vector4T UnPack() {
    var _o = new Vector4T();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Vector4T _o) {
    _o.X = this.X;
    _o.Y = this.Y;
    _o.Z = this.Z;
    _o.W = this.W;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4> Pack(FlatBufferBuilder builder, Vector4T _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4>);
    return CreateVector4(
      builder,
      _o.X,
      _o.Y,
      _o.Z,
      _o.W);
  }
};

public class Vector4T
{
  [Newtonsoft.Json.JsonProperty("x")]
  public float X { get; set; }
  [Newtonsoft.Json.JsonProperty("y")]
  public float Y { get; set; }
  [Newtonsoft.Json.JsonProperty("z")]
  public float Z { get; set; }
  [Newtonsoft.Json.JsonProperty("w")]
  public float W { get; set; }

  public Vector4T() {
    this.X = 0.0f;
    this.Y = 0.0f;
    this.Z = 0.0f;
    this.W = 0.0f;
  }
}

public struct StartMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static StartMessage GetRootAsStartMessage(ByteBuffer _bb) { return GetRootAsStartMessage(_bb, new StartMessage()); }
  public static StartMessage GetRootAsStartMessage(ByteBuffer _bb, StartMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public StartMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ConfigFilePath { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetConfigFilePathBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetConfigFilePathBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetConfigFilePathArray() { return __p.__vector_as_array<byte>(4); }
  public string WorkingDirectory { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetWorkingDirectoryBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetWorkingDirectoryBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetWorkingDirectoryArray() { return __p.__vector_as_array<byte>(6); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage? IntParameters(int j) { int o = __p.__offset(8); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage?)(new GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int IntParametersLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage? FloatParameters(int j) { int o = __p.__offset(10); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage?)(new GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FloatParametersLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage? BoolParameters(int j) { int o = __p.__offset(12); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage?)(new GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BoolParametersLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage? TriggerParameters(int j) { int o = __p.__offset(14); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage?)(new GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TriggerParametersLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public float MasterSpeed { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.PlayerType PlayerType { get { int o = __p.__offset(18); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.PlayerType)__p.bb.GetUint(o + __p.bb_pos) : GenericEditor.Plugin.AnimationEditor.ToViewer.PlayerType.StateMachine; } }
  public int UpdateInterval { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage? RootMotion { get { int o = __p.__offset(22); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage?)(new GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public bool PauseOnStart { get { int o = __p.__offset(24); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType AdditionalMessagesType(int j) { int o = __p.__offset(26); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType)__p.bb.Get(__p.__vector(o) + j * 1) : (GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType)0; }
  public int AdditionalMessagesTypeLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType> GetAdditionalMessagesTypeBytes() { return __p.__vector_as_span<GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType>(26, 1); }
#else
  public ArraySegment<byte>? GetAdditionalMessagesTypeBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType[] GetAdditionalMessagesTypeArray() { int o = __p.__offset(26); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType[] a = new GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType[l]; for (int i = 0; i < l; i++) { a[i] = (GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType)__p.bb.Get(p + i * 1); } return a; }
  public TTable? AdditionalMessages<TTable>(int j) where TTable : struct, IFlatbufferObject { int o = __p.__offset(28); return o != 0 ? (TTable?)__p.__union<TTable>(__p.__vector(o) + j * 4) : null; }
  public int AdditionalMessagesLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessage> CreateStartMessage(FlatBufferBuilder builder,
      StringOffset configFilePathOffset = default(StringOffset),
      StringOffset workingDirectoryOffset = default(StringOffset),
      VectorOffset intParametersOffset = default(VectorOffset),
      VectorOffset floatParametersOffset = default(VectorOffset),
      VectorOffset boolParametersOffset = default(VectorOffset),
      VectorOffset triggerParametersOffset = default(VectorOffset),
      float masterSpeed = 0.0f,
      GenericEditor.Plugin.AnimationEditor.ToViewer.PlayerType playerType = GenericEditor.Plugin.AnimationEditor.ToViewer.PlayerType.StateMachine,
      int updateInterval = 0,
      Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage> rootMotionOffset = default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage>),
      bool pauseOnStart = false,
      VectorOffset additional_messages_typeOffset = default(VectorOffset),
      VectorOffset additional_messagesOffset = default(VectorOffset)) {
    builder.StartTable(13);
    StartMessage.AddAdditionalMessages(builder, additional_messagesOffset);
    StartMessage.AddAdditionalMessagesType(builder, additional_messages_typeOffset);
    StartMessage.AddRootMotion(builder, rootMotionOffset);
    StartMessage.AddUpdateInterval(builder, updateInterval);
    StartMessage.AddPlayerType(builder, playerType);
    StartMessage.AddMasterSpeed(builder, masterSpeed);
    StartMessage.AddTriggerParameters(builder, triggerParametersOffset);
    StartMessage.AddBoolParameters(builder, boolParametersOffset);
    StartMessage.AddFloatParameters(builder, floatParametersOffset);
    StartMessage.AddIntParameters(builder, intParametersOffset);
    StartMessage.AddWorkingDirectory(builder, workingDirectoryOffset);
    StartMessage.AddConfigFilePath(builder, configFilePathOffset);
    StartMessage.AddPauseOnStart(builder, pauseOnStart);
    return StartMessage.EndStartMessage(builder);
  }

  public static void StartStartMessage(FlatBufferBuilder builder) { builder.StartTable(13); }
  public static void AddConfigFilePath(FlatBufferBuilder builder, StringOffset configFilePathOffset) { builder.AddOffset(0, configFilePathOffset.Value, 0); }
  public static void AddWorkingDirectory(FlatBufferBuilder builder, StringOffset workingDirectoryOffset) { builder.AddOffset(1, workingDirectoryOffset.Value, 0); }
  public static void AddIntParameters(FlatBufferBuilder builder, VectorOffset intParametersOffset) { builder.AddOffset(2, intParametersOffset.Value, 0); }
  public static VectorOffset CreateIntParametersVector(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateIntParametersVectorBlock(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartIntParametersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFloatParameters(FlatBufferBuilder builder, VectorOffset floatParametersOffset) { builder.AddOffset(3, floatParametersOffset.Value, 0); }
  public static VectorOffset CreateFloatParametersVector(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFloatParametersVectorBlock(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartFloatParametersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBoolParameters(FlatBufferBuilder builder, VectorOffset boolParametersOffset) { builder.AddOffset(4, boolParametersOffset.Value, 0); }
  public static VectorOffset CreateBoolParametersVector(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBoolParametersVectorBlock(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBoolParametersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddTriggerParameters(FlatBufferBuilder builder, VectorOffset triggerParametersOffset) { builder.AddOffset(5, triggerParametersOffset.Value, 0); }
  public static VectorOffset CreateTriggerParametersVector(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTriggerParametersVectorBlock(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartTriggerParametersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMasterSpeed(FlatBufferBuilder builder, float masterSpeed) { builder.AddFloat(6, masterSpeed, 0.0f); }
  public static void AddPlayerType(FlatBufferBuilder builder, GenericEditor.Plugin.AnimationEditor.ToViewer.PlayerType playerType) { builder.AddUint(7, (uint)playerType, 0); }
  public static void AddUpdateInterval(FlatBufferBuilder builder, int updateInterval) { builder.AddInt(8, updateInterval, 0); }
  public static void AddRootMotion(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage> rootMotionOffset) { builder.AddOffset(9, rootMotionOffset.Value, 0); }
  public static void AddPauseOnStart(FlatBufferBuilder builder, bool pauseOnStart) { builder.AddBool(10, pauseOnStart, false); }
  public static void AddAdditionalMessagesType(FlatBufferBuilder builder, VectorOffset additionalMessagesTypeOffset) { builder.AddOffset(11, additionalMessagesTypeOffset.Value, 0); }
  public static VectorOffset CreateAdditionalMessagesTypeVector(FlatBufferBuilder builder, GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte((byte)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAdditionalMessagesTypeVectorBlock(FlatBufferBuilder builder, GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartAdditionalMessagesTypeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static void AddAdditionalMessages(FlatBufferBuilder builder, VectorOffset additionalMessagesOffset) { builder.AddOffset(12, additionalMessagesOffset.Value, 0); }
  public static VectorOffset CreateAdditionalMessagesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAdditionalMessagesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartAdditionalMessagesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessage> EndStartMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessage>(o);
  }
  public StartMessageT UnPack() {
    var _o = new StartMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(StartMessageT _o) {
    _o.ConfigFilePath = this.ConfigFilePath;
    _o.WorkingDirectory = this.WorkingDirectory;
    _o.IntParameters = new List<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessageT>();
    for (var _j = 0; _j < this.IntParametersLength; ++_j) {_o.IntParameters.Add(this.IntParameters(_j).HasValue ? this.IntParameters(_j).Value.UnPack() : null);}
    _o.FloatParameters = new List<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessageT>();
    for (var _j = 0; _j < this.FloatParametersLength; ++_j) {_o.FloatParameters.Add(this.FloatParameters(_j).HasValue ? this.FloatParameters(_j).Value.UnPack() : null);}
    _o.BoolParameters = new List<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessageT>();
    for (var _j = 0; _j < this.BoolParametersLength; ++_j) {_o.BoolParameters.Add(this.BoolParameters(_j).HasValue ? this.BoolParameters(_j).Value.UnPack() : null);}
    _o.TriggerParameters = new List<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessageT>();
    for (var _j = 0; _j < this.TriggerParametersLength; ++_j) {_o.TriggerParameters.Add(this.TriggerParameters(_j).HasValue ? this.TriggerParameters(_j).Value.UnPack() : null);}
    _o.MasterSpeed = this.MasterSpeed;
    _o.PlayerType = this.PlayerType;
    _o.UpdateInterval = this.UpdateInterval;
    _o.RootMotion = this.RootMotion.HasValue ? this.RootMotion.Value.UnPack() : null;
    _o.PauseOnStart = this.PauseOnStart;
    _o.AdditionalMessages = new List<GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion>();
    for (var _j = 0; _j < this.AdditionalMessagesLength; ++_j) {
      var _o_AdditionalMessages = new GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion();
      _o_AdditionalMessages.Type = this.AdditionalMessagesType(_j);
      switch (this.AdditionalMessagesType(_j)) {
        default: break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.StartMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.StopMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.PauseMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.ResumeMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.NextFrameMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetFrameMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetIntParameterMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetFloatParameterMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetBoolParameterMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetTriggerParameterMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetRootMotionEnabledMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetLookAtMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetMasterSpeedMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetUpdateIntervalMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetLODMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetSpringBoneMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.ResetSpringBoneMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetBipedIKDebugGroundMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetUnitOperatorDataMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetUnitOperatorDebugMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetUnitOperatorCalcMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessage>(_j).Value.UnPack() : null;
          break;
        case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetAdditionalParameterMessage:
          _o_AdditionalMessages.Value = this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessage>(_j).HasValue ? this.AdditionalMessages<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessage>(_j).Value.UnPack() : null;
          break;
      }
      _o.AdditionalMessages.Add(_o_AdditionalMessages);
    }
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessage> Pack(FlatBufferBuilder builder, StartMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessage>);
    var _configFilePath = _o.ConfigFilePath == null ? default(StringOffset) : builder.CreateString(_o.ConfigFilePath);
    var _workingDirectory = _o.WorkingDirectory == null ? default(StringOffset) : builder.CreateString(_o.WorkingDirectory);
    var _intParameters = default(VectorOffset);
    if (_o.IntParameters != null) {
      var __intParameters = new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage>[_o.IntParameters.Count];
      for (var _j = 0; _j < __intParameters.Length; ++_j) { __intParameters[_j] = GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage.Pack(builder, _o.IntParameters[_j]); }
      _intParameters = CreateIntParametersVector(builder, __intParameters);
    }
    var _floatParameters = default(VectorOffset);
    if (_o.FloatParameters != null) {
      var __floatParameters = new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage>[_o.FloatParameters.Count];
      for (var _j = 0; _j < __floatParameters.Length; ++_j) { __floatParameters[_j] = GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage.Pack(builder, _o.FloatParameters[_j]); }
      _floatParameters = CreateFloatParametersVector(builder, __floatParameters);
    }
    var _boolParameters = default(VectorOffset);
    if (_o.BoolParameters != null) {
      var __boolParameters = new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage>[_o.BoolParameters.Count];
      for (var _j = 0; _j < __boolParameters.Length; ++_j) { __boolParameters[_j] = GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage.Pack(builder, _o.BoolParameters[_j]); }
      _boolParameters = CreateBoolParametersVector(builder, __boolParameters);
    }
    var _triggerParameters = default(VectorOffset);
    if (_o.TriggerParameters != null) {
      var __triggerParameters = new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage>[_o.TriggerParameters.Count];
      for (var _j = 0; _j < __triggerParameters.Length; ++_j) { __triggerParameters[_j] = GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage.Pack(builder, _o.TriggerParameters[_j]); }
      _triggerParameters = CreateTriggerParametersVector(builder, __triggerParameters);
    }
    var _rootMotion = _o.RootMotion == null ? default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage>) : GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage.Pack(builder, _o.RootMotion);
    var _additional_messages_type = default(VectorOffset);
    if (_o.AdditionalMessages != null) {
      var __additional_messages_type = new GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType[_o.AdditionalMessages.Count];
      for (var _j = 0; _j < __additional_messages_type.Length; ++_j) { __additional_messages_type[_j] = _o.AdditionalMessages[_j].Type; }
      _additional_messages_type = CreateAdditionalMessagesTypeVector(builder, __additional_messages_type);
    }
    var _additional_messages = default(VectorOffset);
    if (_o.AdditionalMessages != null) {
      var __additional_messages = new int[_o.AdditionalMessages.Count];
      for (var _j = 0; _j < __additional_messages.Length; ++_j) { __additional_messages[_j] = GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion.Pack(builder,  _o.AdditionalMessages[_j]); }
      _additional_messages = CreateAdditionalMessagesVector(builder, __additional_messages);
    }
    return CreateStartMessage(
      builder,
      _configFilePath,
      _workingDirectory,
      _intParameters,
      _floatParameters,
      _boolParameters,
      _triggerParameters,
      _o.MasterSpeed,
      _o.PlayerType,
      _o.UpdateInterval,
      _rootMotion,
      _o.PauseOnStart,
      _additional_messages_type,
      _additional_messages);
  }
};

public class StartMessageT
{
  [Newtonsoft.Json.JsonProperty("configFilePath")]
  public string ConfigFilePath { get; set; }
  [Newtonsoft.Json.JsonProperty("workingDirectory")]
  public string WorkingDirectory { get; set; }
  [Newtonsoft.Json.JsonProperty("intParameters")]
  public List<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessageT> IntParameters { get; set; }
  [Newtonsoft.Json.JsonProperty("floatParameters")]
  public List<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessageT> FloatParameters { get; set; }
  [Newtonsoft.Json.JsonProperty("boolParameters")]
  public List<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessageT> BoolParameters { get; set; }
  [Newtonsoft.Json.JsonProperty("triggerParameters")]
  public List<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessageT> TriggerParameters { get; set; }
  [Newtonsoft.Json.JsonProperty("masterSpeed")]
  public float MasterSpeed { get; set; }
  [Newtonsoft.Json.JsonProperty("playerType")]
  public GenericEditor.Plugin.AnimationEditor.ToViewer.PlayerType PlayerType { get; set; }
  [Newtonsoft.Json.JsonProperty("updateInterval")]
  public int UpdateInterval { get; set; }
  [Newtonsoft.Json.JsonProperty("rootMotion")]
  public GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessageT RootMotion { get; set; }
  [Newtonsoft.Json.JsonProperty("pauseOnStart")]
  public bool PauseOnStart { get; set; }
  [Newtonsoft.Json.JsonProperty("additional_messages_type")]
  private GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType[] AdditionalMessagesType {
    get {
      if (this.AdditionalMessages == null) return null;
      var _o = new GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType[this.AdditionalMessages.Count];
      for (var _j = 0; _j < _o.Length; ++_j) { _o[_j] = this.AdditionalMessages[_j].Type; }
      return _o;
    }
    set {
      this.AdditionalMessages = new List<GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion>();
      for (var _j = 0; _j < value.Length; ++_j) {
        var _o = new GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion();
        _o.Type = value[_j];
        this.AdditionalMessages.Add(_o);
      }
    }
  }
  [Newtonsoft.Json.JsonProperty("additional_messages")]
  [Newtonsoft.Json.JsonConverter(typeof(GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion_JsonConverter))]
  public List<GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion> AdditionalMessages { get; set; }

  public StartMessageT() {
    this.ConfigFilePath = null;
    this.WorkingDirectory = null;
    this.IntParameters = null;
    this.FloatParameters = null;
    this.BoolParameters = null;
    this.TriggerParameters = null;
    this.MasterSpeed = 0.0f;
    this.PlayerType = GenericEditor.Plugin.AnimationEditor.ToViewer.PlayerType.StateMachine;
    this.UpdateInterval = 0;
    this.RootMotion = null;
    this.PauseOnStart = false;
    this.AdditionalMessages = null;
  }
}

public struct StopMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static StopMessage GetRootAsStopMessage(ByteBuffer _bb) { return GetRootAsStopMessage(_bb, new StopMessage()); }
  public static StopMessage GetRootAsStopMessage(ByteBuffer _bb, StopMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public StopMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int _dummy_ { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessage> CreateStopMessage(FlatBufferBuilder builder,
      int _dummy_ = 0) {
    builder.StartTable(1);
    StopMessage.Add_dummy_(builder, _dummy_);
    return StopMessage.EndStopMessage(builder);
  }

  public static void StartStopMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void Add_dummy_(FlatBufferBuilder builder, int Dummy_) { builder.AddInt(0, Dummy_, 0); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessage> EndStopMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessage>(o);
  }
  public StopMessageT UnPack() {
    var _o = new StopMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(StopMessageT _o) {
    _o._dummy_ = this._dummy_;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessage> Pack(FlatBufferBuilder builder, StopMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessage>);
    return CreateStopMessage(
      builder,
      _o._dummy_);
  }
};

public class StopMessageT
{
  [Newtonsoft.Json.JsonProperty("_dummy_")]
  public int _dummy_ { get; set; }

  public StopMessageT() {
    this._dummy_ = 0;
  }
}

public struct PauseMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static PauseMessage GetRootAsPauseMessage(ByteBuffer _bb) { return GetRootAsPauseMessage(_bb, new PauseMessage()); }
  public static PauseMessage GetRootAsPauseMessage(ByteBuffer _bb, PauseMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PauseMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int _dummy_ { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessage> CreatePauseMessage(FlatBufferBuilder builder,
      int _dummy_ = 0) {
    builder.StartTable(1);
    PauseMessage.Add_dummy_(builder, _dummy_);
    return PauseMessage.EndPauseMessage(builder);
  }

  public static void StartPauseMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void Add_dummy_(FlatBufferBuilder builder, int Dummy_) { builder.AddInt(0, Dummy_, 0); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessage> EndPauseMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessage>(o);
  }
  public PauseMessageT UnPack() {
    var _o = new PauseMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PauseMessageT _o) {
    _o._dummy_ = this._dummy_;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessage> Pack(FlatBufferBuilder builder, PauseMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessage>);
    return CreatePauseMessage(
      builder,
      _o._dummy_);
  }
};

public class PauseMessageT
{
  [Newtonsoft.Json.JsonProperty("_dummy_")]
  public int _dummy_ { get; set; }

  public PauseMessageT() {
    this._dummy_ = 0;
  }
}

public struct ResumeMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ResumeMessage GetRootAsResumeMessage(ByteBuffer _bb) { return GetRootAsResumeMessage(_bb, new ResumeMessage()); }
  public static ResumeMessage GetRootAsResumeMessage(ByteBuffer _bb, ResumeMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ResumeMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int _dummy_ { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessage> CreateResumeMessage(FlatBufferBuilder builder,
      int _dummy_ = 0) {
    builder.StartTable(1);
    ResumeMessage.Add_dummy_(builder, _dummy_);
    return ResumeMessage.EndResumeMessage(builder);
  }

  public static void StartResumeMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void Add_dummy_(FlatBufferBuilder builder, int Dummy_) { builder.AddInt(0, Dummy_, 0); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessage> EndResumeMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessage>(o);
  }
  public ResumeMessageT UnPack() {
    var _o = new ResumeMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ResumeMessageT _o) {
    _o._dummy_ = this._dummy_;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessage> Pack(FlatBufferBuilder builder, ResumeMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessage>);
    return CreateResumeMessage(
      builder,
      _o._dummy_);
  }
};

public class ResumeMessageT
{
  [Newtonsoft.Json.JsonProperty("_dummy_")]
  public int _dummy_ { get; set; }

  public ResumeMessageT() {
    this._dummy_ = 0;
  }
}

public struct NextFrameMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static NextFrameMessage GetRootAsNextFrameMessage(ByteBuffer _bb) { return GetRootAsNextFrameMessage(_bb, new NextFrameMessage()); }
  public static NextFrameMessage GetRootAsNextFrameMessage(ByteBuffer _bb, NextFrameMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public NextFrameMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int _dummy_ { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessage> CreateNextFrameMessage(FlatBufferBuilder builder,
      int _dummy_ = 0) {
    builder.StartTable(1);
    NextFrameMessage.Add_dummy_(builder, _dummy_);
    return NextFrameMessage.EndNextFrameMessage(builder);
  }

  public static void StartNextFrameMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void Add_dummy_(FlatBufferBuilder builder, int Dummy_) { builder.AddInt(0, Dummy_, 0); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessage> EndNextFrameMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessage>(o);
  }
  public NextFrameMessageT UnPack() {
    var _o = new NextFrameMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(NextFrameMessageT _o) {
    _o._dummy_ = this._dummy_;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessage> Pack(FlatBufferBuilder builder, NextFrameMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessage>);
    return CreateNextFrameMessage(
      builder,
      _o._dummy_);
  }
};

public class NextFrameMessageT
{
  [Newtonsoft.Json.JsonProperty("_dummy_")]
  public int _dummy_ { get; set; }

  public NextFrameMessageT() {
    this._dummy_ = 0;
  }
}

public struct SetFrameMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetFrameMessage GetRootAsSetFrameMessage(ByteBuffer _bb) { return GetRootAsSetFrameMessage(_bb, new SetFrameMessage()); }
  public static SetFrameMessage GetRootAsSetFrameMessage(ByteBuffer _bb, SetFrameMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetFrameMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float NormalizedFrame { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessage> CreateSetFrameMessage(FlatBufferBuilder builder,
      float normalizedFrame = 0.0f) {
    builder.StartTable(1);
    SetFrameMessage.AddNormalizedFrame(builder, normalizedFrame);
    return SetFrameMessage.EndSetFrameMessage(builder);
  }

  public static void StartSetFrameMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddNormalizedFrame(FlatBufferBuilder builder, float normalizedFrame) { builder.AddFloat(0, normalizedFrame, 0.0f); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessage> EndSetFrameMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessage>(o);
  }
  public SetFrameMessageT UnPack() {
    var _o = new SetFrameMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetFrameMessageT _o) {
    _o.NormalizedFrame = this.NormalizedFrame;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessage> Pack(FlatBufferBuilder builder, SetFrameMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessage>);
    return CreateSetFrameMessage(
      builder,
      _o.NormalizedFrame);
  }
};

public class SetFrameMessageT
{
  [Newtonsoft.Json.JsonProperty("normalizedFrame")]
  public float NormalizedFrame { get; set; }

  public SetFrameMessageT() {
    this.NormalizedFrame = 0.0f;
  }
}

public struct SetIntParameterMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetIntParameterMessage GetRootAsSetIntParameterMessage(ByteBuffer _bb) { return GetRootAsSetIntParameterMessage(_bb, new SetIntParameterMessage()); }
  public static SetIntParameterMessage GetRootAsSetIntParameterMessage(ByteBuffer _bb, SetIntParameterMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetIntParameterMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public int Value { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage> CreateSetIntParameterMessage(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      int value = 0) {
    builder.StartTable(2);
    SetIntParameterMessage.AddValue(builder, value);
    SetIntParameterMessage.AddName(builder, nameOffset);
    return SetIntParameterMessage.EndSetIntParameterMessage(builder);
  }

  public static void StartSetIntParameterMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, int value) { builder.AddInt(1, value, 0); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage> EndSetIntParameterMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage>(o);
  }
  public SetIntParameterMessageT UnPack() {
    var _o = new SetIntParameterMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetIntParameterMessageT _o) {
    _o.Name = this.Name;
    _o.Value = this.Value;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage> Pack(FlatBufferBuilder builder, SetIntParameterMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateSetIntParameterMessage(
      builder,
      _name,
      _o.Value);
  }
};

public class SetIntParameterMessageT
{
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public int Value { get; set; }

  public SetIntParameterMessageT() {
    this.Name = null;
    this.Value = 0;
  }
}

public struct SetFloatParameterMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetFloatParameterMessage GetRootAsSetFloatParameterMessage(ByteBuffer _bb) { return GetRootAsSetFloatParameterMessage(_bb, new SetFloatParameterMessage()); }
  public static SetFloatParameterMessage GetRootAsSetFloatParameterMessage(ByteBuffer _bb, SetFloatParameterMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetFloatParameterMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public float Value { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage> CreateSetFloatParameterMessage(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      float value = 0.0f) {
    builder.StartTable(2);
    SetFloatParameterMessage.AddValue(builder, value);
    SetFloatParameterMessage.AddName(builder, nameOffset);
    return SetFloatParameterMessage.EndSetFloatParameterMessage(builder);
  }

  public static void StartSetFloatParameterMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, float value) { builder.AddFloat(1, value, 0.0f); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage> EndSetFloatParameterMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage>(o);
  }
  public SetFloatParameterMessageT UnPack() {
    var _o = new SetFloatParameterMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetFloatParameterMessageT _o) {
    _o.Name = this.Name;
    _o.Value = this.Value;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage> Pack(FlatBufferBuilder builder, SetFloatParameterMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateSetFloatParameterMessage(
      builder,
      _name,
      _o.Value);
  }
};

public class SetFloatParameterMessageT
{
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public float Value { get; set; }

  public SetFloatParameterMessageT() {
    this.Name = null;
    this.Value = 0.0f;
  }
}

public struct SetBoolParameterMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetBoolParameterMessage GetRootAsSetBoolParameterMessage(ByteBuffer _bb) { return GetRootAsSetBoolParameterMessage(_bb, new SetBoolParameterMessage()); }
  public static SetBoolParameterMessage GetRootAsSetBoolParameterMessage(ByteBuffer _bb, SetBoolParameterMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetBoolParameterMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public bool Value { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage> CreateSetBoolParameterMessage(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      bool value = false) {
    builder.StartTable(2);
    SetBoolParameterMessage.AddName(builder, nameOffset);
    SetBoolParameterMessage.AddValue(builder, value);
    return SetBoolParameterMessage.EndSetBoolParameterMessage(builder);
  }

  public static void StartSetBoolParameterMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, bool value) { builder.AddBool(1, value, false); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage> EndSetBoolParameterMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage>(o);
  }
  public SetBoolParameterMessageT UnPack() {
    var _o = new SetBoolParameterMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetBoolParameterMessageT _o) {
    _o.Name = this.Name;
    _o.Value = this.Value;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage> Pack(FlatBufferBuilder builder, SetBoolParameterMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateSetBoolParameterMessage(
      builder,
      _name,
      _o.Value);
  }
};

public class SetBoolParameterMessageT
{
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public bool Value { get; set; }

  public SetBoolParameterMessageT() {
    this.Name = null;
    this.Value = false;
  }
}

public struct SetTriggerParameterMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetTriggerParameterMessage GetRootAsSetTriggerParameterMessage(ByteBuffer _bb) { return GetRootAsSetTriggerParameterMessage(_bb, new SetTriggerParameterMessage()); }
  public static SetTriggerParameterMessage GetRootAsSetTriggerParameterMessage(ByteBuffer _bb, SetTriggerParameterMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetTriggerParameterMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public bool Value { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage> CreateSetTriggerParameterMessage(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      bool value = false) {
    builder.StartTable(2);
    SetTriggerParameterMessage.AddName(builder, nameOffset);
    SetTriggerParameterMessage.AddValue(builder, value);
    return SetTriggerParameterMessage.EndSetTriggerParameterMessage(builder);
  }

  public static void StartSetTriggerParameterMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, bool value) { builder.AddBool(1, value, false); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage> EndSetTriggerParameterMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage>(o);
  }
  public SetTriggerParameterMessageT UnPack() {
    var _o = new SetTriggerParameterMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetTriggerParameterMessageT _o) {
    _o.Name = this.Name;
    _o.Value = this.Value;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage> Pack(FlatBufferBuilder builder, SetTriggerParameterMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateSetTriggerParameterMessage(
      builder,
      _name,
      _o.Value);
  }
};

public class SetTriggerParameterMessageT
{
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public bool Value { get; set; }

  public SetTriggerParameterMessageT() {
    this.Name = null;
    this.Value = false;
  }
}

public struct SetRootMotionEnabledMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetRootMotionEnabledMessage GetRootAsSetRootMotionEnabledMessage(ByteBuffer _bb) { return GetRootAsSetRootMotionEnabledMessage(_bb, new SetRootMotionEnabledMessage()); }
  public static SetRootMotionEnabledMessage GetRootAsSetRootMotionEnabledMessage(ByteBuffer _bb, SetRootMotionEnabledMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetRootMotionEnabledMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool RotateEnabled { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool TranslateEnabled { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage> CreateSetRootMotionEnabledMessage(FlatBufferBuilder builder,
      bool rotateEnabled = false,
      bool translateEnabled = false) {
    builder.StartTable(2);
    SetRootMotionEnabledMessage.AddTranslateEnabled(builder, translateEnabled);
    SetRootMotionEnabledMessage.AddRotateEnabled(builder, rotateEnabled);
    return SetRootMotionEnabledMessage.EndSetRootMotionEnabledMessage(builder);
  }

  public static void StartSetRootMotionEnabledMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddRotateEnabled(FlatBufferBuilder builder, bool rotateEnabled) { builder.AddBool(0, rotateEnabled, false); }
  public static void AddTranslateEnabled(FlatBufferBuilder builder, bool translateEnabled) { builder.AddBool(1, translateEnabled, false); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage> EndSetRootMotionEnabledMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage>(o);
  }
  public SetRootMotionEnabledMessageT UnPack() {
    var _o = new SetRootMotionEnabledMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetRootMotionEnabledMessageT _o) {
    _o.RotateEnabled = this.RotateEnabled;
    _o.TranslateEnabled = this.TranslateEnabled;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage> Pack(FlatBufferBuilder builder, SetRootMotionEnabledMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage>);
    return CreateSetRootMotionEnabledMessage(
      builder,
      _o.RotateEnabled,
      _o.TranslateEnabled);
  }
};

public class SetRootMotionEnabledMessageT
{
  [Newtonsoft.Json.JsonProperty("rotateEnabled")]
  public bool RotateEnabled { get; set; }
  [Newtonsoft.Json.JsonProperty("translateEnabled")]
  public bool TranslateEnabled { get; set; }

  public SetRootMotionEnabledMessageT() {
    this.RotateEnabled = false;
    this.TranslateEnabled = false;
  }
}

public struct SetLookAtMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetLookAtMessage GetRootAsSetLookAtMessage(ByteBuffer _bb) { return GetRootAsSetLookAtMessage(_bb, new SetLookAtMessage()); }
  public static SetLookAtMessage GetRootAsSetLookAtMessage(ByteBuffer _bb, SetLookAtMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetLookAtMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool DebugDrawEnable { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool FixedLookAtAreaVisible { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool ConstraintDrawEnable { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool LookAtEnable { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool CalculatePositionEnable { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool CalculateAxisEnable { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int ControlType { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SelectedChannel { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool TargetDrawEnable0 { get { int o = __p.__offset(20); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool TargetDrawEnable1 { get { int o = __p.__offset(22); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsPaused0 { get { int o = __p.__offset(24); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsPaused1 { get { int o = __p.__offset(26); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3? Position0 { get { int o = __p.__offset(28); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3?)(new GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3? Position1 { get { int o = __p.__offset(30); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3?)(new GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4? ChannelColor0 { get { int o = __p.__offset(32); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4?)(new GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4? ChannelColor1 { get { int o = __p.__offset(34); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4?)(new GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public bool GameObjectEnable { get { int o = __p.__offset(36); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3? GameObjectPosition { get { int o = __p.__offset(38); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3?)(new GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessage> CreateSetLookAtMessage(FlatBufferBuilder builder,
      bool debugDrawEnable = false,
      bool fixedLookAtAreaVisible = false,
      bool constraintDrawEnable = false,
      bool lookAtEnable = false,
      bool calculatePositionEnable = false,
      bool calculateAxisEnable = false,
      int controlType = 0,
      int selectedChannel = 0,
      bool targetDrawEnable0 = false,
      bool targetDrawEnable1 = false,
      bool isPaused0 = false,
      bool isPaused1 = false,
      GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3T position0 = null,
      GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3T position1 = null,
      GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4T channelColor0 = null,
      GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4T channelColor1 = null,
      bool gameObjectEnable = false,
      GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3T gameObjectPosition = null) {
    builder.StartTable(18);
    SetLookAtMessage.AddGameObjectPosition(builder, GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3.Pack(builder, gameObjectPosition));
    SetLookAtMessage.AddChannelColor1(builder, GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4.Pack(builder, channelColor1));
    SetLookAtMessage.AddChannelColor0(builder, GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4.Pack(builder, channelColor0));
    SetLookAtMessage.AddPosition1(builder, GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3.Pack(builder, position1));
    SetLookAtMessage.AddPosition0(builder, GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3.Pack(builder, position0));
    SetLookAtMessage.AddSelectedChannel(builder, selectedChannel);
    SetLookAtMessage.AddControlType(builder, controlType);
    SetLookAtMessage.AddGameObjectEnable(builder, gameObjectEnable);
    SetLookAtMessage.AddIsPaused1(builder, isPaused1);
    SetLookAtMessage.AddIsPaused0(builder, isPaused0);
    SetLookAtMessage.AddTargetDrawEnable1(builder, targetDrawEnable1);
    SetLookAtMessage.AddTargetDrawEnable0(builder, targetDrawEnable0);
    SetLookAtMessage.AddCalculateAxisEnable(builder, calculateAxisEnable);
    SetLookAtMessage.AddCalculatePositionEnable(builder, calculatePositionEnable);
    SetLookAtMessage.AddLookAtEnable(builder, lookAtEnable);
    SetLookAtMessage.AddConstraintDrawEnable(builder, constraintDrawEnable);
    SetLookAtMessage.AddFixedLookAtAreaVisible(builder, fixedLookAtAreaVisible);
    SetLookAtMessage.AddDebugDrawEnable(builder, debugDrawEnable);
    return SetLookAtMessage.EndSetLookAtMessage(builder);
  }

  public static void StartSetLookAtMessage(FlatBufferBuilder builder) { builder.StartTable(18); }
  public static void AddDebugDrawEnable(FlatBufferBuilder builder, bool debugDrawEnable) { builder.AddBool(0, debugDrawEnable, false); }
  public static void AddFixedLookAtAreaVisible(FlatBufferBuilder builder, bool fixedLookAtAreaVisible) { builder.AddBool(1, fixedLookAtAreaVisible, false); }
  public static void AddConstraintDrawEnable(FlatBufferBuilder builder, bool constraintDrawEnable) { builder.AddBool(2, constraintDrawEnable, false); }
  public static void AddLookAtEnable(FlatBufferBuilder builder, bool lookAtEnable) { builder.AddBool(3, lookAtEnable, false); }
  public static void AddCalculatePositionEnable(FlatBufferBuilder builder, bool calculatePositionEnable) { builder.AddBool(4, calculatePositionEnable, false); }
  public static void AddCalculateAxisEnable(FlatBufferBuilder builder, bool calculateAxisEnable) { builder.AddBool(5, calculateAxisEnable, false); }
  public static void AddControlType(FlatBufferBuilder builder, int controlType) { builder.AddInt(6, controlType, 0); }
  public static void AddSelectedChannel(FlatBufferBuilder builder, int selectedChannel) { builder.AddInt(7, selectedChannel, 0); }
  public static void AddTargetDrawEnable0(FlatBufferBuilder builder, bool targetDrawEnable0) { builder.AddBool(8, targetDrawEnable0, false); }
  public static void AddTargetDrawEnable1(FlatBufferBuilder builder, bool targetDrawEnable1) { builder.AddBool(9, targetDrawEnable1, false); }
  public static void AddIsPaused0(FlatBufferBuilder builder, bool isPaused0) { builder.AddBool(10, isPaused0, false); }
  public static void AddIsPaused1(FlatBufferBuilder builder, bool isPaused1) { builder.AddBool(11, isPaused1, false); }
  public static void AddPosition0(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3> position0Offset) { builder.AddStruct(12, position0Offset.Value, 0); }
  public static void AddPosition1(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3> position1Offset) { builder.AddStruct(13, position1Offset.Value, 0); }
  public static void AddChannelColor0(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4> channelColor0Offset) { builder.AddStruct(14, channelColor0Offset.Value, 0); }
  public static void AddChannelColor1(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4> channelColor1Offset) { builder.AddStruct(15, channelColor1Offset.Value, 0); }
  public static void AddGameObjectEnable(FlatBufferBuilder builder, bool gameObjectEnable) { builder.AddBool(16, gameObjectEnable, false); }
  public static void AddGameObjectPosition(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3> gameObjectPositionOffset) { builder.AddStruct(17, gameObjectPositionOffset.Value, 0); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessage> EndSetLookAtMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessage>(o);
  }
  public SetLookAtMessageT UnPack() {
    var _o = new SetLookAtMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetLookAtMessageT _o) {
    _o.DebugDrawEnable = this.DebugDrawEnable;
    _o.FixedLookAtAreaVisible = this.FixedLookAtAreaVisible;
    _o.ConstraintDrawEnable = this.ConstraintDrawEnable;
    _o.LookAtEnable = this.LookAtEnable;
    _o.CalculatePositionEnable = this.CalculatePositionEnable;
    _o.CalculateAxisEnable = this.CalculateAxisEnable;
    _o.ControlType = this.ControlType;
    _o.SelectedChannel = this.SelectedChannel;
    _o.TargetDrawEnable0 = this.TargetDrawEnable0;
    _o.TargetDrawEnable1 = this.TargetDrawEnable1;
    _o.IsPaused0 = this.IsPaused0;
    _o.IsPaused1 = this.IsPaused1;
    _o.Position0 = this.Position0.HasValue ? this.Position0.Value.UnPack() : null;
    _o.Position1 = this.Position1.HasValue ? this.Position1.Value.UnPack() : null;
    _o.ChannelColor0 = this.ChannelColor0.HasValue ? this.ChannelColor0.Value.UnPack() : null;
    _o.ChannelColor1 = this.ChannelColor1.HasValue ? this.ChannelColor1.Value.UnPack() : null;
    _o.GameObjectEnable = this.GameObjectEnable;
    _o.GameObjectPosition = this.GameObjectPosition.HasValue ? this.GameObjectPosition.Value.UnPack() : null;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessage> Pack(FlatBufferBuilder builder, SetLookAtMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessage>);
    return CreateSetLookAtMessage(
      builder,
      _o.DebugDrawEnable,
      _o.FixedLookAtAreaVisible,
      _o.ConstraintDrawEnable,
      _o.LookAtEnable,
      _o.CalculatePositionEnable,
      _o.CalculateAxisEnable,
      _o.ControlType,
      _o.SelectedChannel,
      _o.TargetDrawEnable0,
      _o.TargetDrawEnable1,
      _o.IsPaused0,
      _o.IsPaused1,
      _o.Position0,
      _o.Position1,
      _o.ChannelColor0,
      _o.ChannelColor1,
      _o.GameObjectEnable,
      _o.GameObjectPosition);
  }
};

public class SetLookAtMessageT
{
  [Newtonsoft.Json.JsonProperty("debugDrawEnable")]
  public bool DebugDrawEnable { get; set; }
  [Newtonsoft.Json.JsonProperty("fixedLookAtAreaVisible")]
  public bool FixedLookAtAreaVisible { get; set; }
  [Newtonsoft.Json.JsonProperty("constraintDrawEnable")]
  public bool ConstraintDrawEnable { get; set; }
  [Newtonsoft.Json.JsonProperty("lookAtEnable")]
  public bool LookAtEnable { get; set; }
  [Newtonsoft.Json.JsonProperty("calculatePositionEnable")]
  public bool CalculatePositionEnable { get; set; }
  [Newtonsoft.Json.JsonProperty("calculateAxisEnable")]
  public bool CalculateAxisEnable { get; set; }
  [Newtonsoft.Json.JsonProperty("controlType")]
  public int ControlType { get; set; }
  [Newtonsoft.Json.JsonProperty("selectedChannel")]
  public int SelectedChannel { get; set; }
  [Newtonsoft.Json.JsonProperty("targetDrawEnable0")]
  public bool TargetDrawEnable0 { get; set; }
  [Newtonsoft.Json.JsonProperty("targetDrawEnable1")]
  public bool TargetDrawEnable1 { get; set; }
  [Newtonsoft.Json.JsonProperty("isPaused0")]
  public bool IsPaused0 { get; set; }
  [Newtonsoft.Json.JsonProperty("isPaused1")]
  public bool IsPaused1 { get; set; }
  [Newtonsoft.Json.JsonProperty("position0")]
  public GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3T Position0 { get; set; }
  [Newtonsoft.Json.JsonProperty("position1")]
  public GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3T Position1 { get; set; }
  [Newtonsoft.Json.JsonProperty("channelColor0")]
  public GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4T ChannelColor0 { get; set; }
  [Newtonsoft.Json.JsonProperty("channelColor1")]
  public GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4T ChannelColor1 { get; set; }
  [Newtonsoft.Json.JsonProperty("gameObjectEnable")]
  public bool GameObjectEnable { get; set; }
  [Newtonsoft.Json.JsonProperty("gameObjectPosition")]
  public GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3T GameObjectPosition { get; set; }

  public SetLookAtMessageT() {
    this.DebugDrawEnable = false;
    this.FixedLookAtAreaVisible = false;
    this.ConstraintDrawEnable = false;
    this.LookAtEnable = false;
    this.CalculatePositionEnable = false;
    this.CalculateAxisEnable = false;
    this.ControlType = 0;
    this.SelectedChannel = 0;
    this.TargetDrawEnable0 = false;
    this.TargetDrawEnable1 = false;
    this.IsPaused0 = false;
    this.IsPaused1 = false;
    this.Position0 = new GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3T();
    this.Position1 = new GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3T();
    this.ChannelColor0 = new GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4T();
    this.ChannelColor1 = new GenericEditor.Plugin.AnimationEditor.ToViewer.Vector4T();
    this.GameObjectEnable = false;
    this.GameObjectPosition = new GenericEditor.Plugin.AnimationEditor.ToViewer.Vector3T();
  }
}

public struct SetMasterSpeedMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetMasterSpeedMessage GetRootAsSetMasterSpeedMessage(ByteBuffer _bb) { return GetRootAsSetMasterSpeedMessage(_bb, new SetMasterSpeedMessage()); }
  public static SetMasterSpeedMessage GetRootAsSetMasterSpeedMessage(ByteBuffer _bb, SetMasterSpeedMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetMasterSpeedMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float MasterSpeed { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessage> CreateSetMasterSpeedMessage(FlatBufferBuilder builder,
      float masterSpeed = 0.0f) {
    builder.StartTable(1);
    SetMasterSpeedMessage.AddMasterSpeed(builder, masterSpeed);
    return SetMasterSpeedMessage.EndSetMasterSpeedMessage(builder);
  }

  public static void StartSetMasterSpeedMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddMasterSpeed(FlatBufferBuilder builder, float masterSpeed) { builder.AddFloat(0, masterSpeed, 0.0f); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessage> EndSetMasterSpeedMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessage>(o);
  }
  public SetMasterSpeedMessageT UnPack() {
    var _o = new SetMasterSpeedMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetMasterSpeedMessageT _o) {
    _o.MasterSpeed = this.MasterSpeed;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessage> Pack(FlatBufferBuilder builder, SetMasterSpeedMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessage>);
    return CreateSetMasterSpeedMessage(
      builder,
      _o.MasterSpeed);
  }
};

public class SetMasterSpeedMessageT
{
  [Newtonsoft.Json.JsonProperty("masterSpeed")]
  public float MasterSpeed { get; set; }

  public SetMasterSpeedMessageT() {
    this.MasterSpeed = 0.0f;
  }
}

public struct SetUpdateIntervalMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetUpdateIntervalMessage GetRootAsSetUpdateIntervalMessage(ByteBuffer _bb) { return GetRootAsSetUpdateIntervalMessage(_bb, new SetUpdateIntervalMessage()); }
  public static SetUpdateIntervalMessage GetRootAsSetUpdateIntervalMessage(ByteBuffer _bb, SetUpdateIntervalMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetUpdateIntervalMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Interval { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessage> CreateSetUpdateIntervalMessage(FlatBufferBuilder builder,
      int interval = 0) {
    builder.StartTable(1);
    SetUpdateIntervalMessage.AddInterval(builder, interval);
    return SetUpdateIntervalMessage.EndSetUpdateIntervalMessage(builder);
  }

  public static void StartSetUpdateIntervalMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddInterval(FlatBufferBuilder builder, int interval) { builder.AddInt(0, interval, 0); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessage> EndSetUpdateIntervalMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessage>(o);
  }
  public SetUpdateIntervalMessageT UnPack() {
    var _o = new SetUpdateIntervalMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetUpdateIntervalMessageT _o) {
    _o.Interval = this.Interval;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessage> Pack(FlatBufferBuilder builder, SetUpdateIntervalMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessage>);
    return CreateSetUpdateIntervalMessage(
      builder,
      _o.Interval);
  }
};

public class SetUpdateIntervalMessageT
{
  [Newtonsoft.Json.JsonProperty("interval")]
  public int Interval { get; set; }

  public SetUpdateIntervalMessageT() {
    this.Interval = 0;
  }
}

public struct SetLODMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetLODMessage GetRootAsSetLODMessage(ByteBuffer _bb) { return GetRootAsSetLODMessage(_bb, new SetLODMessage()); }
  public static SetLODMessage GetRootAsSetLODMessage(ByteBuffer _bb, SetLODMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetLODMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsEnabled { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint MaxPriority { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Level { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessage> CreateSetLODMessage(FlatBufferBuilder builder,
      bool isEnabled = false,
      uint maxPriority = 0,
      uint level = 0) {
    builder.StartTable(3);
    SetLODMessage.AddLevel(builder, level);
    SetLODMessage.AddMaxPriority(builder, maxPriority);
    SetLODMessage.AddIsEnabled(builder, isEnabled);
    return SetLODMessage.EndSetLODMessage(builder);
  }

  public static void StartSetLODMessage(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddIsEnabled(FlatBufferBuilder builder, bool isEnabled) { builder.AddBool(0, isEnabled, false); }
  public static void AddMaxPriority(FlatBufferBuilder builder, uint maxPriority) { builder.AddUint(1, maxPriority, 0); }
  public static void AddLevel(FlatBufferBuilder builder, uint level) { builder.AddUint(2, level, 0); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessage> EndSetLODMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessage>(o);
  }
  public SetLODMessageT UnPack() {
    var _o = new SetLODMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetLODMessageT _o) {
    _o.IsEnabled = this.IsEnabled;
    _o.MaxPriority = this.MaxPriority;
    _o.Level = this.Level;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessage> Pack(FlatBufferBuilder builder, SetLODMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessage>);
    return CreateSetLODMessage(
      builder,
      _o.IsEnabled,
      _o.MaxPriority,
      _o.Level);
  }
};

public class SetLODMessageT
{
  [Newtonsoft.Json.JsonProperty("isEnabled")]
  public bool IsEnabled { get; set; }
  [Newtonsoft.Json.JsonProperty("maxPriority")]
  public uint MaxPriority { get; set; }
  [Newtonsoft.Json.JsonProperty("level")]
  public uint Level { get; set; }

  public SetLODMessageT() {
    this.IsEnabled = false;
    this.MaxPriority = 0;
    this.Level = 0;
  }
}

public struct SetSpringBoneMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetSpringBoneMessage GetRootAsSetSpringBoneMessage(ByteBuffer _bb) { return GetRootAsSetSpringBoneMessage(_bb, new SetSpringBoneMessage()); }
  public static SetSpringBoneMessage GetRootAsSetSpringBoneMessage(ByteBuffer _bb, SetSpringBoneMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetSpringBoneMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float MasterBlendWeight { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float MasterWindBlendWeight { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float MasterWindNoiseBlendWeight { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float WindDirectionX { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float WindDirectionY { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float WindDirectionZ { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float WindSpeed { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float WindStrength { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float WindNoiseScale { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessage> CreateSetSpringBoneMessage(FlatBufferBuilder builder,
      float masterBlendWeight = 0.0f,
      float masterWindBlendWeight = 0.0f,
      float masterWindNoiseBlendWeight = 0.0f,
      float windDirectionX = 0.0f,
      float windDirectionY = 0.0f,
      float windDirectionZ = 0.0f,
      float windSpeed = 0.0f,
      float windStrength = 0.0f,
      float windNoiseScale = 0.0f) {
    builder.StartTable(9);
    SetSpringBoneMessage.AddWindNoiseScale(builder, windNoiseScale);
    SetSpringBoneMessage.AddWindStrength(builder, windStrength);
    SetSpringBoneMessage.AddWindSpeed(builder, windSpeed);
    SetSpringBoneMessage.AddWindDirectionZ(builder, windDirectionZ);
    SetSpringBoneMessage.AddWindDirectionY(builder, windDirectionY);
    SetSpringBoneMessage.AddWindDirectionX(builder, windDirectionX);
    SetSpringBoneMessage.AddMasterWindNoiseBlendWeight(builder, masterWindNoiseBlendWeight);
    SetSpringBoneMessage.AddMasterWindBlendWeight(builder, masterWindBlendWeight);
    SetSpringBoneMessage.AddMasterBlendWeight(builder, masterBlendWeight);
    return SetSpringBoneMessage.EndSetSpringBoneMessage(builder);
  }

  public static void StartSetSpringBoneMessage(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddMasterBlendWeight(FlatBufferBuilder builder, float masterBlendWeight) { builder.AddFloat(0, masterBlendWeight, 0.0f); }
  public static void AddMasterWindBlendWeight(FlatBufferBuilder builder, float masterWindBlendWeight) { builder.AddFloat(1, masterWindBlendWeight, 0.0f); }
  public static void AddMasterWindNoiseBlendWeight(FlatBufferBuilder builder, float masterWindNoiseBlendWeight) { builder.AddFloat(2, masterWindNoiseBlendWeight, 0.0f); }
  public static void AddWindDirectionX(FlatBufferBuilder builder, float windDirectionX) { builder.AddFloat(3, windDirectionX, 0.0f); }
  public static void AddWindDirectionY(FlatBufferBuilder builder, float windDirectionY) { builder.AddFloat(4, windDirectionY, 0.0f); }
  public static void AddWindDirectionZ(FlatBufferBuilder builder, float windDirectionZ) { builder.AddFloat(5, windDirectionZ, 0.0f); }
  public static void AddWindSpeed(FlatBufferBuilder builder, float windSpeed) { builder.AddFloat(6, windSpeed, 0.0f); }
  public static void AddWindStrength(FlatBufferBuilder builder, float windStrength) { builder.AddFloat(7, windStrength, 0.0f); }
  public static void AddWindNoiseScale(FlatBufferBuilder builder, float windNoiseScale) { builder.AddFloat(8, windNoiseScale, 0.0f); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessage> EndSetSpringBoneMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessage>(o);
  }
  public SetSpringBoneMessageT UnPack() {
    var _o = new SetSpringBoneMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetSpringBoneMessageT _o) {
    _o.MasterBlendWeight = this.MasterBlendWeight;
    _o.MasterWindBlendWeight = this.MasterWindBlendWeight;
    _o.MasterWindNoiseBlendWeight = this.MasterWindNoiseBlendWeight;
    _o.WindDirectionX = this.WindDirectionX;
    _o.WindDirectionY = this.WindDirectionY;
    _o.WindDirectionZ = this.WindDirectionZ;
    _o.WindSpeed = this.WindSpeed;
    _o.WindStrength = this.WindStrength;
    _o.WindNoiseScale = this.WindNoiseScale;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessage> Pack(FlatBufferBuilder builder, SetSpringBoneMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessage>);
    return CreateSetSpringBoneMessage(
      builder,
      _o.MasterBlendWeight,
      _o.MasterWindBlendWeight,
      _o.MasterWindNoiseBlendWeight,
      _o.WindDirectionX,
      _o.WindDirectionY,
      _o.WindDirectionZ,
      _o.WindSpeed,
      _o.WindStrength,
      _o.WindNoiseScale);
  }
};

public class SetSpringBoneMessageT
{
  [Newtonsoft.Json.JsonProperty("masterBlendWeight")]
  public float MasterBlendWeight { get; set; }
  [Newtonsoft.Json.JsonProperty("masterWindBlendWeight")]
  public float MasterWindBlendWeight { get; set; }
  [Newtonsoft.Json.JsonProperty("masterWindNoiseBlendWeight")]
  public float MasterWindNoiseBlendWeight { get; set; }
  [Newtonsoft.Json.JsonProperty("windDirectionX")]
  public float WindDirectionX { get; set; }
  [Newtonsoft.Json.JsonProperty("windDirectionY")]
  public float WindDirectionY { get; set; }
  [Newtonsoft.Json.JsonProperty("windDirectionZ")]
  public float WindDirectionZ { get; set; }
  [Newtonsoft.Json.JsonProperty("windSpeed")]
  public float WindSpeed { get; set; }
  [Newtonsoft.Json.JsonProperty("windStrength")]
  public float WindStrength { get; set; }
  [Newtonsoft.Json.JsonProperty("windNoiseScale")]
  public float WindNoiseScale { get; set; }

  public SetSpringBoneMessageT() {
    this.MasterBlendWeight = 0.0f;
    this.MasterWindBlendWeight = 0.0f;
    this.MasterWindNoiseBlendWeight = 0.0f;
    this.WindDirectionX = 0.0f;
    this.WindDirectionY = 0.0f;
    this.WindDirectionZ = 0.0f;
    this.WindSpeed = 0.0f;
    this.WindStrength = 0.0f;
    this.WindNoiseScale = 0.0f;
  }
}

public struct ResetSpringBoneMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ResetSpringBoneMessage GetRootAsResetSpringBoneMessage(ByteBuffer _bb) { return GetRootAsResetSpringBoneMessage(_bb, new ResetSpringBoneMessage()); }
  public static ResetSpringBoneMessage GetRootAsResetSpringBoneMessage(ByteBuffer _bb, ResetSpringBoneMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ResetSpringBoneMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int _dummy_ { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessage> CreateResetSpringBoneMessage(FlatBufferBuilder builder,
      int _dummy_ = 0) {
    builder.StartTable(1);
    ResetSpringBoneMessage.Add_dummy_(builder, _dummy_);
    return ResetSpringBoneMessage.EndResetSpringBoneMessage(builder);
  }

  public static void StartResetSpringBoneMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void Add_dummy_(FlatBufferBuilder builder, int Dummy_) { builder.AddInt(0, Dummy_, 0); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessage> EndResetSpringBoneMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessage>(o);
  }
  public ResetSpringBoneMessageT UnPack() {
    var _o = new ResetSpringBoneMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ResetSpringBoneMessageT _o) {
    _o._dummy_ = this._dummy_;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessage> Pack(FlatBufferBuilder builder, ResetSpringBoneMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessage>);
    return CreateResetSpringBoneMessage(
      builder,
      _o._dummy_);
  }
};

public class ResetSpringBoneMessageT
{
  [Newtonsoft.Json.JsonProperty("_dummy_")]
  public int _dummy_ { get; set; }

  public ResetSpringBoneMessageT() {
    this._dummy_ = 0;
  }
}

public struct SetBipedIKDebugGroundMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetBipedIKDebugGroundMessage GetRootAsSetBipedIKDebugGroundMessage(ByteBuffer _bb) { return GetRootAsSetBipedIKDebugGroundMessage(_bb, new SetBipedIKDebugGroundMessage()); }
  public static SetBipedIKDebugGroundMessage GetRootAsSetBipedIKDebugGroundMessage(ByteBuffer _bb, SetBipedIKDebugGroundMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetBipedIKDebugGroundMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool UseDebugGround { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public float DebugGroundHeight { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float DebugGroundYaw { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float DebugGroundPitch { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float DebugGroundRoll { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool IsLocomotion { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public float RangeWeight { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float MaxGroundAngle { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)90.0f; } }
  public float MaxHeight { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float GroundWeight { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)1.0f; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessage> CreateSetBipedIKDebugGroundMessage(FlatBufferBuilder builder,
      bool useDebugGround = false,
      float debugGroundHeight = 0.0f,
      float debugGroundYaw = 0.0f,
      float debugGroundPitch = 0.0f,
      float debugGroundRoll = 0.0f,
      bool isLocomotion = false,
      float rangeWeight = 0.0f,
      float maxGroundAngle = 90.0f,
      float maxHeight = 0.0f,
      float groundWeight = 1.0f) {
    builder.StartTable(10);
    SetBipedIKDebugGroundMessage.AddGroundWeight(builder, groundWeight);
    SetBipedIKDebugGroundMessage.AddMaxHeight(builder, maxHeight);
    SetBipedIKDebugGroundMessage.AddMaxGroundAngle(builder, maxGroundAngle);
    SetBipedIKDebugGroundMessage.AddRangeWeight(builder, rangeWeight);
    SetBipedIKDebugGroundMessage.AddDebugGroundRoll(builder, debugGroundRoll);
    SetBipedIKDebugGroundMessage.AddDebugGroundPitch(builder, debugGroundPitch);
    SetBipedIKDebugGroundMessage.AddDebugGroundYaw(builder, debugGroundYaw);
    SetBipedIKDebugGroundMessage.AddDebugGroundHeight(builder, debugGroundHeight);
    SetBipedIKDebugGroundMessage.AddIsLocomotion(builder, isLocomotion);
    SetBipedIKDebugGroundMessage.AddUseDebugGround(builder, useDebugGround);
    return SetBipedIKDebugGroundMessage.EndSetBipedIKDebugGroundMessage(builder);
  }

  public static void StartSetBipedIKDebugGroundMessage(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddUseDebugGround(FlatBufferBuilder builder, bool useDebugGround) { builder.AddBool(0, useDebugGround, false); }
  public static void AddDebugGroundHeight(FlatBufferBuilder builder, float debugGroundHeight) { builder.AddFloat(1, debugGroundHeight, 0.0f); }
  public static void AddDebugGroundYaw(FlatBufferBuilder builder, float debugGroundYaw) { builder.AddFloat(2, debugGroundYaw, 0.0f); }
  public static void AddDebugGroundPitch(FlatBufferBuilder builder, float debugGroundPitch) { builder.AddFloat(3, debugGroundPitch, 0.0f); }
  public static void AddDebugGroundRoll(FlatBufferBuilder builder, float debugGroundRoll) { builder.AddFloat(4, debugGroundRoll, 0.0f); }
  public static void AddIsLocomotion(FlatBufferBuilder builder, bool isLocomotion) { builder.AddBool(5, isLocomotion, false); }
  public static void AddRangeWeight(FlatBufferBuilder builder, float rangeWeight) { builder.AddFloat(6, rangeWeight, 0.0f); }
  public static void AddMaxGroundAngle(FlatBufferBuilder builder, float maxGroundAngle) { builder.AddFloat(7, maxGroundAngle, 90.0f); }
  public static void AddMaxHeight(FlatBufferBuilder builder, float maxHeight) { builder.AddFloat(8, maxHeight, 0.0f); }
  public static void AddGroundWeight(FlatBufferBuilder builder, float groundWeight) { builder.AddFloat(9, groundWeight, 1.0f); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessage> EndSetBipedIKDebugGroundMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessage>(o);
  }
  public SetBipedIKDebugGroundMessageT UnPack() {
    var _o = new SetBipedIKDebugGroundMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetBipedIKDebugGroundMessageT _o) {
    _o.UseDebugGround = this.UseDebugGround;
    _o.DebugGroundHeight = this.DebugGroundHeight;
    _o.DebugGroundYaw = this.DebugGroundYaw;
    _o.DebugGroundPitch = this.DebugGroundPitch;
    _o.DebugGroundRoll = this.DebugGroundRoll;
    _o.IsLocomotion = this.IsLocomotion;
    _o.RangeWeight = this.RangeWeight;
    _o.MaxGroundAngle = this.MaxGroundAngle;
    _o.MaxHeight = this.MaxHeight;
    _o.GroundWeight = this.GroundWeight;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessage> Pack(FlatBufferBuilder builder, SetBipedIKDebugGroundMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessage>);
    return CreateSetBipedIKDebugGroundMessage(
      builder,
      _o.UseDebugGround,
      _o.DebugGroundHeight,
      _o.DebugGroundYaw,
      _o.DebugGroundPitch,
      _o.DebugGroundRoll,
      _o.IsLocomotion,
      _o.RangeWeight,
      _o.MaxGroundAngle,
      _o.MaxHeight,
      _o.GroundWeight);
  }
};

public class SetBipedIKDebugGroundMessageT
{
  [Newtonsoft.Json.JsonProperty("useDebugGround")]
  public bool UseDebugGround { get; set; }
  [Newtonsoft.Json.JsonProperty("debugGroundHeight")]
  public float DebugGroundHeight { get; set; }
  [Newtonsoft.Json.JsonProperty("debugGroundYaw")]
  public float DebugGroundYaw { get; set; }
  [Newtonsoft.Json.JsonProperty("debugGroundPitch")]
  public float DebugGroundPitch { get; set; }
  [Newtonsoft.Json.JsonProperty("debugGroundRoll")]
  public float DebugGroundRoll { get; set; }
  [Newtonsoft.Json.JsonProperty("isLocomotion")]
  public bool IsLocomotion { get; set; }
  [Newtonsoft.Json.JsonProperty("rangeWeight")]
  public float RangeWeight { get; set; }
  [Newtonsoft.Json.JsonProperty("maxGroundAngle")]
  public float MaxGroundAngle { get; set; }
  [Newtonsoft.Json.JsonProperty("maxHeight")]
  public float MaxHeight { get; set; }
  [Newtonsoft.Json.JsonProperty("groundWeight")]
  public float GroundWeight { get; set; }

  public SetBipedIKDebugGroundMessageT() {
    this.UseDebugGround = false;
    this.DebugGroundHeight = 0.0f;
    this.DebugGroundYaw = 0.0f;
    this.DebugGroundPitch = 0.0f;
    this.DebugGroundRoll = 0.0f;
    this.IsLocomotion = false;
    this.RangeWeight = 0.0f;
    this.MaxGroundAngle = 90.0f;
    this.MaxHeight = 0.0f;
    this.GroundWeight = 1.0f;
  }
}

public struct SetUnitOperatorDataMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetUnitOperatorDataMessage GetRootAsSetUnitOperatorDataMessage(ByteBuffer _bb) { return GetRootAsSetUnitOperatorDataMessage(_bb, new SetUnitOperatorDataMessage()); }
  public static SetUnitOperatorDataMessage GetRootAsSetUnitOperatorDataMessage(ByteBuffer _bb, SetUnitOperatorDataMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetUnitOperatorDataMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte Data(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int DataLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDataBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetDataBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetDataArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessage> CreateSetUnitOperatorDataMessage(FlatBufferBuilder builder,
      VectorOffset dataOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SetUnitOperatorDataMessage.AddData(builder, dataOffset);
    return SetUnitOperatorDataMessage.EndSetUnitOperatorDataMessage(builder);
  }

  public static void StartSetUnitOperatorDataMessage(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddData(FlatBufferBuilder builder, VectorOffset dataOffset) { builder.AddOffset(0, dataOffset.Value, 0); }
  public static VectorOffset CreateDataVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDataVectorBlock(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessage> EndSetUnitOperatorDataMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessage>(o);
  }
  public SetUnitOperatorDataMessageT UnPack() {
    var _o = new SetUnitOperatorDataMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetUnitOperatorDataMessageT _o) {
    _o.Data = new List<byte>();
    for (var _j = 0; _j < this.DataLength; ++_j) {_o.Data.Add(this.Data(_j));}
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessage> Pack(FlatBufferBuilder builder, SetUnitOperatorDataMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessage>);
    var _data = default(VectorOffset);
    if (_o.Data != null) {
      var __data = _o.Data.ToArray();
      _data = CreateDataVector(builder, __data);
    }
    return CreateSetUnitOperatorDataMessage(
      builder,
      _data);
  }
};

public class SetUnitOperatorDataMessageT
{
  [Newtonsoft.Json.JsonProperty("data")]
  public List<byte> Data { get; set; }

  public SetUnitOperatorDataMessageT() {
    this.Data = null;
  }
}

public struct SetUnitOperatorDebugMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetUnitOperatorDebugMessage GetRootAsSetUnitOperatorDebugMessage(ByteBuffer _bb) { return GetRootAsSetUnitOperatorDebugMessage(_bb, new SetUnitOperatorDebugMessage()); }
  public static SetUnitOperatorDebugMessage GetRootAsSetUnitOperatorDebugMessage(ByteBuffer _bb, SetUnitOperatorDebugMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetUnitOperatorDebugMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsVisible { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsTranslateVisible { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsRotation { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsTranslate { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsLand { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsDelay { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessage> CreateSetUnitOperatorDebugMessage(FlatBufferBuilder builder,
      bool isVisible = false,
      bool isTranslateVisible = false,
      bool isRotation = false,
      bool isTranslate = false,
      bool isLand = false,
      bool isDelay = false) {
    builder.StartTable(6);
    SetUnitOperatorDebugMessage.AddIsDelay(builder, isDelay);
    SetUnitOperatorDebugMessage.AddIsLand(builder, isLand);
    SetUnitOperatorDebugMessage.AddIsTranslate(builder, isTranslate);
    SetUnitOperatorDebugMessage.AddIsRotation(builder, isRotation);
    SetUnitOperatorDebugMessage.AddIsTranslateVisible(builder, isTranslateVisible);
    SetUnitOperatorDebugMessage.AddIsVisible(builder, isVisible);
    return SetUnitOperatorDebugMessage.EndSetUnitOperatorDebugMessage(builder);
  }

  public static void StartSetUnitOperatorDebugMessage(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddIsVisible(FlatBufferBuilder builder, bool isVisible) { builder.AddBool(0, isVisible, false); }
  public static void AddIsTranslateVisible(FlatBufferBuilder builder, bool isTranslateVisible) { builder.AddBool(1, isTranslateVisible, false); }
  public static void AddIsRotation(FlatBufferBuilder builder, bool isRotation) { builder.AddBool(2, isRotation, false); }
  public static void AddIsTranslate(FlatBufferBuilder builder, bool isTranslate) { builder.AddBool(3, isTranslate, false); }
  public static void AddIsLand(FlatBufferBuilder builder, bool isLand) { builder.AddBool(4, isLand, false); }
  public static void AddIsDelay(FlatBufferBuilder builder, bool isDelay) { builder.AddBool(5, isDelay, false); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessage> EndSetUnitOperatorDebugMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessage>(o);
  }
  public SetUnitOperatorDebugMessageT UnPack() {
    var _o = new SetUnitOperatorDebugMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetUnitOperatorDebugMessageT _o) {
    _o.IsVisible = this.IsVisible;
    _o.IsTranslateVisible = this.IsTranslateVisible;
    _o.IsRotation = this.IsRotation;
    _o.IsTranslate = this.IsTranslate;
    _o.IsLand = this.IsLand;
    _o.IsDelay = this.IsDelay;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessage> Pack(FlatBufferBuilder builder, SetUnitOperatorDebugMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessage>);
    return CreateSetUnitOperatorDebugMessage(
      builder,
      _o.IsVisible,
      _o.IsTranslateVisible,
      _o.IsRotation,
      _o.IsTranslate,
      _o.IsLand,
      _o.IsDelay);
  }
};

public class SetUnitOperatorDebugMessageT
{
  [Newtonsoft.Json.JsonProperty("isVisible")]
  public bool IsVisible { get; set; }
  [Newtonsoft.Json.JsonProperty("isTranslateVisible")]
  public bool IsTranslateVisible { get; set; }
  [Newtonsoft.Json.JsonProperty("isRotation")]
  public bool IsRotation { get; set; }
  [Newtonsoft.Json.JsonProperty("isTranslate")]
  public bool IsTranslate { get; set; }
  [Newtonsoft.Json.JsonProperty("isLand")]
  public bool IsLand { get; set; }
  [Newtonsoft.Json.JsonProperty("isDelay")]
  public bool IsDelay { get; set; }

  public SetUnitOperatorDebugMessageT() {
    this.IsVisible = false;
    this.IsTranslateVisible = false;
    this.IsRotation = false;
    this.IsTranslate = false;
    this.IsLand = false;
    this.IsDelay = false;
  }
}

public struct SetUnitOperatorCalcMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetUnitOperatorCalcMessage GetRootAsSetUnitOperatorCalcMessage(ByteBuffer _bb) { return GetRootAsSetUnitOperatorCalcMessage(_bb, new SetUnitOperatorCalcMessage()); }
  public static SetUnitOperatorCalcMessage GetRootAsSetUnitOperatorCalcMessage(ByteBuffer _bb, SetUnitOperatorCalcMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetUnitOperatorCalcMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string FootNode { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFootNodeBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetFootNodeBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetFootNodeArray() { return __p.__vector_as_array<byte>(4); }
  public int ChildIndex { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)-1; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessage> CreateSetUnitOperatorCalcMessage(FlatBufferBuilder builder,
      StringOffset footNodeOffset = default(StringOffset),
      int childIndex = -1) {
    builder.StartTable(2);
    SetUnitOperatorCalcMessage.AddChildIndex(builder, childIndex);
    SetUnitOperatorCalcMessage.AddFootNode(builder, footNodeOffset);
    return SetUnitOperatorCalcMessage.EndSetUnitOperatorCalcMessage(builder);
  }

  public static void StartSetUnitOperatorCalcMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFootNode(FlatBufferBuilder builder, StringOffset footNodeOffset) { builder.AddOffset(0, footNodeOffset.Value, 0); }
  public static void AddChildIndex(FlatBufferBuilder builder, int childIndex) { builder.AddInt(1, childIndex, -1); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessage> EndSetUnitOperatorCalcMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessage>(o);
  }
  public SetUnitOperatorCalcMessageT UnPack() {
    var _o = new SetUnitOperatorCalcMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetUnitOperatorCalcMessageT _o) {
    _o.FootNode = this.FootNode;
    _o.ChildIndex = this.ChildIndex;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessage> Pack(FlatBufferBuilder builder, SetUnitOperatorCalcMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessage>);
    var _footNode = _o.FootNode == null ? default(StringOffset) : builder.CreateString(_o.FootNode);
    return CreateSetUnitOperatorCalcMessage(
      builder,
      _footNode,
      _o.ChildIndex);
  }
};

public class SetUnitOperatorCalcMessageT
{
  [Newtonsoft.Json.JsonProperty("footNode")]
  public string FootNode { get; set; }
  [Newtonsoft.Json.JsonProperty("childIndex")]
  public int ChildIndex { get; set; }

  public SetUnitOperatorCalcMessageT() {
    this.FootNode = null;
    this.ChildIndex = -1;
  }
}

public struct SetAdditionalParameterMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetAdditionalParameterMessage GetRootAsSetAdditionalParameterMessage(ByteBuffer _bb) { return GetRootAsSetAdditionalParameterMessage(_bb, new SetAdditionalParameterMessage()); }
  public static SetAdditionalParameterMessage GetRootAsSetAdditionalParameterMessage(ByteBuffer _bb, SetAdditionalParameterMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetAdditionalParameterMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string StatePath { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStatePathBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetStatePathBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetStatePathArray() { return __p.__vector_as_array<byte>(4); }
  public string ParameterName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParameterNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetParameterNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetParameterNameArray() { return __p.__vector_as_array<byte>(6); }
  public float Value { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessage> CreateSetAdditionalParameterMessage(FlatBufferBuilder builder,
      StringOffset statePathOffset = default(StringOffset),
      StringOffset parameterNameOffset = default(StringOffset),
      float value = 0.0f) {
    builder.StartTable(3);
    SetAdditionalParameterMessage.AddValue(builder, value);
    SetAdditionalParameterMessage.AddParameterName(builder, parameterNameOffset);
    SetAdditionalParameterMessage.AddStatePath(builder, statePathOffset);
    return SetAdditionalParameterMessage.EndSetAdditionalParameterMessage(builder);
  }

  public static void StartSetAdditionalParameterMessage(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddStatePath(FlatBufferBuilder builder, StringOffset statePathOffset) { builder.AddOffset(0, statePathOffset.Value, 0); }
  public static void AddParameterName(FlatBufferBuilder builder, StringOffset parameterNameOffset) { builder.AddOffset(1, parameterNameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, float value) { builder.AddFloat(2, value, 0.0f); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessage> EndSetAdditionalParameterMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessage>(o);
  }
  public SetAdditionalParameterMessageT UnPack() {
    var _o = new SetAdditionalParameterMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SetAdditionalParameterMessageT _o) {
    _o.StatePath = this.StatePath;
    _o.ParameterName = this.ParameterName;
    _o.Value = this.Value;
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessage> Pack(FlatBufferBuilder builder, SetAdditionalParameterMessageT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessage>);
    var _statePath = _o.StatePath == null ? default(StringOffset) : builder.CreateString(_o.StatePath);
    var _parameterName = _o.ParameterName == null ? default(StringOffset) : builder.CreateString(_o.ParameterName);
    return CreateSetAdditionalParameterMessage(
      builder,
      _statePath,
      _parameterName,
      _o.Value);
  }
};

public class SetAdditionalParameterMessageT
{
  [Newtonsoft.Json.JsonProperty("statePath")]
  public string StatePath { get; set; }
  [Newtonsoft.Json.JsonProperty("parameterName")]
  public string ParameterName { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public float Value { get; set; }

  public SetAdditionalParameterMessageT() {
    this.StatePath = null;
    this.ParameterName = null;
    this.Value = 0.0f;
  }
}

public struct AnimationEditorToViewer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static AnimationEditorToViewer GetRootAsAnimationEditorToViewer(ByteBuffer _bb) { return GetRootAsAnimationEditorToViewer(_bb, new AnimationEditorToViewer()); }
  public static AnimationEditorToViewer GetRootAsAnimationEditorToViewer(ByteBuffer _bb, AnimationEditorToViewer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AnimationEditorToViewer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ModelInstanceName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetModelInstanceNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetModelInstanceNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetModelInstanceNameArray() { return __p.__vector_as_array<byte>(4); }
  public GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType MessageType { get { int o = __p.__offset(6); return o != 0 ? (GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType)__p.bb.Get(o + __p.bb_pos) : GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.NONE; } }
  public TTable? Message<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.AnimationEditorToViewer> CreateAnimationEditorToViewer(FlatBufferBuilder builder,
      StringOffset modelInstanceNameOffset = default(StringOffset),
      GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType message_type = GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.NONE,
      int messageOffset = 0) {
    builder.StartTable(3);
    AnimationEditorToViewer.AddMessage(builder, messageOffset);
    AnimationEditorToViewer.AddModelInstanceName(builder, modelInstanceNameOffset);
    AnimationEditorToViewer.AddMessageType(builder, message_type);
    return AnimationEditorToViewer.EndAnimationEditorToViewer(builder);
  }

  public static void StartAnimationEditorToViewer(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddModelInstanceName(FlatBufferBuilder builder, StringOffset modelInstanceNameOffset) { builder.AddOffset(0, modelInstanceNameOffset.Value, 0); }
  public static void AddMessageType(FlatBufferBuilder builder, GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType messageType) { builder.AddByte(1, (byte)messageType, 0); }
  public static void AddMessage(FlatBufferBuilder builder, int messageOffset) { builder.AddOffset(2, messageOffset, 0); }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.AnimationEditorToViewer> EndAnimationEditorToViewer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.AnimationEditorToViewer>(o);
  }
  public static void FinishAnimationEditorToViewerBuffer(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.AnimationEditorToViewer> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedAnimationEditorToViewerBuffer(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.AnimationEditorToViewer> offset) { builder.FinishSizePrefixed(offset.Value); }
  public AnimationEditorToViewerT UnPack() {
    var _o = new AnimationEditorToViewerT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AnimationEditorToViewerT _o) {
    _o.ModelInstanceName = this.ModelInstanceName;
    _o.Message = new GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion();
    _o.Message.Type = this.MessageType;
    switch (this.MessageType) {
      default: break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.StartMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.StartMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.StopMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.StopMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.PauseMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.PauseMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.ResumeMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.ResumeMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.NextFrameMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.NextFrameMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetFrameMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFrameMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetIntParameterMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetIntParameterMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetFloatParameterMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetFloatParameterMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetBoolParameterMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBoolParameterMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetTriggerParameterMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetTriggerParameterMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetRootMotionEnabledMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetRootMotionEnabledMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetLookAtMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLookAtMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetMasterSpeedMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetMasterSpeedMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetUpdateIntervalMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUpdateIntervalMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetLODMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetLODMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetSpringBoneMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetSpringBoneMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.ResetSpringBoneMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.ResetSpringBoneMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetBipedIKDebugGroundMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetBipedIKDebugGroundMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetUnitOperatorDataMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDataMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetUnitOperatorDebugMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorDebugMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetUnitOperatorCalcMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetUnitOperatorCalcMessage>().Value.UnPack() : null;
        break;
      case GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.SetAdditionalParameterMessage:
        _o.Message.Value = this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessage>().HasValue ? this.Message<GenericEditor.Plugin.AnimationEditor.ToViewer.SetAdditionalParameterMessage>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.AnimationEditorToViewer> Pack(FlatBufferBuilder builder, AnimationEditorToViewerT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.AnimationEditor.ToViewer.AnimationEditorToViewer>);
    var _modelInstanceName = _o.ModelInstanceName == null ? default(StringOffset) : builder.CreateString(_o.ModelInstanceName);
    var _message_type = _o.Message == null ? GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.NONE : _o.Message.Type;
    var _message = _o.Message == null ? 0 : GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion.Pack(builder, _o.Message);
    return CreateAnimationEditorToViewer(
      builder,
      _modelInstanceName,
      _message_type,
      _message);
  }
};

public class AnimationEditorToViewerT
{
  [Newtonsoft.Json.JsonProperty("modelInstanceName")]
  public string ModelInstanceName { get; set; }
  [Newtonsoft.Json.JsonProperty("message_type")]
  private GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType MessageType {
    get {
      return this.Message != null ? this.Message.Type : GenericEditor.Plugin.AnimationEditor.ToViewer.MessageType.NONE;
    }
    set {
      this.Message = new GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion();
      this.Message.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("message")]
  [Newtonsoft.Json.JsonConverter(typeof(GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion_JsonConverter))]
  public GenericEditor.Plugin.AnimationEditor.ToViewer.MessageTypeUnion Message { get; set; }

  public AnimationEditorToViewerT() {
    this.ModelInstanceName = null;
    this.Message = null;
  }

  public static AnimationEditorToViewerT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<AnimationEditorToViewerT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static AnimationEditorToViewerT DeserializeFromBinary(byte[] fbBuffer) {
    return AnimationEditorToViewer.GetRootAsAnimationEditorToViewer(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    AnimationEditorToViewer.FinishAnimationEditorToViewerBuffer(fbb, AnimationEditorToViewer.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
