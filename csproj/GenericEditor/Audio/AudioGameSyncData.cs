// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GenericEditor.Plugin.Audio
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct AudioGameSyncData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static AudioGameSyncData GetRootAsAudioGameSyncData(ByteBuffer _bb) { return GetRootAsAudioGameSyncData(_bb, new AudioGameSyncData()); }
  public static AudioGameSyncData GetRootAsAudioGameSyncData(ByteBuffer _bb, AudioGameSyncData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AudioGameSyncData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string GroupName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGroupNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetGroupNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetGroupNameArray() { return __p.__vector_as_array<byte>(4); }
  public string NameValue { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameValueBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameValueBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameValueArray() { return __p.__vector_as_array<byte>(6); }
  public float FloatValue { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<GenericEditor.Plugin.Audio.AudioGameSyncData> CreateAudioGameSyncData(FlatBufferBuilder builder,
      StringOffset groupNameOffset = default(StringOffset),
      StringOffset nameValueOffset = default(StringOffset),
      float floatValue = 0.0f) {
    builder.StartTable(3);
    AudioGameSyncData.AddFloatValue(builder, floatValue);
    AudioGameSyncData.AddNameValue(builder, nameValueOffset);
    AudioGameSyncData.AddGroupName(builder, groupNameOffset);
    return AudioGameSyncData.EndAudioGameSyncData(builder);
  }

  public static void StartAudioGameSyncData(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddGroupName(FlatBufferBuilder builder, StringOffset groupNameOffset) { builder.AddOffset(0, groupNameOffset.Value, 0); }
  public static void AddNameValue(FlatBufferBuilder builder, StringOffset nameValueOffset) { builder.AddOffset(1, nameValueOffset.Value, 0); }
  public static void AddFloatValue(FlatBufferBuilder builder, float floatValue) { builder.AddFloat(2, floatValue, 0.0f); }
  public static Offset<GenericEditor.Plugin.Audio.AudioGameSyncData> EndAudioGameSyncData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericEditor.Plugin.Audio.AudioGameSyncData>(o);
  }
  public static void FinishAudioGameSyncDataBuffer(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.Audio.AudioGameSyncData> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedAudioGameSyncDataBuffer(FlatBufferBuilder builder, Offset<GenericEditor.Plugin.Audio.AudioGameSyncData> offset) { builder.FinishSizePrefixed(offset.Value); }
  public AudioGameSyncDataT UnPack() {
    var _o = new AudioGameSyncDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AudioGameSyncDataT _o) {
    _o.GroupName = this.GroupName;
    _o.NameValue = this.NameValue;
    _o.FloatValue = this.FloatValue;
  }
  public static Offset<GenericEditor.Plugin.Audio.AudioGameSyncData> Pack(FlatBufferBuilder builder, AudioGameSyncDataT _o) {
    if (_o == null) return default(Offset<GenericEditor.Plugin.Audio.AudioGameSyncData>);
    var _groupName = _o.GroupName == null ? default(StringOffset) : builder.CreateString(_o.GroupName);
    var _nameValue = _o.NameValue == null ? default(StringOffset) : builder.CreateString(_o.NameValue);
    return CreateAudioGameSyncData(
      builder,
      _groupName,
      _nameValue,
      _o.FloatValue);
  }
};

public class AudioGameSyncDataT
{
  [Newtonsoft.Json.JsonProperty("groupName")]
  public string GroupName { get; set; }
  [Newtonsoft.Json.JsonProperty("nameValue")]
  public string NameValue { get; set; }
  [Newtonsoft.Json.JsonProperty("floatValue")]
  public float FloatValue { get; set; }

  public AudioGameSyncDataT() {
    this.GroupName = null;
    this.NameValue = null;
    this.FloatValue = 0.0f;
  }

  public static AudioGameSyncDataT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<AudioGameSyncDataT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static AudioGameSyncDataT DeserializeFromBinary(byte[] fbBuffer) {
    return AudioGameSyncData.GetRootAsAudioGameSyncData(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    AudioGameSyncData.FinishAudioGameSyncDataBuffer(fbb, AudioGameSyncData.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
