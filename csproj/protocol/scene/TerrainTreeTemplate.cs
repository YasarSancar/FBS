// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace gfl.protocol.scene.fb
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum TerrainTreeTemplateRequestType : byte
{
  Add = 0,
  Remove = 1,
  Replace = 2,
};

public struct TerrainTreeTemplate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static TerrainTreeTemplate GetRootAsTerrainTreeTemplate(ByteBuffer _bb) { return GetRootAsTerrainTreeTemplate(_bb, new TerrainTreeTemplate()); }
  public static TerrainTreeTemplate GetRootAsTerrainTreeTemplate(ByteBuffer _bb, TerrainTreeTemplate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TerrainTreeTemplate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gfl.protocol.scene.fb.TerrainTreeTemplateRequestType RequestType { get { int o = __p.__offset(4); return o != 0 ? (gfl.protocol.scene.fb.TerrainTreeTemplateRequestType)__p.bb.Get(o + __p.bb_pos) : gfl.protocol.scene.fb.TerrainTreeTemplateRequestType.Add; } }
  public string NodeId { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNodeIdBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNodeIdBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNodeIdArray() { return __p.__vector_as_array<byte>(6); }
  public gfl.scene.fb.TerrainTreeTemplate? Data { get { int o = __p.__offset(8); return o != 0 ? (gfl.scene.fb.TerrainTreeTemplate?)(new gfl.scene.fb.TerrainTreeTemplate()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<gfl.protocol.scene.fb.TerrainTreeTemplate> CreateTerrainTreeTemplate(FlatBufferBuilder builder,
      gfl.protocol.scene.fb.TerrainTreeTemplateRequestType requestType = gfl.protocol.scene.fb.TerrainTreeTemplateRequestType.Add,
      StringOffset nodeIdOffset = default(StringOffset),
      Offset<gfl.scene.fb.TerrainTreeTemplate> dataOffset = default(Offset<gfl.scene.fb.TerrainTreeTemplate>)) {
    builder.StartTable(3);
    TerrainTreeTemplate.AddData(builder, dataOffset);
    TerrainTreeTemplate.AddNodeId(builder, nodeIdOffset);
    TerrainTreeTemplate.AddRequestType(builder, requestType);
    return TerrainTreeTemplate.EndTerrainTreeTemplate(builder);
  }

  public static void StartTerrainTreeTemplate(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddRequestType(FlatBufferBuilder builder, gfl.protocol.scene.fb.TerrainTreeTemplateRequestType requestType) { builder.AddByte(0, (byte)requestType, 0); }
  public static void AddNodeId(FlatBufferBuilder builder, StringOffset nodeIdOffset) { builder.AddOffset(1, nodeIdOffset.Value, 0); }
  public static void AddData(FlatBufferBuilder builder, Offset<gfl.scene.fb.TerrainTreeTemplate> dataOffset) { builder.AddOffset(2, dataOffset.Value, 0); }
  public static Offset<gfl.protocol.scene.fb.TerrainTreeTemplate> EndTerrainTreeTemplate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.protocol.scene.fb.TerrainTreeTemplate>(o);
  }
  public static void FinishTerrainTreeTemplateBuffer(FlatBufferBuilder builder, Offset<gfl.protocol.scene.fb.TerrainTreeTemplate> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedTerrainTreeTemplateBuffer(FlatBufferBuilder builder, Offset<gfl.protocol.scene.fb.TerrainTreeTemplate> offset) { builder.FinishSizePrefixed(offset.Value); }
  public TerrainTreeTemplateT UnPack() {
    var _o = new TerrainTreeTemplateT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TerrainTreeTemplateT _o) {
    _o.RequestType = this.RequestType;
    _o.NodeId = this.NodeId;
    _o.Data = this.Data.HasValue ? this.Data.Value.UnPack() : null;
  }
  public static Offset<gfl.protocol.scene.fb.TerrainTreeTemplate> Pack(FlatBufferBuilder builder, TerrainTreeTemplateT _o) {
    if (_o == null) return default(Offset<gfl.protocol.scene.fb.TerrainTreeTemplate>);
    var _nodeId = _o.NodeId == null ? default(StringOffset) : builder.CreateString(_o.NodeId);
    var _data = _o.Data == null ? default(Offset<gfl.scene.fb.TerrainTreeTemplate>) : gfl.scene.fb.TerrainTreeTemplate.Pack(builder, _o.Data);
    return CreateTerrainTreeTemplate(
      builder,
      _o.RequestType,
      _nodeId,
      _data);
  }
};

public class TerrainTreeTemplateT
{
  [Newtonsoft.Json.JsonProperty("requestType")]
  public gfl.protocol.scene.fb.TerrainTreeTemplateRequestType RequestType { get; set; }
  [Newtonsoft.Json.JsonProperty("nodeId")]
  public string NodeId { get; set; }
  [Newtonsoft.Json.JsonProperty("data")]
  public gfl.scene.fb.TerrainTreeTemplateT Data { get; set; }

  public TerrainTreeTemplateT() {
    this.RequestType = gfl.protocol.scene.fb.TerrainTreeTemplateRequestType.Add;
    this.NodeId = null;
    this.Data = null;
  }

  public static TerrainTreeTemplateT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<TerrainTreeTemplateT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static TerrainTreeTemplateT DeserializeFromBinary(byte[] fbBuffer) {
    return TerrainTreeTemplate.GetRootAsTerrainTreeTemplate(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    TerrainTreeTemplate.FinishTerrainTreeTemplateBuffer(fbb, TerrainTreeTemplate.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
