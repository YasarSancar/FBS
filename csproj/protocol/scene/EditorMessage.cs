// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace gfl.protocol.scene.fb
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum EditorMessageData : byte
{
  NONE = 0,
  EditorStatus = 1,
  EditorSetting = 2,
};

public class EditorMessageDataUnion {
  public EditorMessageData Type { get; set; }
  public object Value { get; set; }

  public EditorMessageDataUnion() {
    this.Type = EditorMessageData.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public gfl.protocol.scene.fb.EditorStatusT AsEditorStatus() { return this.As<gfl.protocol.scene.fb.EditorStatusT>(); }
  public gfl.protocol.scene.fb.EditorSettingT AsEditorSetting() { return this.As<gfl.protocol.scene.fb.EditorSettingT>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, EditorMessageDataUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case EditorMessageData.EditorStatus: return gfl.protocol.scene.fb.EditorStatus.Pack(builder, _o.AsEditorStatus()).Value;
      case EditorMessageData.EditorSetting: return gfl.protocol.scene.fb.EditorSetting.Pack(builder, _o.AsEditorSetting()).Value;
    }
  }
}

public class EditorMessageDataUnion_JsonConverter : Newtonsoft.Json.JsonConverter {
  public override bool CanConvert(System.Type objectType) {
    return objectType == typeof(EditorMessageDataUnion) || objectType == typeof(System.Collections.Generic.List<EditorMessageDataUnion>);
  }
  public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = value as System.Collections.Generic.List<EditorMessageDataUnion>;
    if (_olist != null) {
      writer.WriteStartArray();
      foreach (var _o in _olist) { this.WriteJson(writer, _o, serializer); }
      writer.WriteEndArray();
    } else {
      this.WriteJson(writer, value as EditorMessageDataUnion, serializer);
    }
  }
  public void WriteJson(Newtonsoft.Json.JsonWriter writer, EditorMessageDataUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return;
    serializer.Serialize(writer, _o.Value);
  }
  public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = existingValue as System.Collections.Generic.List<EditorMessageDataUnion>;
    if (_olist != null) {
      for (var _j = 0; _j < _olist.Count; ++_j) {
        reader.Read();
        _olist[_j] = this.ReadJson(reader, _olist[_j], serializer);
      }
      reader.Read();
      return _olist;
    } else {
      return this.ReadJson(reader, existingValue as EditorMessageDataUnion, serializer);
    }
  }
  public EditorMessageDataUnion ReadJson(Newtonsoft.Json.JsonReader reader, EditorMessageDataUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return null;
    switch (_o.Type) {
      default: break;
      case EditorMessageData.EditorStatus: _o.Value = serializer.Deserialize<gfl.protocol.scene.fb.EditorStatusT>(reader); break;
      case EditorMessageData.EditorSetting: _o.Value = serializer.Deserialize<gfl.protocol.scene.fb.EditorSettingT>(reader); break;
    }
    return _o;
  }
}

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum EditorStatusType : uint
{
  EditMode = 0,
  PlayMode = 1,
  PlayModeWithPause = 2,
};

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum EditorSettingType : byte
{
  GridVisible = 0,
  IconEnable = 1,
  SceneControllerVisible = 2,
  CollisionVisible = 3,
  MultiViewportEnable = 4,
  SelectUIEnable = 5,
};

public struct EditorStatus : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EditorStatus GetRootAsEditorStatus(ByteBuffer _bb) { return GetRootAsEditorStatus(_bb, new EditorStatus()); }
  public static EditorStatus GetRootAsEditorStatus(ByteBuffer _bb, EditorStatus obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EditorStatus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gfl.protocol.scene.fb.EditorStatusType Type { get { int o = __p.__offset(4); return o != 0 ? (gfl.protocol.scene.fb.EditorStatusType)__p.bb.GetUint(o + __p.bb_pos) : gfl.protocol.scene.fb.EditorStatusType.EditMode; } }

  public static Offset<gfl.protocol.scene.fb.EditorStatus> CreateEditorStatus(FlatBufferBuilder builder,
      gfl.protocol.scene.fb.EditorStatusType type = gfl.protocol.scene.fb.EditorStatusType.EditMode) {
    builder.StartTable(1);
    EditorStatus.AddType(builder, type);
    return EditorStatus.EndEditorStatus(builder);
  }

  public static void StartEditorStatus(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddType(FlatBufferBuilder builder, gfl.protocol.scene.fb.EditorStatusType type) { builder.AddUint(0, (uint)type, 0); }
  public static Offset<gfl.protocol.scene.fb.EditorStatus> EndEditorStatus(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.protocol.scene.fb.EditorStatus>(o);
  }
  public EditorStatusT UnPack() {
    var _o = new EditorStatusT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EditorStatusT _o) {
    _o.Type = this.Type;
  }
  public static Offset<gfl.protocol.scene.fb.EditorStatus> Pack(FlatBufferBuilder builder, EditorStatusT _o) {
    if (_o == null) return default(Offset<gfl.protocol.scene.fb.EditorStatus>);
    return CreateEditorStatus(
      builder,
      _o.Type);
  }
};

public class EditorStatusT
{
  [Newtonsoft.Json.JsonProperty("type")]
  public gfl.protocol.scene.fb.EditorStatusType Type { get; set; }

  public EditorStatusT() {
    this.Type = gfl.protocol.scene.fb.EditorStatusType.EditMode;
  }
}

public struct EditorSetting : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EditorSetting GetRootAsEditorSetting(ByteBuffer _bb) { return GetRootAsEditorSetting(_bb, new EditorSetting()); }
  public static EditorSetting GetRootAsEditorSetting(ByteBuffer _bb, EditorSetting obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EditorSetting __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gfl.protocol.scene.fb.EditorSettingType Type { get { int o = __p.__offset(4); return o != 0 ? (gfl.protocol.scene.fb.EditorSettingType)__p.bb.Get(o + __p.bb_pos) : gfl.protocol.scene.fb.EditorSettingType.GridVisible; } }
  public uint Value { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<gfl.protocol.scene.fb.EditorSetting> CreateEditorSetting(FlatBufferBuilder builder,
      gfl.protocol.scene.fb.EditorSettingType type = gfl.protocol.scene.fb.EditorSettingType.GridVisible,
      uint value = 0) {
    builder.StartTable(2);
    EditorSetting.AddValue(builder, value);
    EditorSetting.AddType(builder, type);
    return EditorSetting.EndEditorSetting(builder);
  }

  public static void StartEditorSetting(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddType(FlatBufferBuilder builder, gfl.protocol.scene.fb.EditorSettingType type) { builder.AddByte(0, (byte)type, 0); }
  public static void AddValue(FlatBufferBuilder builder, uint value) { builder.AddUint(1, value, 0); }
  public static Offset<gfl.protocol.scene.fb.EditorSetting> EndEditorSetting(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.protocol.scene.fb.EditorSetting>(o);
  }
  public EditorSettingT UnPack() {
    var _o = new EditorSettingT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EditorSettingT _o) {
    _o.Type = this.Type;
    _o.Value = this.Value;
  }
  public static Offset<gfl.protocol.scene.fb.EditorSetting> Pack(FlatBufferBuilder builder, EditorSettingT _o) {
    if (_o == null) return default(Offset<gfl.protocol.scene.fb.EditorSetting>);
    return CreateEditorSetting(
      builder,
      _o.Type,
      _o.Value);
  }
};

public class EditorSettingT
{
  [Newtonsoft.Json.JsonProperty("type")]
  public gfl.protocol.scene.fb.EditorSettingType Type { get; set; }
  [Newtonsoft.Json.JsonProperty("value")]
  public uint Value { get; set; }

  public EditorSettingT() {
    this.Type = gfl.protocol.scene.fb.EditorSettingType.GridVisible;
    this.Value = 0;
  }
}

public struct EditorMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EditorMessage GetRootAsEditorMessage(ByteBuffer _bb) { return GetRootAsEditorMessage(_bb, new EditorMessage()); }
  public static EditorMessage GetRootAsEditorMessage(ByteBuffer _bb, EditorMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EditorMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gfl.protocol.scene.fb.EditorMessageData DataType { get { int o = __p.__offset(4); return o != 0 ? (gfl.protocol.scene.fb.EditorMessageData)__p.bb.Get(o + __p.bb_pos) : gfl.protocol.scene.fb.EditorMessageData.NONE; } }
  public TTable? Data<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<gfl.protocol.scene.fb.EditorMessage> CreateEditorMessage(FlatBufferBuilder builder,
      gfl.protocol.scene.fb.EditorMessageData data_type = gfl.protocol.scene.fb.EditorMessageData.NONE,
      int dataOffset = 0) {
    builder.StartTable(2);
    EditorMessage.AddData(builder, dataOffset);
    EditorMessage.AddDataType(builder, data_type);
    return EditorMessage.EndEditorMessage(builder);
  }

  public static void StartEditorMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddDataType(FlatBufferBuilder builder, gfl.protocol.scene.fb.EditorMessageData dataType) { builder.AddByte(0, (byte)dataType, 0); }
  public static void AddData(FlatBufferBuilder builder, int dataOffset) { builder.AddOffset(1, dataOffset, 0); }
  public static Offset<gfl.protocol.scene.fb.EditorMessage> EndEditorMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<gfl.protocol.scene.fb.EditorMessage>(o);
  }
  public static void FinishEditorMessageBuffer(FlatBufferBuilder builder, Offset<gfl.protocol.scene.fb.EditorMessage> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedEditorMessageBuffer(FlatBufferBuilder builder, Offset<gfl.protocol.scene.fb.EditorMessage> offset) { builder.FinishSizePrefixed(offset.Value); }
  public EditorMessageT UnPack() {
    var _o = new EditorMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EditorMessageT _o) {
    _o.Data = new gfl.protocol.scene.fb.EditorMessageDataUnion();
    _o.Data.Type = this.DataType;
    switch (this.DataType) {
      default: break;
      case gfl.protocol.scene.fb.EditorMessageData.EditorStatus:
        _o.Data.Value = this.Data<gfl.protocol.scene.fb.EditorStatus>().HasValue ? this.Data<gfl.protocol.scene.fb.EditorStatus>().Value.UnPack() : null;
        break;
      case gfl.protocol.scene.fb.EditorMessageData.EditorSetting:
        _o.Data.Value = this.Data<gfl.protocol.scene.fb.EditorSetting>().HasValue ? this.Data<gfl.protocol.scene.fb.EditorSetting>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<gfl.protocol.scene.fb.EditorMessage> Pack(FlatBufferBuilder builder, EditorMessageT _o) {
    if (_o == null) return default(Offset<gfl.protocol.scene.fb.EditorMessage>);
    var _data_type = _o.Data == null ? gfl.protocol.scene.fb.EditorMessageData.NONE : _o.Data.Type;
    var _data = _o.Data == null ? 0 : gfl.protocol.scene.fb.EditorMessageDataUnion.Pack(builder, _o.Data);
    return CreateEditorMessage(
      builder,
      _data_type,
      _data);
  }
};

public class EditorMessageT
{
  [Newtonsoft.Json.JsonProperty("data_type")]
  private gfl.protocol.scene.fb.EditorMessageData DataType {
    get {
      return this.Data != null ? this.Data.Type : gfl.protocol.scene.fb.EditorMessageData.NONE;
    }
    set {
      this.Data = new gfl.protocol.scene.fb.EditorMessageDataUnion();
      this.Data.Type = value;
    }
  }
  [Newtonsoft.Json.JsonProperty("data")]
  [Newtonsoft.Json.JsonConverter(typeof(gfl.protocol.scene.fb.EditorMessageDataUnion_JsonConverter))]
  public gfl.protocol.scene.fb.EditorMessageDataUnion Data { get; set; }

  public EditorMessageT() {
    this.Data = null;
  }

  public static EditorMessageT DeserializeFromJson(string jsonText) {
    return Newtonsoft.Json.JsonConvert.DeserializeObject<EditorMessageT>(jsonText);
  }
  public string SerializeToJson() {
    return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
  }
  public static EditorMessageT DeserializeFromBinary(byte[] fbBuffer) {
    return EditorMessage.GetRootAsEditorMessage(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    EditorMessage.FinishEditorMessageBuffer(fbb, EditorMessage.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
